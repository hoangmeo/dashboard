{"version":3,"sources":["../../src/storeUtils.ts","../../src/directives.ts","../../src/fragments.ts","../../src/util/assign.ts","../../src/getFromAST.ts","../../src/util/filterInPlace.ts","../../src/transform.ts","../../src/util/canUse.ts","../../src/util/cloneDeep.ts","../../src/util/environment.ts","../../src/util/errorHandling.ts","../../src/util/maybeDeepFreeze.ts","../../src/util/mergeDeep.ts","../../src/util/warnOnce.ts","../../src/invariant.ts","../node_modules/lodash/_baseAssignValue.js","../../src/zenObservable.ts","../node_modules/graphql/language/visitor.mjs","../node_modules/redux-form/es/events/isEvent.js","../node_modules/lodash/identity.js","../node_modules/lodash/_isKey.js","../node_modules/is-promise/index.js","../node_modules/graphql/jsutils/defineToJSON.mjs","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","../node_modules/graphql/language/blockString.mjs","../../src/equality.ts","../../src/linkUtils.ts","../../src/link.ts","../../src/components/MessageBar/MessageBar.types.ts","../node_modules/invariant/browser.js","../node_modules/redux-form/es/ReduxFormContext.js","../node_modules/lodash/_assignMergeValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_getPrototype.js","../node_modules/lodash/_safeGet.js","../node_modules/lodash/keysIn.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/react-select/dist/react-select.browser.esm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/graphql-tag/src/index.js","../../src/core/networkStatus.ts","../../src/util/Observable.ts","../../src/util/arrays.ts","../../src/errors/ApolloError.ts","../../src/core/types.ts","../../src/core/ObservableQuery.ts","../../src/data/mutations.ts","../../src/data/queries.ts","../../src/core/LocalState.ts","../../src/util/capitalizeFirstLetter.ts","../../src/util/observables.ts","../../src/core/QueryManager.ts","../../src/data/store.ts","../../src/ApolloClient.ts","../../src/version.ts","../node_modules/zen-observable/index.js","../node_modules/zen-observable/lib/Observable.js","../node_modules/fast-json-stable-stringify/index.js","../node_modules/lodash/merge.js","../node_modules/lodash/_baseMerge.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_baseMergeDeep.js","../node_modules/lodash/_cloneBuffer.js","../node_modules/lodash/_cloneTypedArray.js","../node_modules/lodash/_cloneArrayBuffer.js","../node_modules/lodash/_initCloneObject.js","../node_modules/lodash/_baseCreate.js","../node_modules/lodash/isArrayLikeObject.js","../node_modules/lodash/isPlainObject.js","../node_modules/lodash/toPlainObject.js","../node_modules/lodash/_copyObject.js","../node_modules/lodash/_assignValue.js","../node_modules/lodash/_baseKeysIn.js","../node_modules/lodash/_nativeKeysIn.js","../node_modules/lodash/_createAssigner.js","../node_modules/lodash/_baseRest.js","../node_modules/lodash/_overRest.js","../node_modules/lodash/_apply.js","../node_modules/lodash/_setToString.js","../node_modules/lodash/_baseSetToString.js","../node_modules/lodash/constant.js","../node_modules/lodash/_shortOut.js","../node_modules/lodash/_isIterateeCall.js","../node_modules/lodash/mapValues.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/redux-form/es/util/isHotReloading.js","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/polyfills/symbols.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs","../../src/utils.ts","../../src/types/Cache.ts","../../src/cache.ts","../../src/slot.ts","../../src/context.ts","../../src/entry.ts","../../src/key-trie.ts","../../src/index.ts","../../src/fragmentMatcher.ts","../../src/depTrackingCache.ts","../../src/readFromStore.ts","../../src/objectCache.ts","../../src/writeToStore.ts","../../src/inMemoryCache.ts","../node_modules/graphql/language/printer.mjs","../../src/httpLink.ts","../node_modules/redux-form/es/actions.js","../node_modules/redux-form/es/asyncValidation.js","../node_modules/redux-form/es/defaultShouldAsyncValidate.js","../node_modules/redux-form/es/defaultShouldValidate.js","../node_modules/redux-form/es/defaultShouldError.js","../node_modules/redux-form/es/defaultShouldWarn.js","../node_modules/redux-form/es/events/silenceEvent.js","../node_modules/redux-form/es/events/silenceEvents.js","../node_modules/redux-form/es/generateValidator.js","../node_modules/es6-error/es6/index.js","../node_modules/redux-form/es/SubmissionError.js","../node_modules/redux-form/es/handleSubmit.js","../node_modules/redux-form/es/hasError.js","../node_modules/redux-form/es/util/getDisplayName.js","../node_modules/redux-form/es/createReduxForm.js","../node_modules/redux-form/es/reduxForm.js","../node_modules/redux-form/es/selectors/isValid.js","../node_modules/redux-form/es/createFieldProps.js","../node_modules/redux-form/es/events/getValue.js","../node_modules/redux-form/es/isReactNative.js","../node_modules/redux-form/es/events/onChangeValue.js","../node_modules/redux-form/es/util/validateComponentProp.js","../node_modules/redux-form/es/ConnectedField.js","../node_modules/redux-form/es/util/eventConsts.js","../node_modules/redux-form/es/util/shallowCompare.js","../node_modules/redux-form/es/util/prefixName.js","../node_modules/redux-form/es/createField.js","../node_modules/redux-form/es/Field.js","../../src/utilities.ts","../../src/slots.tsx","../../src/createComponent.tsx","../../src/components/Stack/StackUtils.ts","../../src/components/Stack/Stack.styles.ts","../../src/components/Stack/StackItem/StackItem.styles.ts","../../src/components/Stack/StackItem/StackItem.tsx","../../src/components/Stack/Stack.tsx","../../src/components/MessageBar/MessageBar.base.tsx","../../src/components/MessageBar/MessageBar.styles.ts","../../src/components/MessageBar/MessageBar.tsx"],"names":["valueToObjectRepresentation","argObj","name","value","variables","kind","isIntValue","isFloatValue","Number","isBooleanValue","isStringValue","isObjectValue","fields","map","obj","isVariable","variableValue","isListValue","values","listValue","nestedArgArrayObj","isEnumValue","isNullValue","storeKeyNameFromField","field","directivesObj","directives","forEach","directive","arguments","length","getStoreKeyName","KNOWN_DIRECTIVES","fieldName","args","filterKeys","sort","key","JSON","stringify","completeFieldName","stringifiedArgs","Object","keys","indexOf","argumentsObjectFromField","resultKeyNameFromField","alias","isField","selection","isInlineFragment","isIdValue","idObject","type","generated","toIdValue","idConfig","id","typename","undefined","isJsonValue","jsonObject","getDirectiveInfoFromField","shouldInclude","filter","isInclusionDirective","directiveArguments","ifArgument","ifValue","every","evaledValue","hasDirectives","names","doc","Directive","node","push","getDirectiveNames","some","hasClientExports","document","getFragmentQueryDocument","fragmentName","actualFragmentName","fragments","definitions","definition","operation","selectionSet","selections","assign","target","sources","source","checkDocument","operations","d","getOperationDefinition","getOperationName","x","getFragmentDefinitions","getQueryDefinition","queryDef","getMainDefinition","queryDoc","fragmentDefinition","createFragmentMap","symTable","fragment","getDefaultValues","variableDefinitions","defaultValues","defaultValue","variable","defaultValueObj","filterInPlace","array","test","context","elem","i","call","this","TYPENAME_FIELD","nullIfDocIsEmpty","isEmpty","op","fragmentDef","getFragmentDefinition","getDirectiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","create","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","Variable","enter","_key","parent","Field","remove","arg","getAllFragmentSpreadsFromSelectionSet","allFragments","frag","FragmentSpread","v","config","argMatcher","argument","aConfig","getArgumentMatcher","OperationDefinition","varDef","argConfig","Argument","removeArgumentsFromDocument","fs","def","FragmentDefinition","removeFragmentSpreadFromDocument","addTypenameToDocument","SelectionSet","lastIndexOf","connectionRemoveConfig","willRemove","removeConnectionDirectiveFromDocument","buildQueryFromSelectionSet","removeClientSetsFromDocument","canUseWeakMap","WeakMap","navigator","product","toString","cloneDeep","cloneDeepHelper","val","seen","has","get","slice","set","child","getPrototypeOf","Map","isEnv","env","process","isProduction","isTest","tryFunctionOrLogError","f","e","console","error","graphQLResultHasError","result","errors","maybeDeepFreeze","Symbol","deepFreeze","o","freeze","getOwnPropertyNames","prop","isFrozen","hasOwnProperty","mergeDeep","mergeDeepArray","count","pastCopies","shallowCopyForMerge","mergeHelper","isObject","isExtensible","sourceKey","sourceValue","targetValue","Array","isArray","__proto__","setPrototypeOf","message","genericMessage","framesToPop","InvariantError","prototype","Error","invariant","condition","wrapConsoleMethod","method","apply","warn","processStub","Function","atLeastWeTried","defineProperty","require","module","exports","object","Observable","QueryDocumentKeys","Name","Document","VariableDefinition","InlineFragment","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","visit","root","visitor","visitorKeys","stack","inArray","index","edits","path","ancestors","newRoot","isLeaving","isEdited","pop","clone","_i2","_Object$keys2","k","editOffset","ii","editKey","editValue","splice","prev","_visitorKeys$node$kin","isNode","concat","inspect","visitFn","getVisitFn","kindVisitor","kindSpecificVisitor","leave","specificVisitor","specificKindVisitor","isEvent","candidate","stopPropagation","preventDefault","isSymbol","reIsDeepProp","reIsPlainProp","then","defineToJSON","classObject","fn","toJSON","nodejsCustomInspectSymbol","Location","startToken","endToken","start","end","Token","line","column","next","maybeNode","_typeof","iterator","constructor","formatValue","seenValues","previouslySeenValues","customInspectFn","String","getCustomFn","customValue","len","Math","min","remaining","items","join","formatArray","tag","replace","getObjectTag","formatObject","formatObjectValue","for","dedentBlockStringValue","rawString","lines","split","commonIndent","indent","leadingWhitespace","getBlockStringIndentation","isBlank","shift","str","printBlockString","indentation","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","printAsMultipleLines","previousComparisons","equal","a","b","check","aTag","bTag","previouslyCompared","aKeys","bKeys","keyCount","size","aIterator","entries","isMap","info","done","aKey","aValue","clear","bSet","Set","add","link","isTerminating","request","fromError","errorValue","observer","createOperation","starting","enumerable","query","operationName","getKey","passthrough","forward","of","toLink","handler","ApolloLink","empty","from","links","reduce","y","left","right","leftLink","rightLink","first","second","firstLink","nextLink","execute","transformedOperation","extensions","transformOperation","OPERATION_FIELDS","validateOperation","MessageBarType","format","c","argIndex","ReduxFormContext","React","renderChildren","Component","_ref","forwardedRef","rest","_objectWithoutPropertiesLoose","_reduxForm","_extends","ref","withReduxForm","Hoc","_React$Component","_inheritsLoose","render","Consumer","children","props","displayName","baseAssignValue","eq","getNative","func","baseFor","createBaseFor","getPrototype","overArg","arrayLikeKeys","baseKeysIn","isArrayLike","srcValue","castPath","toKey","isKey","stringToPath","manageState","Select","_taggedTemplateLiteral","strings","raw","defineProperties","parse","normalize","string","trim","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","parseDocument","cacheKey","parsed","stripLoc","removeLocAtThisLevel","docType","loc","valueType","ast","astFragmentMap","body","substring","processFragments","gql","literals","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","NetworkStatus","isNetworkRequestInFlight","networkStatus","LinkObservable","isNonEmptyArray","FetchType","graphQLErrors","networkError","errorMessage","extraInfo","err","graphQLError","generateErrorMessage","ApolloError","queryManager","options","shouldSubscribe","onSubscribe","observers","subscriptions","isTornDown","queryId","generateQueryId","opDef","queryName","Promise","resolve","reject","delete","removeQuery","setTimeout","subscription","unsubscribe","subscribe","currentResult","getCurrentResult","data","lastResult","lastError","loading","storeValue","policy","partial","queryStoreValue","queryStore","fetchPolicy","isNetworkFetchPolicy","errorPolicy","ready","updateLastResult","stale","isDifferentFromLastResult","newResult","lastResultSnapshot","snapshot","getLastResult","getLastError","resetLastResults","resetQueryStoreErrors","refetch","fetchQuery","fetchMore","fetchMoreOptions","combinedOptions","qid","normal","fetchMoreResult","updateQuery","previousResult","stopQuery","subscribeToMore","startGraphQLSubscription","subscriptionData","previous","onError","setOptions","opts","pollInterval","startPolling","stopPolling","setVariables","oldFetchPolicy","fetchResults","tryFetch","mapFn","dataStore","markUpdateQueryResult","broadcastQueries","stopPollingQuery","assertNotCacheFirstOrOnly","startPollingQuery","assumeImmutableResults","subObserver","_subscription","_observer","defaultSubscriptionObserverErrorCallback","setUpQuery","tearDownQuery","addObservableQuery","iterateObserversSafely","observeQuery","transform","getLocalState","addExportedVariables","previousVariables","serverQuery","catch","sub","removeObservableQuery","observersWithMethod","obs","obsQuery","store","getStore","mutationId","initMutation","mutation","markMutationError","markMutationResult","reset","initQuery","previousQuery","cache","client","resolvers","fragmentMatcher","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","getFragmentMatcher","clientQuery","prepareContext","getCacheKey","dataIdFromObject","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","diff","returnPartialData","optimistic","rootValue","mainDefinition","fragmentMap","definitionOperation","defaultOperationType","charAt","toUpperCase","execContext","resolveSelectionSet","resultsToMerge","resolveField","fieldResult","typeCondition","fragmentResult","all","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","__typename","resolverMap","resolveSubSelectedArray","item","multiplex","inner","complete","queryDeduplication","onBroadcast","ssrMode","clientAwareness","localState","mutationStore","MutationStore","QueryStore","idCounter","queries","fetchQueryRejectFns","transformCache","inFlightLinkObservables","pollingInfoByQueryId","LocalState","getCache","stop","_info","stopQueryNoBroadcast","mutate","optimisticResponse","updateQueries","refetchQueries","awaitRefetchQueries","update","setQuery","getVariables","generateUpdateQueriesInfo","ret","updateQueriesByName","observableQuery","updater","markMutationInit","updateWithProxyFn","self","storeResult","getObservableFromLink","markMutationComplete","refetchQueryPromises","refetchQuery","queryOptions","fetchType","fetchMoreForQueryId","metadata","needToFetch","isNetworkOnly","shouldFetch","requestId","cancel","updateQueryWatch","lastRequestId","invalidated","invalidate","storePreviousVariables","isPoll","poll","isRefetch","networkResult","fetchRequest","getQuery","markQueryError","markQueryResultClient","hasForcedResolvers","markQueryResult","newData","queryListenerForObserver","invoke","networkStatusChanged","shouldNotifyIfLoading","notifyOnNetworkStatusChange","hasGraphQLErrors","isMissing","errorStatusChanged","diffResult","resultFromStore","transformed","transformDocument","forLink","transformForLink","defaultVars","watchQuery","transformedOptions","ObservableQuery","watchedQuery","stopQueryInStore","stopQueryInStoreNoBroadcast","addQueryListener","listener","listeners","watch","callback","clearStore","resetIds","resetStore","reFetchObservableQueries","includeStandby","observableQueryPromises","startQuery","makeObservable","markSubscriptionResult","observable","getCurrentQueryResult","getQueryWithPreviousResult","queryIdOrObservable","foundObserveableQuery","deduplication","forceFetch","cleanup","activeNextCount","completed","asyncMap","errorsFromStore","fqrfId","newInfo","newContext","checkInFlight","interval","clearTimeout","timeout","initialCache","ignoreErrors","writeWithErrors","write","dataId","recordOptimisticTransaction","orig","nextQueryResult","currentQueryResult","mutationResult","queryVariables","performTransaction","removeOptimistic","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","typeDefs","version","DataStore","disableNetworkFetches","bind","window","__APOLLO_CLIENT__","QueryManager","clientAwarenessName","clientAwarenessVersion","devToolsHookCb","action","state","mutations","dataWithOptimisticResults","extract","readQuery","readFragment","writeQuery","writeFragment","writeData","__actionHookForDevTools","cb","__requestRaw","payload","initQueryManager","onResetStore","onClearStore","restore","serializedState","setLocalStateFragmentMatcher","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","configurable","writable","_createClass","protoProps","staticProps","hasSymbols","hasSymbol","Boolean","getSymbol","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","getSpecies","ctor","isObservable","hostReportError","log","enqueue","cleanupSubscription","_cleanup","closeSubscription","_queue","_state","notifySubscription","m","onNotify","queue","flushSubscription","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscriber","_this","_this2","_this3","_this4","C","hasSeed","hasValue","seed","acc","_this5","_len","startNext","_this6","outer","completeIfDone","closed","s","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_item","return","_len2","_key2","symbol","cmp","cycles","aobj","bobj","isFinite","out","seenIndex","baseMerge","merge","createAssigner","srcIndex","Stack","assignMergeValue","baseMergeDeep","keysIn","safeGet","customizer","newValue","fromRight","iteratee","keysFunc","iterable","cloneBuffer","cloneTypedArray","copyArray","initCloneObject","isArguments","isArrayLikeObject","isBuffer","isFunction","isPlainObject","isTypedArray","toPlainObject","mergeFunc","objValue","stacked","isCommon","isArr","isBuff","isTyped","freeExports","nodeType","freeModule","Buffer","allocUnsafe","buffer","isDeep","copy","cloneArrayBuffer","typedArray","byteOffset","Uint8Array","arrayBuffer","byteLength","baseCreate","isPrototype","objectCreate","proto","isObjectLike","baseGetTag","funcProto","objectProto","funcToString","objectCtorString","Ctor","copyObject","assignValue","isNew","nativeKeysIn","isProto","baseRest","isIterateeCall","assigner","guard","identity","overRest","setToString","nativeMax","max","otherArgs","thisArg","baseSetToString","shortOut","constant","nativeNow","Date","now","lastCalled","stamp","isIndex","baseForOwn","baseIteratee","baseMatches","baseMatchesProperty","property","baseIsMatch","getMatchData","matchesStrictComparable","matchData","baseIsEqual","noCustomizer","COMPARE_PARTIAL_FLAG","isStrictComparable","hasIn","baseGet","baseHasIn","hasPath","isLength","hasFunc","baseProperty","basePropertyDeep","isHotReloading","castModule","hot","status","devAssert","asyncIterator","SYMBOL_TO_STRING_TAG","toStringTag","getLocation","position","match","lineRegexp","exec","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","locationLine","subLineIndex","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","padLen","_ref2","_ref3","prefix","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","p","GraphQLError","_Error","subClass","superClass","_inherits","Derived","_super","Super","NewTarget","nodes","positions","originalError","_locations2","_source2","_positions2","_extensions2","_nodes$0$loc","_nodes","_source","_locations","_positions","list","pos","_extensions","originalExtensions","locations","captureStackTrace","output","_error$nodes2","_i4","_error$locations2","printError","syntaxError","description","Kind","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","Source","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","Lexer","startOfFileToken","lastToken","token","lineStart","_proto","advance","lookahead","_token$next","readToken","printCharCode","code","isNaN","fromCharCode","lexer","bodyLength","startPosition","charCodeAt","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","isNameStart","readNumber","chunkStart","rawValue","readBlockString","charCode","char2hex","invalidSequence","readString","unexpectedCharacterMessage","Parser","parseValue","parser","expectToken","parseValueLiteral","parseType","parseTypeReference","sourceObj","_lexer","_options","parseName","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","parseVariable","expectOptionalToken","parseSelection","parseFragment","parseField","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","parseNamedType","_this$_options","expectKeyword","parseList","parseObject","parseStringLiteral","block","any","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","types","_this$_options2","allowLegacySDLImplementsInterfaces","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","isPunctuatorTokenKind","queryFromPojo","selectionSetFromObj","Cache","justTypenameQuery","currentContext","MISSING_VALUE","host","Slot","random","slots","getValue","withValue","saved","noContext","defaultDispose","dispose","newest","oldest","entry","getEntry","older","newer","clean","parentEntrySlot","reusableEmptyArray","emptySetPool","assert","optionalMessage","valueGet","parents","childValues","dirtyChildren","dirty","recomputing","Entry","recompute","mightBeDirty","reportDirtyChild","reportCleanChild","rememberParent","maybeReportOrphan","originalChildren","forgetChildren","recomputeNewValue","maybeUnsubscribe","setDirty","maybeSubscribe","reportClean","setClean","reallyRecompute","reportDirty","forgetChild","childValue","valueIs","removeDirtyChild","dc","reportOrphan","_value","weakness","lookup","lookupArray","getChildTrie","isObjRef","weak","strong","KeyTrie","haveWarned","shouldWarn","answer","ensureReady","canBypassInit","idValue","isRootQuery","hasOwn","introspectionQueryResultData","possibleTypesMap","parseIntrospectionResult","isReady","implementingTypes","introspectionResultData","typeMap","__schema","possibleTypes","implementingType","depend","wrap","disposable","makeCacheKey","toObject","defaultNormalizedCacheFactory","cacheKeyRoot","freezeResults","executeStoreQuery","executeSelectionSet","executeSubSelectedArray","contextValue","variableValues","readQueryFromStore","diffQueryAgainstStore","rootId","fragmentMatcherFunction","queryDefinition","cacheRedirects","execResult","hasMissingFields","missing","tolerable","finalResult","objectsToMerge","handleMissing","executeField","fragmentExecResult","readStoreResult","resultKey","storeKeyName","fieldValue","resolver","storeObj","json","readStoreResolver","combineExecResults","assertSelectionSetForIdValue","execResults","childResult","defaultFragmentMatcher","writeQueryToStore","writeResultToStore","operationDefinition","writeSelectionSetToStore","processedData","enhancedError","enhanceErrorWithDocument","resultFieldKey","writeFieldToStore","isDefered","isClient","matches","fakeContext","ObjectCache","storeObject","storeFieldName","generatedId","processArrayValue","valueDataId","isGeneratedId","semanticId","isDataProcessed","escapedId","hadTypename","hasTypename","typenameChanged","mergeWithGenerated","generatedKey","realKey","real","madeChanges","realValue","newRealValue","itemDataId","defaultConfig","HeuristicFragmentMatcher","_id","addTypename","resultCaching","optimisticId","transaction","watches","typenameDocumentCache","silenceBroadcast","customResolvers","cacheResolvers","optimisticData","storeWriter","storeReader","maybeBroadcastWatch","read","broadcastWatches","evict","idToRemove","toReapply","removedCount","layer","print","printDocASTReducer","varDefs","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","addDescription","_ref20","_ref21","_ref22","_ref23","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","maybeArray","_maybeArray$filter$jo","separator","maybeString","isMultiline","fallbackHttpConfig","http","includeQuery","includeExtensions","headers","accept","throwServerError","response","statusCode","label","serialized","parseError","linkOptions","uri","fetch","useGETForQueries","fetcher","linkConfig","requestOptions","fetchOptions","credentials","chosenURI","fallbackURI","contextURI","getContext","selectURI","clientAwarenessHeaders","controller","contextHeaders","contextConfig","fallbackConfig","configs","signal","AbortController","_controller","queryParams","addQueryParam","encodeURIComponent","serializedVariables","serializedExtensions","preFragment","fragmentStart","substr","queryParamsPrefix","newURI","setContext","text","bodyText","abort","actions","arrayInsert","form","ARRAY_INSERT","meta","arrayMove","to","ARRAY_MOVE","arrayPop","ARRAY_POP","arrayPush","ARRAY_PUSH","arrayRemove","ARRAY_REMOVE","arrayRemoveAll","ARRAY_REMOVE_ALL","arrayShift","ARRAY_SHIFT","arraySplice","removeNum","ARRAY_SPLICE","arraySwap","indexA","indexB","ARRAY_SWAP","arrayUnshift","ARRAY_UNSHIFT","autofill","AUTOFILL","blur","touch","BLUR","change","persistentSubmitErrors","CHANGE","clearFields","keepTouched","CLEAR_FIELDS","clearSubmit","CLEAR_SUBMIT","clearSubmitErrors","CLEAR_SUBMIT_ERRORS","clearAsyncError","CLEAR_ASYNC_ERROR","destroy","DESTROY","focus","FOCUS","initialize","keepDirty","otherMeta","INITIALIZE","registerField","REGISTER_FIELD","RESET","resetSection","_len3","sections","_key3","RESET_SECTION","startAsyncValidation","START_ASYNC_VALIDATION","startSubmit","START_SUBMIT","stopAsyncValidation","STOP_ASYNC_VALIDATION","stopSubmit","STOP_SUBMIT","submit","SUBMIT","setSubmitFailed","_len4","_key4","SET_SUBMIT_FAILED","setSubmitSucceeded","_len5","_key5","SET_SUBMIT_SUCCEEDED","_len6","_key6","TOUCH","unregisterField","destroyOnUnmount","UNREGISTER_FIELD","untouch","_len7","_key7","UNTOUCH","updateSyncErrors","syncErrors","UPDATE_SYNC_ERRORS","updateSyncWarnings","syncWarnings","warning","UPDATE_SYNC_WARNINGS","asyncValidation","promise","isPromise","handleErrors","rejected","defaultShouldAsyncValidate","initialized","trigger","pristine","syncValidationPasses","defaultShouldValidate","nextProps","initialRender","lastFieldValidatorKeys","fieldValidatorKeys","structure","deepEqual","defaultShouldError","defaultShouldWarn","silenceEvent","event","is","silenceEvents","getError","validators","toArray","generateValidator","getIn","plain","setIn","ExtendableError","_extendableBuiltin2","cls","ExtendableBuiltin","_extendableBuiltin","__FLAG__","isSubmissionError","_ExtendableError","SubmissionError","executeSubmit","dispatch","submitAsSideEffect","onSubmitFail","onSubmitSuccess","submitError","submitResult","handleSubmit","valid","asyncValidate","asyncErrors","asyncValidateResult","toJS","mergeErrors","createHasError","submitErrors","getErrorKeys","getDisplayName","Comp","importedActions","formActions","arrayActions","propsToNotUpdateFor","checkSubmit","createReduxForm","fromJS","isValid","hasError","getFormState","ignoreSubmitErrors","formState","registeredFields","createIsValid","initialConfig","touchOnBlur","touchOnChange","shouldAsyncValidate","shouldValidate","shouldError","enableReinitialize","keepDirtyOnReinitialize","updateUnregisteredFields","pure","forceUnregisterOnUnmount","WrappedComponent","Form","wrapped","createRef","destroyed","fieldCounts","fieldValidators","fieldWarners","lastFieldWarnerKeys","innerOnSubmit","submitPromise","getValues","isPristine","register","getValidator","getWarner","nextCount","unregister","lastCount","_this$props","_destroyOnUnmount","getFieldList","keySeq","excludeFieldArray","excludeUnregistered","getValidators","validator","getWarners","warners","warner","generateWarner","_this$props2","asyncBlurFields","asyncChangeFields","submitting","valuesToValidate","fieldNeedsValidationForBlur","fieldNeedsValidationForChange","fieldNeedsValidation","blurredField","submitCompleted","submitFailed","listenToSubmit","submitOrEvent","_this$props3","onSubmit","bindActionCreators","validExceptSubmit","initIfNeeded","initialValues","_keepDirty","keepValues","lastInitialValues","updateSyncErrorsIfNeeded","nextSyncErrors","nextError","lastSyncErrors","_this$props4","noErrors","nextNoErrors","clearSubmitPromiseIfNeeded","submitIfNeeded","_this$props5","triggerSubmit","shouldErrorFunction","_this$props6","validateIfNeeded","_this$props7","validate","fieldLevelValidate","propsToValidate","_merge2","_merge","_error","updateSyncWarningsIfNeeded","nextSyncWarnings","nextWarning","lastSyncWarnings","_this$props8","noWarnings","nextNoWarnings","shouldWarnFunction","_this$props9","warnIfNeeded","_this$props10","fieldLevelWarn","fieldWarnerKeys","propsToWarn","_merge3","_warning","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","onChange","shouldComponentUpdate","_config$immutableProp","immutableProps","componentDidMount","componentWillUnmount","_this$props11","_this$props12","anyTouched","asyncValidating","invalid","propNamespace","submitSucceeded","reduxFormProps","propsToPass","isReactComponent","sectionPrefix","registerInnerOnSubmit","createElement","Provider","propTypes","PropTypes","bool","isRequired","arrayOf","oneOfType","connector","connect","stateInitial","shouldUpdateInitialValues","shouldResetValues","initial","initialProps","bindForm","actionCreator","boundFormACs","_mapValues","boundArrayACs","boundFocus","connectedFormACs","connectedArrayACs","insert","move","removeAll","swap","unshift","forwardRef","ConnectedForm","hoistStatics","defaultProps","ReduxForm","_React$Component2","_proto2","current","_this$props13","WithContext","processProps","checked","isReactNative","nativeEvent","detypedEvent","_detypedEvent$target","files","dataTransfer","option","selected","getSelectedValues","onChangeValue","validateComponentProp","propName","componentName","isValidElementType","entity","eventPreventDefault","eventDataTransferGetData","getData","eventDataTransferSetData","setData","createConnectedField","ConnectedField","_Component","handleChange","previousValue","defaultPrevented","onChangeResult","handleFocus","onFocus","handleBlur","onBlur","handleDragStart","onDragStart","handleDrop","onDrop","nextPropsKeys","thisPropsKeys","getRenderedComponent","component","_createFieldProps","asyncError","syncError","syncWarning","custom","formattedFieldValue","defaultFormattedValue","formatFieldValue","input","active","autofilled","touched","visited","createFieldProps","ownProps","_ownProps$_reduxForm","initialState","getSyncError","getSyncWarning","objectValue","otherValue","indexOrkey","other","shallowCompare","nextState","propsEqual","_isEqualWith","stateEqual","formatName","createField","previousValues","oldName","prefixName","newName","withSlots","slotType","isSlot","numChildren","createFactory","DefaultComponent","defaultProp","componentProps","userProps","userSlotOptions","defaultStyles","finalProps","classNames","allProps","className","_constructFinalProps","slotProps","transformedProps","_translateShorthand","UserComponent","defaultFactory","memoize","getSlots","mixedProps","slot","_renderSlot","_defaultStyles","ComponentType","slotOptions","createComponent","view","factoryOptions","settings","CustomizerContext","Customizations","getSettings","customizations","useState","theme","tokens","_resolveTokens","allTokens","currentTokens","styles","allStyles","_resolveStyles","viewProps","statics","_getThemedSpacing","space","spacing","_getValueUnitGap","gap","numericalPart","parseFloat","numericalValue","numericalString","unit","parsePadding","padding","paddingValues","padding1","padding2","nameMap","GlobalClassNames","alignMap","StackItem","grow","shrink","disableShrink","align","verticalFill","order","fonts","medium","margin","height","width","flexGrow","flexShrink","alignSelf","as","warnDeprecations","maxHeight","maxWidth","stackChildren","defaultItemProps","nativeProps","Slots","RootType","horizontal","reversed","horizontalAlign","verticalAlign","childrenGap","rowGap","columnGap","splitGap","calculatedGap","horizontalMargin","verticalMargin","childStyles","textOverflow","commonSelectors","flexWrap","overflow","display","marginLeft","marginRight","marginTop","marginBottom","boxSizing","selectors","flexDirection","Item","getClassNames","classNamesFunction","ICON_MAP","blocked","severeWarning","success","_getRegionProps","hasActions","_getActionsDiv","_getDismissDiv","regionProps","labelId","role","_onClick","ev","setState","expandSingleLine","getId","showContent","_classNames","_getClassNames","_renderMultiLine","_renderSingleLine","onDismiss","dismissIconProps","IconButton","disabled","dismissal","onClick","iconProps","iconName","ariaLabel","dismissButtonAriaLabel","_getDismissSingleLine","dismissSingleLine","_getExpandSingleLine","truncated","expand","overflowButtonAriaLabel","_getIconSpan","messageBarIconProps","iconContainer","Icon","css","icon","messageBarType","style","background","semanticColors","bodyBackground","content","_renderInnerText","_getAnnouncementPriority","innerText","DelayedRender","BaseComponent","multiline","singleline","dismissalSingleLine","expandingSingleLine","actionsSingleline","palette","errorBackground","blockingBackground","successBackground","warningBackground","neutralLighter","errorText","green","warningText","neutralSecondary","MessageBar","styled","SmallScreenSelector","dismissalAndExpandIconStyle","fontSize","xSmall","lineHeight","color","neutralPrimary","MsHighContrastAdjust","dismissalAndExpandStyle","inset","highContrastStyle","outlineOffset","outlineColor","borderColor","backgroundColor","minHeight","wordBreak","themeDark","small","minWidth","paddingLeft","whiteSpace","flexBasis","alignItems","scope"],"mappings":"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","file":"static/js/4.5ea2c272.chunk.js","sourcesContent":["import {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n} from 'graphql';\n\nimport stringify from 'fast-json-stable-stringify';\nimport { InvariantError } from 'ts-invariant';\n\nexport interface IdValue {\n  type: 'id';\n  id: string;\n  generated: boolean;\n  typename: string | undefined;\n}\n\nexport interface JsonValue {\n  type: 'json';\n  json: any;\n}\n\nexport type ListValue = Array<null | IdValue>;\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | IdValue\n  | ListValue\n  | JsonValue\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport type ScalarValue = StringValueNode | BooleanValueNode | EnumValueNode;\n\nexport function isScalarValue(value: ValueNode): value is ScalarValue {\n  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\n\nexport type NumberValue = IntValueNode | FloatValueNode;\n\nexport function isNumberValue(value: ValueNode): value is NumberValue {\n  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object,\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map(obj =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables),\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(listValue => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables,\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw new InvariantError(\n      `The inline argument \"${name.value}\" of kind \"${(value as any).kind}\"` +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.',\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object,\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(directive => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables,\n          ),\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  'connection',\n  'include',\n  'skip',\n  'client',\n  'rest',\n  'export',\n];\n\nexport function getStoreKeyName(\n  fieldName: string,\n  args?: Object,\n  directives?: Directives,\n): string {\n  if (\n    directives &&\n    directives['connection'] &&\n    directives['connection']['key']\n  ) {\n    if (\n      directives['connection']['filter'] &&\n      (directives['connection']['filter'] as string[]).length > 0\n    ) {\n      const filterKeys = directives['connection']['filter']\n        ? (directives['connection']['filter'] as string[])\n        : [];\n      filterKeys.sort();\n\n      const queryArgs = args as { [key: string]: any };\n      const filteredArgs = {} as { [key: string]: any };\n      filterKeys.forEach(key => {\n        filteredArgs[key] = queryArgs[key];\n      });\n\n      return `${directives['connection']['key']}(${JSON.stringify(\n        filteredArgs,\n      )})`;\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  let completeFieldName: string = fieldName;\n\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    const stringifiedArgs: string = stringify(args);\n    completeFieldName += `(${stringifiedArgs})`;\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(key => {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += `@${key}(${JSON.stringify(directives[key])})`;\n      } else {\n        completeFieldName += `@${key}`;\n      }\n    });\n  }\n\n  return completeFieldName;\n}\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables: Object,\n): Object {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n    return argObj;\n  }\n\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === 'Field';\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode,\n): selection is InlineFragmentNode {\n  return selection.kind === 'InlineFragment';\n}\n\nexport function isIdValue(idObject: StoreValue): idObject is IdValue {\n  return idObject &&\n    (idObject as IdValue | JsonValue).type === 'id' &&\n    typeof (idObject as IdValue).generated === 'boolean';\n}\n\nexport type IdConfig = {\n  id: string;\n  typename: string | undefined;\n};\n\nexport function toIdValue(\n  idConfig: string | IdConfig,\n  generated = false,\n): IdValue {\n  return {\n    type: 'id',\n    generated,\n    ...(typeof idConfig === 'string'\n      ? { id: idConfig, typename: undefined }\n      : idConfig),\n  };\n}\n\nexport function isJsonValue(jsonObject: StoreValue): jsonObject is JsonValue {\n  return (\n    jsonObject != null &&\n    typeof jsonObject === 'object' &&\n    (jsonObject as IdValue | JsonValue).type === 'json'\n  );\n}\n\nfunction defaultValueFromVariable(node: VariableNode) {\n  throw new InvariantError(`Variable nodes are not supported by valueFromNode`);\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n\n/**\n * Evaluate a ValueNode and yield its value in its natural JS form.\n */\nexport function valueFromNode(\n  node: ValueNode,\n  onVariable: VariableValue = defaultValueFromVariable,\n): any {\n  switch (node.kind) {\n    case 'Variable':\n      return onVariable(node);\n    case 'NullValue':\n      return null;\n    case 'IntValue':\n      return parseInt(node.value, 10);\n    case 'FloatValue':\n      return parseFloat(node.value);\n    case 'ListValue':\n      return node.values.map(v => valueFromNode(v, onVariable));\n    case 'ObjectValue': {\n      const value: { [key: string]: any } = {};\n      for (const field of node.fields) {\n        value[field.name.value] = valueFromNode(field.value, onVariable);\n      }\n      return value;\n    }\n    default:\n      return node.value;\n  }\n}\n","// Provides the methods that allow QueryManager to handle the `skip` and\n// `include` directives within GraphQL.\nimport {\n  FieldNode,\n  SelectionNode,\n  VariableNode,\n  BooleanValueNode,\n  DirectiveNode,\n  DocumentNode,\n  ArgumentNode,\n  ValueNode,\n} from 'graphql';\n\nimport { visit } from 'graphql/language/visitor';\n\nimport { invariant } from 'ts-invariant';\n\nimport { argumentsObjectFromField } from './storeUtils';\n\nexport type DirectiveInfo = {\n  [fieldName: string]: { [argName: string]: any };\n};\n\nexport function getDirectiveInfoFromField(\n  field: FieldNode,\n  variables: Object,\n): DirectiveInfo {\n  if (field.directives && field.directives.length) {\n    const directiveObj: DirectiveInfo = {};\n    field.directives.forEach((directive: DirectiveNode) => {\n      directiveObj[directive.name.value] = argumentsObjectFromField(\n        directive,\n        variables,\n      );\n    });\n    return directiveObj;\n  }\n  return null;\n}\n\nexport function shouldInclude(\n  selection: SelectionNode,\n  variables: { [name: string]: any } = {},\n): boolean {\n  return getInclusionDirectives(\n    selection.directives,\n  ).every(({ directive, ifArgument }) => {\n    let evaledValue: boolean = false;\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables[(ifArgument.value as VariableNode).name.value];\n      invariant(\n        evaledValue !== void 0,\n        `Invalid variable referenced in @${directive.name.value} directive.`,\n      );\n    } else {\n      evaledValue = (ifArgument.value as BooleanValueNode).value;\n    }\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\n\nexport function getDirectiveNames(doc: DocumentNode) {\n  const names: string[] = [];\n\n  visit(doc, {\n    Directive(node) {\n      names.push(node.name.value);\n    },\n  });\n\n  return names;\n}\n\nexport function hasDirectives(names: string[], doc: DocumentNode) {\n  return getDirectiveNames(doc).some(\n    (name: string) => names.indexOf(name) > -1,\n  );\n}\n\nexport function hasClientExports(document: DocumentNode) {\n  return (\n    document &&\n    hasDirectives(['client'], document) &&\n    hasDirectives(['export'], document)\n  );\n}\n\nexport type InclusionDirectives = Array<{\n  directive: DirectiveNode;\n  ifArgument: ArgumentNode;\n}>;\n\nfunction isInclusionDirective({ name: { value } }: DirectiveNode): boolean {\n  return value === 'skip' || value === 'include';\n}\n\nexport function getInclusionDirectives(\n  directives: ReadonlyArray<DirectiveNode>,\n): InclusionDirectives {\n  return directives ? directives.filter(isInclusionDirective).map(directive => {\n    const directiveArguments = directive.arguments;\n    const directiveName = directive.name.value;\n\n    invariant(\n      directiveArguments && directiveArguments.length === 1,\n      `Incorrect number of arguments for the @${directiveName} directive.`,\n    );\n\n    const ifArgument = directiveArguments[0];\n    invariant(\n      ifArgument.name && ifArgument.name.value === 'if',\n      `Invalid argument for the @${directiveName} directive.`,\n    );\n\n    const ifValue: ValueNode = ifArgument.value;\n\n    // means it has to be a variable value if this is a valid @skip or @include directive\n    invariant(\n      ifValue &&\n        (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'),\n      `Argument for the @${directiveName} directive must be a variable or a boolean value.`,\n    );\n\n    return { directive, ifArgument };\n  }) : [];\n}\n\n","import { DocumentNode, FragmentDefinitionNode } from 'graphql';\nimport { invariant, InvariantError } from 'ts-invariant';\n\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(\n  document: DocumentNode,\n  fragmentName?: string,\n): DocumentNode {\n  let actualFragmentName = fragmentName;\n\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  const fragments: Array<FragmentDefinitionNode> = [];\n  document.definitions.forEach(definition => {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === 'OperationDefinition') {\n      throw new InvariantError(\n        `Found a ${definition.operation} operation${\n          definition.name ? ` named '${definition.name.value}'` : ''\n        }. ` +\n          'No operations are allowed when using a fragment as a query. Only fragments are allowed.',\n      );\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === 'undefined') {\n    invariant(\n      fragments.length === 1,\n      `Found ${\n        fragments.length\n      } fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\n    );\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  const query: DocumentNode = {\n    ...document,\n    definitions: [\n      {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        selectionSet: {\n          kind: 'SelectionSet',\n          selections: [\n            {\n              kind: 'FragmentSpread',\n              name: {\n                kind: 'Name',\n                value: actualFragmentName,\n              },\n            },\n          ],\n        },\n      },\n      ...document.definitions,\n    ],\n  };\n\n  return query;\n}\n","/**\n * Adds the properties of one or more source objects to a target object. Works exactly like\n * `Object.assign`, but as a utility to maintain support for IE 11.\n *\n * @see https://github.com/apollostack/apollo-client/pull/1009\n */\nexport function assign<A, B>(a: A, b: B): A & B;\nexport function assign<A, B, C>(a: A, b: B, c: C): A & B & C;\nexport function assign<A, B, C, D>(a: A, b: B, c: C, d: D): A & B & C & D;\nexport function assign<A, B, C, D, E>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n): A & B & C & D & E;\nexport function assign(target: any, ...sources: Array<any>): any;\nexport function assign(\n  target: { [key: string]: any },\n  ...sources: Array<{ [key: string]: any }>\n): { [key: string]: any } {\n  sources.forEach(source => {\n    if (typeof source === 'undefined' || source === null) {\n      return;\n    }\n    Object.keys(source).forEach(key => {\n      target[key] = source[key];\n    });\n  });\n  return target;\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from 'graphql';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { assign } from './util/assign';\n\nimport { valueToObjectRepresentation, JsonValue } from './storeUtils';\n\nexport function getMutationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode {\n  checkDocument(doc);\n\n  let mutationDef: OperationDefinitionNode | null = doc.definitions.filter(\n    definition =>\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'mutation',\n  )[0] as OperationDefinitionNode;\n\n  invariant(mutationDef, 'Must contain a mutation definition.');\n\n  return mutationDef;\n}\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  invariant(\n    doc && doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  const operations = doc.definitions\n    .filter(d => d.kind !== 'FragmentDefinition')\n    .map(definition => {\n      if (definition.kind !== 'OperationDefinition') {\n        throw new InvariantError(\n          `Schema type definitions not allowed in queries. Found: \"${\n            definition.kind\n          }\"`,\n        );\n      }\n      return definition;\n    });\n\n  invariant(\n    operations.length <= 1,\n    `Ambiguous GraphQL document: contains ${operations.length} operations`,\n  );\n\n  return doc;\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    definition => definition.kind === 'OperationDefinition',\n  )[0] as OperationDefinitionNode;\n}\n\nexport function getOperationDefinitionOrDie(\n  document: DocumentNode,\n): OperationDefinitionNode {\n  const def = getOperationDefinition(document);\n  invariant(def, `GraphQL document is missing an operation`);\n  return def;\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        definition =>\n          definition.kind === 'OperationDefinition' && definition.name,\n      )\n      .map((x: OperationDefinitionNode) => x.name.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode,\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    definition => definition.kind === 'FragmentDefinition',\n  ) as FragmentDefinitionNode[];\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc) as OperationDefinitionNode;\n\n  invariant(\n    queryDef && queryDef.operation === 'query',\n    'Must contain a query definition.',\n  );\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode,\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    'Fragment must have exactly one definition.',\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === 'FragmentDefinition',\n    'Must be a fragment definition.',\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode,\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === 'query' ||\n        operation === 'mutation' ||\n        operation === 'subscription'\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new InvariantError(\n    'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.',\n  );\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = [],\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n\n  return symTable;\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined,\n): { [key: string]: JsonValue } {\n  if (\n    definition &&\n    definition.variableDefinitions &&\n    definition.variableDefinitions.length\n  ) {\n    const defaultValues = definition.variableDefinitions\n      .filter(({ defaultValue }) => defaultValue)\n      .map(\n        ({ variable, defaultValue }): { [key: string]: JsonValue } => {\n          const defaultValueObj: { [key: string]: JsonValue } = {};\n          valueToObjectRepresentation(\n            defaultValueObj,\n            variable.name,\n            defaultValue as ValueNode,\n          );\n\n          return defaultValueObj;\n        },\n      );\n\n    return assign({}, ...defaultValues);\n  }\n\n  return {};\n}\n\n/**\n * Returns the names of all variables declared by the operation.\n */\nexport function variablesInOperation(\n  operation: OperationDefinitionNode,\n): Set<string> {\n  const names = new Set<string>();\n  if (operation.variableDefinitions) {\n    for (const definition of operation.variableDefinitions) {\n      names.add(definition.variable.name.value);\n    }\n  }\n\n  return names;\n}\n","export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n","import {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n  ArgumentNode,\n  FragmentSpreadNode,\n  VariableDefinitionNode,\n  VariableNode,\n} from 'graphql';\nimport { visit } from 'graphql/language/visitor';\n\nimport {\n  checkDocument,\n  getOperationDefinition,\n  getFragmentDefinition,\n  getFragmentDefinitions,\n  createFragmentMap,\n  FragmentMap,\n  getMainDefinition,\n} from './getFromAST';\nimport { filterInPlace } from './util/filterInPlace';\nimport { invariant } from 'ts-invariant';\nimport { isField, isInlineFragment } from './storeUtils';\n\nexport type RemoveNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n  remove?: boolean;\n};\n\nexport type GetNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n};\n\nexport type RemoveDirectiveConfig = RemoveNodeConfig<DirectiveNode>;\nexport type GetDirectiveConfig = GetNodeConfig<DirectiveNode>;\nexport type RemoveArgumentsConfig = RemoveNodeConfig<ArgumentNode>;\nexport type GetFragmentSpreadConfig = GetNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentSpreadConfig = RemoveNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentDefinitionConfig = RemoveNodeConfig<\n  FragmentDefinitionNode\n>;\nexport type RemoveVariableDefinitionConfig = RemoveNodeConfig<\n  VariableDefinitionNode\n>;\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename',\n  },\n};\n\nfunction isEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragments: FragmentMap,\n): boolean {\n  return op.selectionSet.selections.every(\n    selection =>\n      selection.kind === 'FragmentSpread' &&\n      isEmpty(fragments[selection.name.value], fragments),\n  );\n}\n\nfunction nullIfDocIsEmpty(doc: DocumentNode) {\n  return isEmpty(\n    getOperationDefinition(doc) || getFragmentDefinition(doc),\n    createFragmentMap(getFragmentDefinitions(doc)),\n  )\n    ? null\n    : doc;\n}\n\nfunction getDirectiveMatcher(\n  directives: (RemoveDirectiveConfig | GetDirectiveConfig)[],\n) {\n  return function directiveMatcher(directive: DirectiveNode) {\n    return directives.some(\n      dir =>\n        (dir.name && dir.name === directive.name.value) ||\n        (dir.test && dir.test(directive)),\n    );\n  };\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const variablesInUse: Record<string, boolean> = Object.create(null);\n  let variablesToRemove: RemoveArgumentsConfig[] = [];\n\n  const fragmentSpreadsInUse: Record<string, boolean> = Object.create(null);\n  let fragmentSpreadsToRemove: RemoveFragmentSpreadConfig[] = [];\n\n  let modifiedDoc = nullIfDocIsEmpty(\n    visit(doc, {\n      Variable: {\n        enter(node, _key, parent) {\n          // Store each variable that's referenced as part of an argument\n          // (excluding operation definition variables), so we know which\n          // variables are being used. If we later want to remove a variable\n          // we'll fist check to see if it's being used, before continuing with\n          // the removal.\n          if (\n            (parent as VariableDefinitionNode).kind !== 'VariableDefinition'\n          ) {\n            variablesInUse[node.name.value] = true;\n          }\n        },\n      },\n\n      Field: {\n        enter(node) {\n          if (directives && node.directives) {\n            // If `remove` is set to true for a directive, and a directive match\n            // is found for a field, remove the field as well.\n            const shouldRemoveField = directives.some(\n              directive => directive.remove,\n            );\n\n            if (\n              shouldRemoveField &&\n              node.directives &&\n              node.directives.some(getDirectiveMatcher(directives))\n            ) {\n              if (node.arguments) {\n                // Store field argument variables so they can be removed\n                // from the operation definition.\n                node.arguments.forEach(arg => {\n                  if (arg.value.kind === 'Variable') {\n                    variablesToRemove.push({\n                      name: (arg.value as VariableNode).name.value,\n                    });\n                  }\n                });\n              }\n\n              if (node.selectionSet) {\n                // Store fragment spread names so they can be removed from the\n                // docuemnt.\n                getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(\n                  frag => {\n                    fragmentSpreadsToRemove.push({\n                      name: frag.name.value,\n                    });\n                  },\n                );\n              }\n\n              // Remove the field.\n              return null;\n            }\n          }\n        },\n      },\n\n      FragmentSpread: {\n        enter(node) {\n          // Keep track of referenced fragment spreads. This is used to\n          // determine if top level fragment definitions should be removed.\n          fragmentSpreadsInUse[node.name.value] = true;\n        },\n      },\n\n      Directive: {\n        enter(node) {\n          // If a matching directive is found, remove it.\n          if (getDirectiveMatcher(directives)(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n\n  // If we've removed fields with arguments, make sure the associated\n  // variables are also removed from the rest of the document, as long as they\n  // aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(variablesToRemove, v => !variablesInUse[v.name]).length\n  ) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  // If we've removed selection sets with fragment spreads, make sure the\n  // associated fragment definitions are also removed from the rest of the\n  // document, as long as they aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(fragmentSpreadsToRemove, fs => !fragmentSpreadsInUse[fs.name])\n      .length\n  ) {\n    modifiedDoc = removeFragmentSpreadFromDocument(\n      fragmentSpreadsToRemove,\n      modifiedDoc,\n    );\n  }\n\n  return modifiedDoc;\n}\n\nexport function addTypenameToDocument(doc: DocumentNode): DocumentNode {\n  return visit(checkDocument(doc), {\n    SelectionSet: {\n      enter(node, _key, parent) {\n        // Don't add __typename to OperationDefinitions.\n        if (\n          parent &&\n          (parent as OperationDefinitionNode).kind === 'OperationDefinition'\n        ) {\n          return;\n        }\n\n        // No changes if no selections.\n        const { selections } = node;\n        if (!selections) {\n          return;\n        }\n\n        // If selections already have a __typename, or are part of an\n        // introspection query, do nothing.\n        const skip = selections.some(selection => {\n          return (\n            isField(selection) &&\n            (selection.name.value === '__typename' ||\n              selection.name.value.lastIndexOf('__', 0) === 0)\n          );\n        });\n        if (skip) {\n          return;\n        }\n\n        // If this SelectionSet is @export-ed as an input variable, it should\n        // not have a __typename field (see issue #4691).\n        const field = parent as FieldNode;\n        if (\n          isField(field) &&\n          field.directives &&\n          field.directives.some(d => d.name.value === 'export')\n        ) {\n          return;\n        }\n\n        // Create and return a new SelectionSet with a __typename Field.\n        return {\n          ...node,\n          selections: [...selections, TYPENAME_FIELD],\n        };\n      },\n    },\n  });\n}\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some(arg => arg.name.value === 'key')\n      ) {\n        invariant.warn(\n          'Removing an @connection directive even though it does not have a key. ' +\n            'You may want to use the key parameter to specify a store key.',\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  return removeDirectivesFromDocument(\n    [connectionRemoveConfig],\n    checkDocument(doc),\n  );\n}\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n  nestedCheck = true,\n): boolean {\n  return (\n    selectionSet &&\n    selectionSet.selections &&\n    selectionSet.selections.some(selection =>\n      hasDirectivesInSelection(directives, selection, nestedCheck),\n    )\n  );\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true,\n): boolean {\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return (\n    selection.directives.some(getDirectiveMatcher(directives)) ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck,\n      ))\n  );\n}\n\nexport function getDirectivesFromDocument(\n  directives: GetDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  checkDocument(doc);\n\n  let parentPath: string;\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      SelectionSet: {\n        enter(node, _key, _parent, path) {\n          const currentPath = path.join('-');\n\n          if (\n            !parentPath ||\n            currentPath === parentPath ||\n            !currentPath.startsWith(parentPath)\n          ) {\n            if (node.selections) {\n              const selectionsWithDirectives = node.selections.filter(\n                selection => hasDirectivesInSelection(directives, selection),\n              );\n\n              if (hasDirectivesInSelectionSet(directives, node, false)) {\n                parentPath = currentPath;\n              }\n\n              return {\n                ...node,\n                selections: selectionsWithDirectives,\n              };\n            } else {\n              return null;\n            }\n          }\n        },\n      },\n    }),\n  );\n}\n\nfunction getArgumentMatcher(config: RemoveArgumentsConfig[]) {\n  return function argumentMatcher(argument: ArgumentNode) {\n    return config.some(\n      (aConfig: RemoveArgumentsConfig) =>\n        argument.value &&\n        argument.value.kind === 'Variable' &&\n        argument.value.name &&\n        (aConfig.name === argument.value.name.value ||\n          (aConfig.test && aConfig.test(argument))),\n    );\n  };\n}\n\nexport function removeArgumentsFromDocument(\n  config: RemoveArgumentsConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  const argMatcher = getArgumentMatcher(config);\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      OperationDefinition: {\n        enter(node) {\n          return {\n            ...node,\n            // Remove matching top level variables definitions.\n            variableDefinitions: node.variableDefinitions.filter(\n              varDef =>\n                !config.some(arg => arg.name === varDef.variable.name.value),\n            ),\n          };\n        },\n      },\n\n      Field: {\n        enter(node) {\n          // If `remove` is set to true for an argument, and an argument match\n          // is found for a field, remove the field as well.\n          const shouldRemoveField = config.some(argConfig => argConfig.remove);\n\n          if (shouldRemoveField) {\n            let argMatchCount = 0;\n            node.arguments.forEach(arg => {\n              if (argMatcher(arg)) {\n                argMatchCount += 1;\n              }\n            });\n            if (argMatchCount === 1) {\n              return null;\n            }\n          }\n        },\n      },\n\n      Argument: {\n        enter(node) {\n          // Remove all matching arguments.\n          if (argMatcher(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n}\n\nexport function removeFragmentSpreadFromDocument(\n  config: RemoveFragmentSpreadConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  function enter(\n    node: FragmentSpreadNode | FragmentDefinitionNode,\n  ): null | void {\n    if (config.some(def => def.name === node.name.value)) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      FragmentSpread: { enter },\n      FragmentDefinition: { enter },\n    }),\n  );\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(\n  selectionSet: SelectionSetNode,\n): FragmentSpreadNode[] {\n  const allFragments: FragmentSpreadNode[] = [];\n\n  selectionSet.selections.forEach(selection => {\n    if (\n      (isField(selection) || isInlineFragment(selection)) &&\n      selection.selectionSet\n    ) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(\n        frag => allFragments.push(frag),\n      );\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n\n  return allFragments;\n}\n\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(\n  document: DocumentNode,\n): DocumentNode {\n  const definition = getMainDefinition(document);\n  const definitionOperation = (<OperationDefinitionNode>definition).operation;\n\n  if (definitionOperation === 'query') {\n    // Already a query, so return the existing document.\n    return document;\n  }\n\n  // Build a new query using the selection set of the main operation.\n  const modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter(node) {\n        return {\n          ...node,\n          operation: 'query',\n        };\n      },\n    },\n  });\n  return modifiedDoc;\n}\n\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(\n  document: DocumentNode,\n): DocumentNode | null {\n  checkDocument(document);\n\n  let modifiedDoc = removeDirectivesFromDocument(\n    [\n      {\n        test: (directive: DirectiveNode) => directive.name.value === 'client',\n        remove: true,\n      },\n    ],\n    document,\n  );\n\n  // After a fragment definition has had its @client related document\n  // sets removed, if the only field it has left is a __typename field,\n  // remove the entire fragment operation to prevent it from being fired\n  // on the server.\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter(node) {\n          if (node.selectionSet) {\n            const isTypenameOnly = node.selectionSet.selections.every(\n              selection =>\n                isField(selection) && selection.name.value === '__typename',\n            );\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        },\n      },\n    });\n  }\n\n  return modifiedDoc;\n}\n","export const canUseWeakMap = typeof WeakMap === 'function' && !(\n  typeof navigator === 'object' &&\n  navigator.product === 'ReactNative'\n);\n","const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value, new Map());\n}\n\nfunction cloneDeepHelper<T>(val: T, seen: Map<any, any>): T {\n  switch (toString.call(val)) {\n  case \"[object Array]\": {\n    if (seen.has(val)) return seen.get(val);\n    const copy: T & any[] = (val as any).slice(0);\n    seen.set(val, copy);\n    copy.forEach(function (child, i) {\n      copy[i] = cloneDeepHelper(child, seen);\n    });\n    return copy;\n  }\n\n  case \"[object Object]\": {\n    if (seen.has(val)) return seen.get(val);\n    // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n    // possible in all JS environments, so we will assume they exist/work.\n    const copy = Object.create(Object.getPrototypeOf(val));\n    seen.set(val, copy);\n    Object.keys(val).forEach(key => {\n      copy[key] = cloneDeepHelper((val as any)[key], seen);\n    });\n    return copy;\n  }\n\n  default:\n    return val;\n  }\n}\n","export function getEnv(): string | undefined {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  // default environment\n  return 'development';\n}\n\nexport function isEnv(env: string): boolean {\n  return getEnv() === env;\n}\n\nexport function isProduction(): boolean {\n  return isEnv('production') === true;\n}\n\nexport function isDevelopment(): boolean {\n  return isEnv('development') === true;\n}\n\nexport function isTest(): boolean {\n  return isEnv('test') === true;\n}\n","import { ExecutionResult } from 'graphql';\n\nexport function tryFunctionOrLogError(f: Function) {\n  try {\n    return f();\n  } catch (e) {\n    if (console.error) {\n      console.error(e);\n    }\n  }\n}\n\nexport function graphQLResultHasError(result: ExecutionResult) {\n  return result.errors && result.errors.length;\n}\n","import { isDevelopment, isTest } from './environment';\n\n// Taken (mostly) from https://github.com/substack/deep-freeze to avoid\n// import hassles with rollup.\nfunction deepFreeze(o: any) {\n  Object.freeze(o);\n\n  Object.getOwnPropertyNames(o).forEach(function(prop) {\n    if (\n      o[prop] !== null &&\n      (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n      !Object.isFrozen(o[prop])\n    ) {\n      deepFreeze(o[prop]);\n    }\n  });\n\n  return o;\n}\n\nexport function maybeDeepFreeze(obj: any) {\n  if (isDevelopment() || isTest()) {\n    // Polyfilled Symbols potentially cause infinite / very deep recursion while deep freezing\n    // which is known to crash IE11 (https://github.com/apollographql/apollo-client/issues/3043).\n    const symbolIsPolyfilled =\n      typeof Symbol === 'function' && typeof Symbol('') === 'string';\n\n    if (!symbolIsPolyfilled) {\n      return deepFreeze(obj);\n    }\n  }\n  return obj;\n}\n","const { hasOwnProperty } = Object.prototype;\n\n// These mergeDeep and mergeDeepArray utilities merge any number of objects\n// together, sharing as much memory as possible with the source objects, while\n// remaining careful to avoid modifying any source objects.\n\n// Logically, the return type of mergeDeep should be the intersection of\n// all the argument types. The binary call signature is by far the most\n// common, but we support 0- through 5-ary as well. After that, the\n// resulting type is just the inferred array element type. Note to nerds:\n// there is a more clever way of doing this that converts the tuple type\n// first to a union type (easy enough: T[number]) and then converts the\n// union to an intersection type using distributive conditional type\n// inference, but that approach has several fatal flaws (boolean becomes\n// true & false, and the inferred type ends up as unknown in many cases),\n// in addition to being nearly impossible to explain/understand.\nexport type TupleToIntersection<T extends any[]> =\n  T extends [infer A] ? A :\n  T extends [infer A, infer B] ? A & B :\n  T extends [infer A, infer B, infer C] ? A & B & C :\n  T extends [infer A, infer B, infer C, infer D] ? A & B & C & D :\n  T extends [infer A, infer B, infer C, infer D, infer E] ? A & B & C & D & E :\n  T extends (infer U)[] ? U : any;\n\nexport function mergeDeep<T extends any[]>(\n  ...sources: T\n): TupleToIntersection<T> {\n  return mergeDeepArray(sources);\n}\n\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray<T>(sources: T[]): T {\n  let target = sources[0] || {} as T;\n  const count = sources.length;\n  if (count > 1) {\n    const pastCopies: any[] = [];\n    target = shallowCopyForMerge(target, pastCopies);\n    for (let i = 1; i < count; ++i) {\n      target = mergeHelper(target, sources[i], pastCopies);\n    }\n  }\n  return target;\n}\n\nfunction isObject(obj: any): obj is Record<string | number, any> {\n  return obj !== null && typeof obj === 'object';\n}\n\nfunction mergeHelper(\n  target: any,\n  source: any,\n  pastCopies: any[],\n) {\n  if (isObject(source) && isObject(target)) {\n    // In case the target has been frozen, make an extensible copy so that\n    // we can merge properties into the copy.\n    if (Object.isExtensible && !Object.isExtensible(target)) {\n      target = shallowCopyForMerge(target, pastCopies);\n    }\n\n    Object.keys(source).forEach(sourceKey => {\n      const sourceValue = source[sourceKey];\n      if (hasOwnProperty.call(target, sourceKey)) {\n        const targetValue = target[sourceKey];\n        if (sourceValue !== targetValue) {\n          // When there is a key collision, we need to make a shallow copy of\n          // target[sourceKey] so the merge does not modify any source objects.\n          // To avoid making unnecessary copies, we use a simple array to track\n          // past copies, since it's safe to modify copies created earlier in\n          // the merge. We use an array for pastCopies instead of a Map or Set,\n          // since the number of copies should be relatively small, and some\n          // Map/Set polyfills modify their keys.\n          target[sourceKey] = mergeHelper(\n            shallowCopyForMerge(targetValue, pastCopies),\n            sourceValue,\n            pastCopies,\n          );\n        }\n      } else {\n        // If there is no collision, the target can safely share memory with\n        // the source, and the recursion can terminate here.\n        target[sourceKey] = sourceValue;\n      }\n    });\n\n    return target;\n  }\n\n  // If source (or target) is not an object, let source replace target.\n  return source;\n}\n\nfunction shallowCopyForMerge<T>(value: T, pastCopies: any[]): T {\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    pastCopies.indexOf(value) < 0\n  ) {\n    if (Array.isArray(value)) {\n      value = (value as any).slice(0);\n    } else {\n      value = {\n        __proto__: Object.getPrototypeOf(value),\n        ...value,\n      };\n    }\n    pastCopies.push(value);\n  }\n  return value;\n}\n","import { isProduction, isTest } from './environment';\n\nconst haveWarned = Object.create({});\n\n/**\n * Print a warning only once in development.\n * In production no warnings are printed.\n * In test all warnings are printed.\n *\n * @param msg The warning message\n * @param type warn or error (will call console.warn or console.error)\n */\nexport function warnOnceInDevelopment(msg: string, type = 'warn') {\n  if (!isProduction() && !haveWarned[msg]) {\n    if (!isTest()) {\n      haveWarned[msg] = true;\n    }\n    if (type === 'error') {\n      console.error(msg);\n    } else {\n      console.warn(msg);\n    }\n  }\n}\n","const genericMessage = \"Invariant Violation\";\nconst {\n  setPrototypeOf = function (obj: any, proto: any) {\n    obj.__proto__ = proto;\n    return obj;\n  },\n} = Object as any;\n\nexport class InvariantError extends Error {\n  framesToPop = 1;\n  name = genericMessage;\n  constructor(message: string | number = genericMessage) {\n    super(\n      typeof message === \"number\"\n        ? `${genericMessage}: ${message} (see https://github.com/apollographql/invariant-packages)`\n        : message\n    );\n    setPrototypeOf(this, InvariantError.prototype);\n  }\n}\n\nexport function invariant(condition: any, message?: string | number) {\n  if (!condition) {\n    throw new InvariantError(message);\n  }\n}\n\nfunction wrapConsoleMethod(method: \"warn\" | \"error\") {\n  return function () {\n    return console[method].apply(console, arguments as any);\n  } as (...args: any[]) => void;\n}\n\nexport namespace invariant {\n  export const warn = wrapConsoleMethod(\"warn\");\n  export const error = wrapConsoleMethod(\"error\");\n}\n\n// Code that uses ts-invariant with rollup-plugin-invariant may want to\n// import this process stub to avoid errors evaluating process.env.NODE_ENV.\n// However, because most ESM-to-CJS compilers will rewrite the process import\n// as tsInvariant.process, which prevents proper replacement by minifiers, we\n// also attempt to define the stub globally when it is not already defined.\nlet processStub: NodeJS.Process = { env: {} } as any;\nexport { processStub as process };\nif (typeof process === \"object\") {\n  processStub = process;\n} else try {\n  // Using Function to evaluate this assignment in global scope also escapes\n  // the strict mode of the current module, thereby allowing the assignment.\n  // Inspired by https://github.com/facebook/regenerator/pull/369.\n  Function(\"stub\", \"process = stub\")(processStub);\n} catch (atLeastWeTried) {\n  // The assignment can fail if a Content Security Policy heavy-handedly\n  // forbids Function usage. In those environments, developers should take\n  // extra care to replace process.env.NODE_ENV in their production builds,\n  // or define an appropriate global.process polyfill.\n}\n\nexport default invariant;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","/* tslint:disable */\n\nimport zenObservable from 'zen-observable';\n\nnamespace Observable {\n\n}\n\nimport { ZenObservable } from './types';\n\nexport { ZenObservable };\n\nexport type Observer<T> = ZenObservable.Observer<T>;\nexport type Subscriber<T> = ZenObservable.Subscriber<T>;\nexport type ObservableLike<T> = ZenObservable.ObservableLike<T>;\n\nexport const Observable: {\n  new <T>(subscriber: Subscriber<T>): Observable<T>;\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n} = <any>zenObservable;\n\nexport interface Observable<T> {\n  subscribe(\n    observerOrNext: ((value: T) => void) | ZenObservable.Observer<T>,\n    error?: (error: any) => void,\n    complete?: () => void,\n  ): ZenObservable.Subscription;\n\n  forEach(fn: (value: T) => void): Promise<void>;\n\n  map<R>(fn: (value: T) => R): Observable<R>;\n\n  filter(fn: (value: T) => boolean): Observable<T>;\n\n  reduce<R = T>(\n    fn: (previousValue: R | T, currentValue: T) => R | T,\n    initialValue?: R | T,\n  ): Observable<R | T>;\n\n  flatMap<R>(fn: (value: T) => ZenObservable.ObservableLike<R>): Observable<R>;\n\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","var isEvent = function isEvent(candidate) {\n  return !!(candidate && candidate.stopPropagation && candidate.preventDefault);\n};\n\nexport default isEvent;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","import nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n  /* istanbul ignore else (See: https://github.com/graphql/graphql-js/issues/2317) */\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","import defineToJSON from \"../jsutils/defineToJSON.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location =\n/**\n * The character offset at which this Node begins.\n */\n\n/**\n * The character offset at which this Node ends.\n */\n\n/**\n * The Token at which this Node begins.\n */\n\n/**\n * The Token at which this Node ends.\n */\n\n/**\n * The Source document the AST represents.\n */\nfunction Location(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n}; // Print a simplified form when appearing in JSON/util.inspect.\n\ndefineToJSON(Location, function () {\n  return {\n    start: this.start,\n    end: this.end\n  };\n});\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token =\n/**\n * The kind of Token.\n */\n\n/**\n * The character offset at which this Node begins.\n */\n\n/**\n * The character offset at which this Node ends.\n */\n\n/**\n * The 1-indexed line number on which this Token appears.\n */\n\n/**\n * The 1-indexed column number at which this Token begins.\n */\n\n/**\n * For non-punctuation tokens, represents the interpreted value of the token.\n */\n\n/**\n * Tokens exist as nodes in a double-linked-list amongst all tokens\n * including ignored tokens. <SOF> is always the first node and <EOF>\n * the last.\n */\nfunction Token(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n}; // Print a simplified form when appearing in JSON/util.inspect.\n\ndefineToJSON(Token, function () {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n});\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    // $FlowFixMe(>=0.90.0)\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","/* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(lines);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n}\n/**\n * @internal\n */\n\nexport function getBlockStringIndentation(lines) {\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    if (commonIndent === null || indent < commonIndent) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  return commonIndent === null ? 0 : commonIndent;\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","const { toString, hasOwnProperty } = Object.prototype;\nconst previousComparisons = new Map<object, Set<object>>();\n\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a: any, b: any): boolean {\n  try {\n    return check(a, b);\n  } finally {\n    previousComparisons.clear();\n  }\n}\n\n// Allow default imports as well.\nexport default equal;\n\nfunction check(a: any, b: any): boolean {\n  // If the two values are strictly equal, our job is easy.\n  if (a === b) {\n    return true;\n  }\n\n  // Object.prototype.toString returns a representation of the runtime type of\n  // the given value that is considerably more precise than typeof.\n  const aTag = toString.call(a);\n  const bTag = toString.call(b);\n\n  // If the runtime types of a and b are different, they could maybe be equal\n  // under some interpretation of equality, but for simplicity and performance\n  // we just return false instead.\n  if (aTag !== bTag) {\n    return false;\n  }\n\n  switch (aTag) {\n    case '[object Array]':\n      // Arrays are a lot like other objects, but we can cheaply compare their\n      // lengths as a short-cut before comparing their elements.\n      if (a.length !== b.length) return false;\n      // Fall through to object case...\n    case '[object Object]': {\n      if (previouslyCompared(a, b)) return true;\n\n      const aKeys = Object.keys(a);\n      const bKeys = Object.keys(b);\n\n      // If `a` and `b` have a different number of enumerable keys, they\n      // must be different.\n      const keyCount = aKeys.length;\n      if (keyCount !== bKeys.length) return false;\n\n      // Now make sure they have the same keys.\n      for (let k = 0; k < keyCount; ++k) {\n        if (!hasOwnProperty.call(b, aKeys[k])) {\n          return false;\n        }\n      }\n\n      // Finally, check deep equality of all child properties.\n      for (let k = 0; k < keyCount; ++k) {\n        const key = aKeys[k];\n        if (!check(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Error]':\n      return a.name === b.name && a.message === b.message;\n\n    case '[object Number]':\n      // Handle NaN, which is !== itself.\n      if (a !== a) return b !== b;\n      // Fall through to shared +a === +b case...\n    case '[object Boolean]':\n    case '[object Date]':\n      return +a === +b;\n\n    case '[object RegExp]':\n    case '[object String]':\n      return a == `${b}`;\n\n    case '[object Map]':\n    case '[object Set]': {\n      if (a.size !== b.size) return false;\n      if (previouslyCompared(a, b)) return true;\n\n      const aIterator = a.entries();\n      const isMap = aTag === '[object Map]';\n\n      while (true) {\n        const info = aIterator.next();\n        if (info.done) break;\n\n        // If a instanceof Set, aValue === aKey.\n        const [aKey, aValue] = info.value;\n\n        // So this works the same way for both Set and Map.\n        if (!b.has(aKey)) {\n          return false;\n        }\n\n        // However, we care about deep equality of values only when dealing\n        // with Map structures.\n        if (isMap && !check(aValue, b.get(aKey))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  // Otherwise the values are not equal.\n  return false;\n}\n\nfunction previouslyCompared(a: object, b: object): boolean {\n  // Though cyclic references can make an object graph appear infinite from the\n  // perspective of a depth-first traversal, the graph still contains a finite\n  // number of distinct object references. We use the previousComparisons cache\n  // to avoid comparing the same pair of object references more than once, which\n  // guarantees termination (even if we end up comparing every object in one\n  // graph to every object in the other graph, which is extremely unlikely),\n  // while still allowing weird isomorphic structures (like rings with different\n  // lengths) a chance to pass the equality test.\n  let bSet = previousComparisons.get(a);\n  if (bSet) {\n    // Return true here because we can be sure false will be returned somewhere\n    // else if the objects are not equivalent.\n    if (bSet.has(b)) return true;\n  } else {\n    previousComparisons.set(a, bSet = new Set);\n  }\n  bSet.add(b);\n  return false;\n}\n","import Observable from 'zen-observable-ts';\n\nimport { GraphQLRequest, Operation } from './types';\nimport { ApolloLink } from './link';\n\nimport { getOperationName } from 'apollo-utilities';\nimport { invariant, InvariantError } from 'ts-invariant';\nexport { getOperationName };\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n\nexport class LinkError extends Error {\n  public link: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport function isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          invariant.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n\n// backwards compat\nexport const makePromise = toPromise;\n\nexport function fromPromise<T>(promise: Promise<T>): Observable<T> {\n  return new Observable<T>(observer => {\n    promise\n      .then((value: T) => {\n        observer.next(value);\n        observer.complete();\n      })\n      .catch(observer.error.bind(observer));\n  });\n}\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query)\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = next => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  Object.defineProperty(operation, 'toKey', {\n    enumerable: false,\n    value: () => getKey(operation),\n  });\n\n  return operation as Operation;\n}\n\nexport function getKey(operation: GraphQLRequest) {\n  // XXX We're assuming here that query and variables will be serialized in\n  // the same order, which might not always be true.\n  const { query, variables, operationName } = operation;\n  return JSON.stringify([operationName, query, variables]);\n}\n","import Observable from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport {\n  GraphQLRequest,\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n} from './types';\n\nimport {\n  validateOperation,\n  isTerminating,\n  LinkError,\n  transformOperation,\n  createOperation,\n} from './linkUtils';\n\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nexport function empty(): ApolloLink {\n  return new ApolloLink(() => Observable.of());\n}\n\nexport function from(links: ApolloLink[]): ApolloLink {\n  if (links.length === 0) return empty();\n  return links.map(toLink).reduce((x, y) => x.concat(y));\n}\n\nexport function split(\n  test: (op: Operation) => boolean,\n  left: ApolloLink | RequestHandler,\n  right?: ApolloLink | RequestHandler,\n): ApolloLink {\n  const leftLink = toLink(left);\n  const rightLink = toLink(right || new ApolloLink(passthrough));\n\n  if (isTerminating(leftLink) && isTerminating(rightLink)) {\n    return new ApolloLink(operation => {\n      return test(operation)\n        ? leftLink.request(operation) || Observable.of()\n        : rightLink.request(operation) || Observable.of();\n    });\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return test(operation)\n        ? leftLink.request(operation, forward) || Observable.of()\n        : rightLink.request(operation, forward) || Observable.of();\n    });\n  }\n}\n\n// join two Links together\nexport const concat = (\n  first: ApolloLink | RequestHandler,\n  second: ApolloLink | RequestHandler,\n) => {\n  const firstLink = toLink(first);\n  if (isTerminating(firstLink)) {\n    invariant.warn(\n      new LinkError(\n        `You are calling concat on a terminating link, which will have no effect`,\n        firstLink,\n      ),\n    );\n    return firstLink;\n  }\n  const nextLink = toLink(second);\n\n  if (isTerminating(nextLink)) {\n    return new ApolloLink(\n      operation =>\n        firstLink.request(\n          operation,\n          op => nextLink.request(op) || Observable.of(),\n        ) || Observable.of(),\n    );\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return (\n        firstLink.request(operation, op => {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of()\n      );\n    });\n  }\n};\n\nexport class ApolloLink {\n  public static empty = empty;\n  public static from = from;\n  public static split = split;\n  public static execute = execute;\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n}\n\nexport function execute(\n  link: ApolloLink,\n  operation: GraphQLRequest,\n): Observable<FetchResult> {\n  return (\n    link.request(\n      createOperation(\n        operation.context,\n        transformOperation(validateOperation(operation)),\n      ),\n    ) || Observable.of()\n  );\n}\n","import * as React from 'react';\nimport { BaseButton, Button } from '../../Button';\nimport { ITheme, IStyle } from '../../Styling';\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport { IIconProps } from '../../Icon';\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBar {}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the IMessageBar interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IMessageBar>;\n\n  /**\n   * The type of MessageBar to render.\n   * @defaultvalue MessageBarType.info\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * The actions you want to show on the other side.\n   */\n  actions?: JSX.Element;\n\n  /**\n   * A description of the message bar for the benefit of screen readers.\n   * @deprecated Use native prop `aria-label` instead.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Whether the message bar has a dismiss button and its callback.\n   * If null, we don't show a dismiss button.\n   * @defaultvalue null\n   */\n  onDismiss?: (ev?: React.MouseEvent<HTMLElement | BaseButton | Button>) => any;\n\n  /**\n   * Determines if the message bar is multi lined.\n   * If false, and the text overflows over buttons or to another line, it is clipped.\n   * @defaultvalue true\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Aria label on dismiss button if onDismiss is defined.\n   */\n  dismissButtonAriaLabel?: string;\n\n  /**\n   * Determines if the message bar text is truncated.\n   * If true, a button will render to toggle between a single line view and multiline view.\n   * This prop is for single line message bars with no buttons only in a limited space scenario.\n   * @defaultvalue false\n   */\n  truncated?: boolean;\n\n  /**\n   * Aria label on overflow button if truncated is defined.\n   */\n  overflowButtonAriaLabel?: string;\n\n  /**\n   * Additional CSS class(es) to apply to the MessageBar.\n   */\n  className?: string;\n\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IMessageBarStyleProps, IMessageBarStyles>;\n\n  /**\n   * Custom icon prop to replace the dismiss icon.\n   * If unset, default will be the Fabric Clear icon.\n   */\n  dismissIconProps?: IIconProps;\n\n  /**\n   * Custom icon prop to replace the message bar icon.\n   * If unset, default will be the icon set by messageBarType.\n   */\n  messageBarIconProps?: IIconProps;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyleProps {\n  /**\n   * Theme (provided through customization).\n   */\n  theme: ITheme;\n\n  /**\n   * Additional CSS class(es).\n   */\n  className?: string;\n\n  /**\n   * Type of the MessageBar.\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * Whether the MessageBar contains a dismiss button.\n   */\n  onDismiss?: boolean;\n\n  /**\n   * Whether the text is truncated.\n   */\n  truncated?: boolean;\n\n  /**\n   * Whether the MessageBar is rendered in multi line (as opposed to single line) mode.\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Whether the single line MessageBar is being expanded.\n   */\n  expandSingleLine?: boolean;\n\n  /**\n   * Whether the MessageBar contains any action elements.\n   */\n  actions?: boolean;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyles {\n  /**\n   * Style set for the root element.\n   */\n  root?: IStyle;\n\n  /**\n   * Style set for the element containing the icon, text, and optional dismiss button.\n   */\n  content?: IStyle;\n\n  /**\n   * Style set for the element containing the icon.\n   */\n  iconContainer?: IStyle;\n\n  /**\n   * Style set for the icon.\n   */\n  icon?: IStyle;\n\n  /**\n   * Style set for the element containing the text.\n   */\n  text?: IStyle;\n\n  /**\n   * Style set for the text.\n   */\n  innerText?: IStyle;\n\n  /**\n   * Style set for the optional dismiss button.\n   */\n  dismissal?: IStyle;\n\n  /**\n   * Style set for the icon used to expand and collapse the MessageBar.\n   */\n  expand?: IStyle;\n\n  /**\n   * Style set for the element containing the dismiss button.\n   */\n  dismissSingleLine?: IStyle;\n\n  /**\n   * Style set for the element containing the expand icon.\n   */\n  expandSingleLine?: IStyle;\n\n  /**\n   * Style set for the optional element containing the action elements.\n   */\n  actions?: IStyle;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport enum MessageBarType {\n  /** Info styled MessageBar */\n  info = 0,\n  /** Error styled MessageBar */\n  error = 1,\n  /** Blocked styled MessageBar */\n  blocked = 2,\n  /** SevereWarning styled MessageBar */\n  severeWarning = 3,\n  /** Success styled MessageBar */\n  success = 4,\n  /** Warning styled MessageBar */\n  warning = 5,\n  /**\n   * Deprecated at v0.48.0, to be removed at \\>= v1.0.0. Use `blocked` instead.\n   * @deprecated Use `blocked` instead.\n   */\n  remove = 90000\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nexport var ReduxFormContext = React.createContext(null);\nexport var renderChildren = function renderChildren(Component, _ref) {\n  var forwardedRef = _ref.forwardedRef,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"forwardedRef\"]);\n\n  return function (_reduxForm) {\n    return React.createElement(Component, _extends({}, rest, {\n      _reduxForm: _reduxForm,\n      ref: forwardedRef\n    }));\n  };\n};\nexport var withReduxForm = function withReduxForm(Component) {\n  var Hoc =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(Hoc, _React$Component);\n\n    function Hoc() {\n      return _React$Component.apply(this, arguments) || this;\n    }\n\n    var _proto = Hoc.prototype;\n\n    _proto.render = function render() {\n      return React.createElement(ReduxFormContext.Consumer, {\n        children: renderChildren(Component, this.props)\n      });\n    };\n\n    return Hoc;\n  }(React.Component);\n\n  var ref = React.forwardRef(function (props, ref) {\n    return React.createElement(Hoc, _extends({}, props, {\n      forwardedRef: ref\n    }));\n  });\n  ref.displayName = Component.displayName || Component.name || 'Component';\n  return ref;\n};","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","import React, { Component } from 'react';\nimport memoizeOne from 'memoize-one';\nimport { CacheProvider } from '@emotion/core';\nimport 'react-dom';\nimport 'prop-types';\nimport './utils-06b0d5a4.browser.esm.js';\nexport { y as components } from './index-4322c0ed.browser.esm.js';\nimport { S as Select } from './Select-9fdb8cd0.browser.esm.js';\nexport { c as createFilter, a as defaultTheme, m as mergeStyles } from './Select-9fdb8cd0.browser.esm.js';\nimport '@emotion/css';\nimport 'react-input-autosize';\nimport { m as manageState } from './stateManager-04f734a2.browser.esm.js';\nimport createCache from '@emotion/cache';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar NonceProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(NonceProvider, _Component);\n\n  function NonceProvider(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.createEmotionCache = function (nonce) {\n      return createCache({\n        nonce: nonce\n      });\n    };\n\n    _this.createEmotionCache = memoizeOne(_this.createEmotionCache);\n    return _this;\n  }\n\n  var _proto = NonceProvider.prototype;\n\n  _proto.render = function render() {\n    var emotionCache = this.createEmotionCache(this.props.nonce);\n    return React.createElement(CacheProvider, {\n      value: emotionCache\n    }, this.props.children);\n  };\n\n  return NonceProvider;\n}(Component);\n\nvar index = manageState(Select);\n\nexport default index;\nexport { NonceProvider };\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","/**\n * The current status of a query’s execution in our system.\n */\nexport enum NetworkStatus {\n  /**\n   * The query has never been run before and the query is now currently running. A query will still\n   * have this network status even if a partial data result was returned from the cache, but a\n   * query was dispatched anyway.\n   */\n  loading = 1,\n\n  /**\n   * If `setVariables` was called and a query was fired because of that then the network status\n   * will be `setVariables` until the result of that query comes back.\n   */\n  setVariables = 2,\n\n  /**\n   * Indicates that `fetchMore` was called on this query and that the query created is currently in\n   * flight.\n   */\n  fetchMore = 3,\n\n  /**\n   * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n   * and the refetch request is currently in flight.\n   */\n  refetch = 4,\n\n  /**\n   * Indicates that a polling query is currently in flight. So for example if you are polling a\n   * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n   * a poll request has been sent but not resolved.\n   */\n  poll = 6,\n\n  /**\n   * No request is in flight for this query, and no errors happened. Everything is OK.\n   */\n  ready = 7,\n\n  /**\n   * No request is in flight for this query, but one or more errors were detected.\n   */\n  error = 8,\n}\n\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(\n  networkStatus: NetworkStatus,\n): boolean {\n  return networkStatus < 7;\n}\n","// This simplified polyfill attempts to follow the ECMAScript Observable proposal.\n// See https://github.com/zenparsing/es-observable\nimport { Observable as LinkObservable } from 'apollo-link';\n\nexport type Subscription = ZenObservable.Subscription;\nexport type Observer<T> = ZenObservable.Observer<T>;\n\nimport $$observable from 'symbol-observable';\n\n// rxjs interopt\nexport class Observable<T> extends LinkObservable<T> {\n  public [$$observable]() {\n    return this;\n  }\n\n  public ['@@observable' as any]() {\n    return this;\n  }\n}\n","export function isNonEmptyArray<T>(value?: ArrayLike<T>): value is Array<T> {\n  return Array.isArray(value) && value.length > 0;\n}\n","import { GraphQLError } from 'graphql';\nimport { isNonEmptyArray } from '../util/arrays';\n\nexport function isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nconst generateErrorMessage = (err: ApolloError) => {\n  let message = '';\n  // If we have GraphQL errors present, add that to the error message.\n  if (isNonEmptyArray(err.graphQLErrors)) {\n    err.graphQLErrors.forEach((graphQLError: GraphQLError) => {\n      const errorMessage = graphQLError\n        ? graphQLError.message\n        : 'Error message not found.';\n      message += `GraphQL error: ${errorMessage}\\n`;\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  // strip newline from the end of the message\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nexport class ApolloError extends Error {\n  public message: string;\n  public graphQLErrors: ReadonlyArray<GraphQLError>;\n  public networkError: Error | null;\n\n  // An object that can be used to provide some additional information\n  // about an error, e.g. specifying the type of error this is. Used\n  // internally within Apollo Client.\n  public extraInfo: any;\n\n  // Constructs an instance of ApolloError given a GraphQLError\n  // or a network error. Note that one of these has to be a valid\n  // value or the constructed error will be meaningless.\n  constructor({\n    graphQLErrors,\n    networkError,\n    errorMessage,\n    extraInfo,\n  }: {\n    graphQLErrors?: ReadonlyArray<GraphQLError>;\n    networkError?: Error | null;\n    errorMessage?: string;\n    extraInfo?: any;\n  }) {\n    super(errorMessage);\n    this.graphQLErrors = graphQLErrors || [];\n    this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      this.message = generateErrorMessage(this);\n    } else {\n      this.message = errorMessage;\n    }\n\n    this.extraInfo = extraInfo;\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = ApolloError.prototype;\n  }\n}\n","import { FetchResult } from 'apollo-link';\nimport { DocumentNode, GraphQLError } from 'graphql';\n\nimport { QueryStoreValue } from '../data/queries';\nimport { NetworkStatus } from './networkStatus';\nimport { Resolver } from './LocalState';\n\nexport type QueryListener = (\n  queryStoreValue: QueryStoreValue,\n  newData?: any,\n  forceResolvers?: boolean,\n) => void;\n\nexport type OperationVariables = { [key: string]: any };\n\nexport type PureQueryOptions = {\n  query: DocumentNode;\n  variables?: { [key: string]: any };\n  context?: any;\n};\n\nexport type ApolloQueryResult<T> = {\n  data: T;\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  stale: boolean;\n};\n\nexport enum FetchType {\n  normal = 1,\n  refetch = 2,\n  poll = 3,\n}\n\n// This is part of the public API, people write these functions in `updateQueries`.\nexport type MutationQueryReducer<T> = (\n  previousResult: Record<string, any>,\n  options: {\n    mutationResult: FetchResult<T>;\n    queryName: string | undefined;\n    queryVariables: Record<string, any>;\n  },\n) => Record<string, any>;\n\nexport type MutationQueryReducersMap<T = { [key: string]: any }> = {\n  [queryName: string]: MutationQueryReducer<T>;\n};\n\nexport interface Resolvers {\n  [key: string]: {\n    [ field: string ]: Resolver;\n  };\n}\n","import {\n  isEqual,\n  tryFunctionOrLogError,\n  cloneDeep,\n  getOperationDefinition,\n} from 'apollo-utilities';\nimport { GraphQLError } from 'graphql';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { Observable, Observer, Subscription } from '../util/Observable';\nimport { ApolloError } from '../errors/ApolloError';\nimport { QueryManager } from './QueryManager';\nimport { ApolloQueryResult, FetchType, OperationVariables } from './types';\nimport {\n  WatchQueryOptions,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  ErrorPolicy,\n} from './watchQueryOptions';\n\nimport { QueryStoreValue } from '../data/queries';\n\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { isNonEmptyArray } from '../util/arrays';\n\n// XXX remove in the next breaking semver change (3.0)\n// Deprecated, use ApolloCurrentQueryResult\nexport type ApolloCurrentResult<T> = {\n  data: T | {};\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  error?: ApolloError;\n  partial?: boolean;\n};\n\nexport type ApolloCurrentQueryResult<T> = {\n  data: T | undefined;\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  error?: ApolloError;\n  partial?: boolean;\n  stale?: boolean;\n};\n\nexport interface FetchMoreOptions<\n  TData = any,\n  TVariables = OperationVariables\n> {\n  updateQuery: (\n    previousQueryResult: TData,\n    options: {\n      fetchMoreResult?: TData;\n      variables?: TVariables;\n    },\n  ) => TData;\n}\n\nexport interface UpdateQueryOptions<TVariables> {\n  variables?: TVariables;\n}\n\nexport const hasError = (\n  storeValue: QueryStoreValue,\n  policy: ErrorPolicy = 'none',\n) => storeValue && (\n  storeValue.networkError ||\n  (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors))\n);\n\nexport class ObservableQuery<\n  TData = any,\n  TVariables = OperationVariables\n> extends Observable<ApolloQueryResult<TData>> {\n  public options: WatchQueryOptions<TVariables>;\n  public readonly queryId: string;\n  public readonly queryName?: string;\n  /**\n   *\n   * The current value of the variables for this query. Can change.\n   */\n  public variables: TVariables;\n\n  private shouldSubscribe: boolean;\n  private isTornDown: boolean;\n  private queryManager: QueryManager<any>;\n  private observers = new Set<Observer<ApolloQueryResult<TData>>>();\n  private subscriptions = new Set<Subscription>();\n\n  private lastResult: ApolloQueryResult<TData>;\n  private lastResultSnapshot: ApolloQueryResult<TData>;\n  private lastError: ApolloError;\n\n  constructor({\n    queryManager,\n    options,\n    shouldSubscribe = true,\n  }: {\n    queryManager: QueryManager<any>;\n    options: WatchQueryOptions<TVariables>;\n    shouldSubscribe?: boolean;\n  }) {\n    super((observer: Observer<ApolloQueryResult<TData>>) =>\n      this.onSubscribe(observer),\n    );\n\n    // active state\n    this.isTornDown = false;\n\n    // query information\n    this.options = options;\n    this.variables = options.variables || ({} as TVariables);\n    this.queryId = queryManager.generateQueryId();\n    this.shouldSubscribe = shouldSubscribe;\n\n    const opDef = getOperationDefinition(options.query);\n    this.queryName = opDef && opDef.name && opDef.name.value;\n\n    // related classes\n    this.queryManager = queryManager;\n  }\n\n  public result(): Promise<ApolloQueryResult<TData>> {\n    return new Promise((resolve, reject) => {\n      const observer: Observer<ApolloQueryResult<TData>> = {\n        next: (result: ApolloQueryResult<TData>) => {\n          resolve(result);\n\n          // Stop the query within the QueryManager if we can before\n          // this function returns.\n          //\n          // We do this in order to prevent observers piling up within\n          // the QueryManager. Notice that we only fully unsubscribe\n          // from the subscription in a setTimeout(..., 0)  call. This call can\n          // actually be handled by the browser at a much later time. If queries\n          // are fired in the meantime, observers that should have been removed\n          // from the QueryManager will continue to fire, causing an unnecessary\n          // performance hit.\n          this.observers.delete(observer);\n          if (!this.observers.size) {\n            this.queryManager.removeQuery(this.queryId);\n          }\n\n          setTimeout(() => {\n            subscription.unsubscribe();\n          }, 0);\n        },\n        error: reject,\n      };\n      const subscription = this.subscribe(observer);\n    });\n  }\n\n  // XXX remove in the next breaking semver change (3.0)\n  // Deprecated, use getCurrentResult()\n  public currentResult(): ApolloCurrentResult<TData> {\n    const result = this.getCurrentResult() as ApolloCurrentResult<TData>;\n    if (result.data === undefined) {\n      result.data = {};\n    }\n    return result;\n  }\n\n  /**\n   * Return the result of the query from the local cache as well as some fetching status\n   * `loading` and `networkStatus` allow to know if a request is in flight\n   * `partial` lets you know if the result from the local cache is complete or partial\n   * @return {data: Object, error: ApolloError, loading: boolean, networkStatus: number, partial: boolean}\n   */\n  public getCurrentResult(): ApolloCurrentQueryResult<TData> {\n    if (this.isTornDown) {\n      const { lastResult } = this;\n      return {\n        data: !this.lastError && lastResult && lastResult.data || void 0,\n        error: this.lastError,\n        loading: false,\n        networkStatus: NetworkStatus.error,\n      };\n    }\n\n    const { data, partial } = this.queryManager.getCurrentQueryResult(this);\n    const queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n    let result: ApolloQueryResult<TData>;\n\n    const { fetchPolicy } = this.options;\n\n    const isNetworkFetchPolicy =\n      fetchPolicy === 'network-only' ||\n      fetchPolicy === 'no-cache';\n\n    if (queryStoreValue) {\n      const { networkStatus } = queryStoreValue;\n\n      if (hasError(queryStoreValue, this.options.errorPolicy)) {\n        return {\n          data: void 0,\n          loading: false,\n          networkStatus,\n          error: new ApolloError({\n            graphQLErrors: queryStoreValue.graphQLErrors,\n            networkError: queryStoreValue.networkError,\n          }),\n        };\n      }\n\n      // Variables might have been added dynamically at query time, when\n      // using `@client @export(as: \"varname\")` for example. When this happens,\n      // the variables have been updated in the query store, but not updated on\n      // the original `ObservableQuery`. We'll update the observable query\n      // variables here to match, so retrieving from the cache doesn't fail.\n      if (queryStoreValue.variables) {\n        this.options.variables = {\n          ...this.options.variables,\n          ...(queryStoreValue.variables as TVariables),\n        };\n        this.variables = this.options.variables;\n      }\n\n      result = {\n        data,\n        loading: isNetworkRequestInFlight(networkStatus),\n        networkStatus,\n      } as ApolloQueryResult<TData>;\n\n      if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n        result.errors = queryStoreValue.graphQLErrors;\n      }\n\n    } else {\n      // We need to be careful about the loading state we show to the user, to try\n      // and be vaguely in line with what the user would have seen from .subscribe()\n      // but to still provide useful information synchronously when the query\n      // will not end up hitting the server.\n      // See more: https://github.com/apollostack/apollo-client/issues/707\n      // Basically: is there a query in flight right now (modolo the next tick)?\n      const loading = isNetworkFetchPolicy ||\n        (partial && fetchPolicy !== 'cache-only');\n\n      result = {\n        data,\n        loading,\n        networkStatus: loading ? NetworkStatus.loading : NetworkStatus.ready,\n      } as ApolloQueryResult<TData>;\n    }\n\n    if (!partial) {\n      this.updateLastResult({ ...result, stale: false });\n    }\n\n    return { ...result, partial };\n  }\n\n  // Compares newResult to the snapshot we took of this.lastResult when it was\n  // first received.\n  public isDifferentFromLastResult(newResult: ApolloQueryResult<TData>) {\n    const { lastResultSnapshot: snapshot } = this;\n    return !(\n      snapshot &&\n      newResult &&\n      snapshot.networkStatus === newResult.networkStatus &&\n      snapshot.stale === newResult.stale &&\n      isEqual(snapshot.data, newResult.data)\n    );\n  }\n\n  // Returns the last result that observer.next was called with. This is not the same as\n  // getCurrentResult! If you're not sure which you need, then you probably need getCurrentResult.\n  public getLastResult(): ApolloQueryResult<TData> {\n    return this.lastResult;\n  }\n\n  public getLastError(): ApolloError {\n    return this.lastError;\n  }\n\n  public resetLastResults(): void {\n    delete this.lastResult;\n    delete this.lastResultSnapshot;\n    delete this.lastError;\n    this.isTornDown = false;\n  }\n\n  public resetQueryStoreErrors() {\n    const queryStore = this.queryManager.queryStore.get(this.queryId);\n    if (queryStore) {\n      queryStore.networkError = null;\n      queryStore.graphQLErrors = [];\n    }\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results.\n   * This method should be preferred over `setVariables` in most use cases.\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public refetch(variables?: TVariables): Promise<ApolloQueryResult<TData>> {\n    let { fetchPolicy } = this.options;\n    // early return if trying to read from cache during refetch\n    if (fetchPolicy === 'cache-only') {\n      return Promise.reject(new InvariantError(\n        'cache-only fetchPolicy option should not be used together with query refetch.',\n      ));\n    }\n\n    // Unless the provided fetchPolicy always consults the network\n    // (no-cache, network-only, or cache-and-network), override it with\n    // network-only to force the refetch for this fetchQuery call.\n    if (fetchPolicy !== 'no-cache' &&\n        fetchPolicy !== 'cache-and-network') {\n      fetchPolicy = 'network-only';\n    }\n\n    if (!isEqual(this.variables, variables)) {\n      // update observable variables\n      this.variables = {\n        ...this.variables,\n        ...variables,\n      };\n    }\n\n    if (!isEqual(this.options.variables, this.variables)) {\n      // Update the existing options with new variables\n      this.options.variables = {\n        ...this.options.variables,\n        ...this.variables,\n      };\n    }\n\n    return this.queryManager.fetchQuery(\n      this.queryId,\n      { ...this.options, fetchPolicy },\n      FetchType.refetch,\n    ) as Promise<ApolloQueryResult<TData>>;\n  }\n\n  public fetchMore<K extends keyof TVariables>(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, K> &\n      FetchMoreOptions<TData, TVariables>,\n  ): Promise<ApolloQueryResult<TData>> {\n    // early return if no update Query\n    invariant(\n      fetchMoreOptions.updateQuery,\n      'updateQuery option is required. This function defines how to update the query data with the new results.',\n    );\n\n    const combinedOptions = {\n      ...(fetchMoreOptions.query ? fetchMoreOptions : {\n        ...this.options,\n        ...fetchMoreOptions,\n        variables: {\n          ...this.variables,\n          ...fetchMoreOptions.variables,\n        },\n      }),\n      fetchPolicy: 'network-only',\n    } as WatchQueryOptions;\n\n    const qid = this.queryManager.generateQueryId();\n\n    return this.queryManager\n      .fetchQuery(\n        qid,\n        combinedOptions,\n        FetchType.normal,\n        this.queryId,\n      )\n      .then(\n        fetchMoreResult => {\n          this.updateQuery((previousResult: any) =>\n            fetchMoreOptions.updateQuery(previousResult, {\n              fetchMoreResult: fetchMoreResult.data as TData,\n              variables: combinedOptions.variables as TVariables,\n            }),\n          );\n          this.queryManager.stopQuery(qid);\n          return fetchMoreResult as ApolloQueryResult<TData>;\n        },\n        error => {\n          this.queryManager.stopQuery(qid);\n          throw error;\n        },\n      );\n  }\n\n  // XXX the subscription variables are separate from the query variables.\n  // if you want to update subscription variables, right now you have to do that separately,\n  // and you can only do it by stopping the subscription and then subscribing again with new variables.\n  public subscribeToMore<\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >,\n  ) {\n    const subscription = this.queryManager\n      .startGraphQLSubscription({\n        query: options.document,\n        variables: options.variables,\n      })\n      .subscribe({\n        next: (subscriptionData: { data: TSubscriptionData }) => {\n          const { updateQuery } = options;\n          if (updateQuery) {\n            this.updateQuery<TSubscriptionVariables>(\n              (previous, { variables }) =>\n                updateQuery(previous, {\n                  subscriptionData,\n                  variables,\n                }),\n            );\n          }\n        },\n        error: (err: any) => {\n          if (options.onError) {\n            options.onError(err);\n            return;\n          }\n          invariant.error('Unhandled GraphQL subscription error', err);\n        },\n      });\n\n    this.subscriptions.add(subscription);\n\n    return () => {\n      if (this.subscriptions.delete(subscription)) {\n        subscription.unsubscribe();\n      }\n    };\n  }\n\n  // Note: if the query is not active (there are no subscribers), the promise\n  // will return null immediately.\n  public setOptions(\n    opts: WatchQueryOptions,\n  ): Promise<ApolloQueryResult<TData> | void> {\n    const { fetchPolicy: oldFetchPolicy } = this.options;\n    this.options = {\n      ...this.options,\n      ...opts,\n    } as WatchQueryOptions<TVariables>;\n\n    if (opts.pollInterval) {\n      this.startPolling(opts.pollInterval);\n    } else if (opts.pollInterval === 0) {\n      this.stopPolling();\n    }\n\n    const { fetchPolicy } = opts;\n\n    return this.setVariables(\n      this.options.variables as TVariables,\n      // Try to fetch the query if fetchPolicy changed from either cache-only\n      // or standby to something else, or changed to network-only.\n      oldFetchPolicy !== fetchPolicy && (\n        oldFetchPolicy === 'cache-only' ||\n        oldFetchPolicy === 'standby' ||\n        fetchPolicy === 'network-only'\n      ),\n      opts.fetchResults,\n    );\n  }\n\n  /**\n   * This is for *internal* use only. Most users should instead use `refetch`\n   * in order to be properly notified of results even when they come from cache.\n   *\n   * Update the variables of this observable query, and fetch the new results\n   * if they've changed. If you want to force new results, use `refetch`.\n   *\n   * Note: the `next` callback will *not* fire if the variables have not changed\n   * or if the result is coming from cache.\n   *\n   * Note: the promise will return the old results immediately if the variables\n   * have not changed.\n   *\n   * Note: the promise will return null immediately if the query is not active\n   * (there are no subscribers).\n   *\n   * @private\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   *\n   * @param tryFetch: Try and fetch new results even if the variables haven't\n   * changed (we may still just hit the store, but if there's nothing in there\n   * this will refetch)\n   *\n   * @param fetchResults: Option to ignore fetching results when updating variables\n   */\n  public setVariables(\n    variables: TVariables,\n    tryFetch: boolean = false,\n    fetchResults = true,\n  ): Promise<ApolloQueryResult<TData> | void> {\n    // since setVariables restarts the subscription, we reset the tornDown status\n    this.isTornDown = false;\n\n    variables = variables || this.variables;\n\n    if (!tryFetch && isEqual(variables, this.variables)) {\n      // If we have no observers, then we don't actually want to make a network\n      // request. As soon as someone observes the query, the request will kick\n      // off. For now, we just store any changes. (See #1077)\n      return this.observers.size && fetchResults\n        ? this.result()\n        : Promise.resolve();\n    }\n\n    this.variables = this.options.variables = variables;\n\n    // See comment above\n    if (!this.observers.size) {\n      return Promise.resolve();\n    }\n\n    // Use the same options as before, but with new variables\n    return this.queryManager.fetchQuery(\n      this.queryId,\n      this.options,\n    ) as Promise<ApolloQueryResult<TData>>;\n  }\n\n  public updateQuery<TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>,\n    ) => TData,\n  ): void {\n    const { queryManager } = this;\n    const {\n      previousResult,\n      variables,\n      document,\n    } = queryManager.getQueryWithPreviousResult<TData, TVars>(\n      this.queryId,\n    );\n\n    const newResult = tryFunctionOrLogError(() =>\n      mapFn(previousResult, { variables }),\n    );\n\n    if (newResult) {\n      queryManager.dataStore.markUpdateQueryResult(\n        document,\n        variables,\n        newResult,\n      );\n      queryManager.broadcastQueries();\n    }\n  }\n\n  public stopPolling() {\n    this.queryManager.stopPollingQuery(this.queryId);\n    this.options.pollInterval = undefined;\n  }\n\n  public startPolling(pollInterval: number) {\n    assertNotCacheFirstOrOnly(this);\n    this.options.pollInterval = pollInterval;\n    this.queryManager.startPollingQuery(this.options, this.queryId);\n  }\n\n  private updateLastResult(newResult: ApolloQueryResult<TData>) {\n    const previousResult = this.lastResult;\n    this.lastResult = newResult;\n    this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n      ? newResult\n      : cloneDeep(newResult);\n    return previousResult;\n  }\n\n  private onSubscribe(observer: Observer<ApolloQueryResult<TData>>) {\n    // Zen Observable has its own error function, so in order to log correctly\n    // we need to provide a custom error callback.\n    try {\n      var subObserver = (observer as any)._subscription._observer;\n      if (subObserver && !subObserver.error) {\n        subObserver.error = defaultSubscriptionObserverErrorCallback;\n      }\n    } catch {}\n\n    const first = !this.observers.size;\n    this.observers.add(observer);\n\n    // Deliver initial result\n    if (observer.next && this.lastResult) observer.next(this.lastResult);\n    if (observer.error && this.lastError) observer.error(this.lastError);\n\n    // setup the query if it hasn't been done before\n    if (first) {\n      this.setUpQuery();\n    }\n\n    return () => {\n      if (this.observers.delete(observer) && !this.observers.size) {\n        this.tearDownQuery();\n      }\n    };\n  }\n\n  private setUpQuery() {\n    const { queryManager, queryId } = this;\n\n    if (this.shouldSubscribe) {\n      queryManager.addObservableQuery<TData>(queryId, this);\n    }\n\n    if (this.options.pollInterval) {\n      assertNotCacheFirstOrOnly(this);\n      queryManager.startPollingQuery(this.options, queryId);\n    }\n\n    const onError = (error: ApolloError) => {\n      // Since we don't get the current result on errors, only the error, we\n      // must mirror the updates that occur in QueryStore.markQueryError here\n      this.updateLastResult({\n        ...this.lastResult,\n        errors: error.graphQLErrors,\n        networkStatus: NetworkStatus.error,\n        loading: false,\n      });\n      iterateObserversSafely(this.observers, 'error', this.lastError = error);\n    };\n\n    queryManager.observeQuery<TData>(queryId, this.options, {\n      next: (result: ApolloQueryResult<TData>) => {\n        if (this.lastError || this.isDifferentFromLastResult(result)) {\n          const previousResult = this.updateLastResult(result);\n          const { query, variables, fetchPolicy } = this.options;\n\n          // Before calling `next` on each observer, we need to first see if\n          // the query is using `@client @export` directives, and update\n          // any variables that might have changed. If `@export` variables have\n          // changed, and the query is calling against both local and remote\n          // data, a refetch is needed to pull in new data, using the\n          // updated `@export` variables.\n          if (queryManager.transform(query).hasClientExports) {\n            queryManager.getLocalState().addExportedVariables(\n              query,\n              variables,\n            ).then((variables: TVariables) => {\n              const previousVariables = this.variables;\n              this.variables = this.options.variables = variables;\n              if (\n                !result.loading &&\n                previousResult &&\n                fetchPolicy !== 'cache-only' &&\n                queryManager.transform(query).serverQuery &&\n                !isEqual(previousVariables, variables)\n              ) {\n                this.refetch();\n              } else {\n                iterateObserversSafely(this.observers, 'next', result);\n              }\n            });\n          } else {\n            iterateObserversSafely(this.observers, 'next', result);\n          }\n        }\n      },\n      error: onError,\n    }).catch(onError);\n  }\n\n  private tearDownQuery() {\n    const { queryManager } = this;\n\n    this.isTornDown = true;\n    queryManager.stopPollingQuery(this.queryId);\n\n    // stop all active GraphQL subscriptions\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.subscriptions.clear();\n\n    queryManager.removeObservableQuery(this.queryId);\n    queryManager.stopQuery(this.queryId);\n\n    this.observers.clear();\n  }\n}\n\nfunction defaultSubscriptionObserverErrorCallback(error: ApolloError) {\n  invariant.error('Unhandled error', error.message, error.stack);\n}\n\nfunction iterateObserversSafely<E, A>(\n  observers: Set<Observer<E>>,\n  method: keyof Observer<E>,\n  argument?: A,\n) {\n  // In case observers is modified during iteration, we need to commit to the\n  // original elements, which also provides an opportunity to filter them down\n  // to just the observers with the given method.\n  const observersWithMethod: Observer<E>[] = [];\n  observers.forEach(obs => obs[method] && observersWithMethod.push(obs));\n  observersWithMethod.forEach(obs => (obs as any)[method](argument));\n}\n\nfunction assertNotCacheFirstOrOnly<TData, TVariables>(\n  obsQuery: ObservableQuery<TData, TVariables>,\n) {\n  const { fetchPolicy } = obsQuery.options;\n  invariant(\n    fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only',\n    'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.',\n  );\n}\n","import { DocumentNode } from 'graphql';\n\nexport class MutationStore {\n  private store: { [mutationId: string]: MutationStoreValue } = {};\n\n  public getStore(): { [mutationId: string]: MutationStoreValue } {\n    return this.store;\n  }\n\n  public get(mutationId: string): MutationStoreValue {\n    return this.store[mutationId];\n  }\n\n  public initMutation(\n    mutationId: string,\n    mutation: DocumentNode,\n    variables: Object | undefined,\n  ) {\n    this.store[mutationId] = {\n      mutation,\n      variables: variables || {},\n      loading: true,\n      error: null,\n    };\n  }\n\n  public markMutationError(mutationId: string, error: Error) {\n    const mutation = this.store[mutationId];\n    if (mutation) {\n      mutation.loading = false;\n      mutation.error = error;\n    }\n  }\n\n  public markMutationResult(mutationId: string) {\n    const mutation = this.store[mutationId];\n    if (mutation) {\n      mutation.loading = false;\n      mutation.error = null;\n    }\n  }\n\n  public reset() {\n    this.store = {};\n  }\n}\n\nexport interface MutationStoreValue {\n  mutation: DocumentNode;\n  variables: Object;\n  loading: boolean;\n  error: Error | null;\n}\n","import { DocumentNode, GraphQLError, ExecutionResult } from 'graphql';\nimport { isEqual } from 'apollo-utilities';\nimport { invariant } from 'ts-invariant';\nimport { NetworkStatus } from '../core/networkStatus';\nimport { isNonEmptyArray } from '../util/arrays';\n\nexport type QueryStoreValue = {\n  document: DocumentNode;\n  variables: Object;\n  previousVariables?: Object | null;\n  networkStatus: NetworkStatus;\n  networkError?: Error | null;\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  metadata: any;\n};\n\nexport class QueryStore {\n  private store: { [queryId: string]: QueryStoreValue } = {};\n\n  public getStore(): { [queryId: string]: QueryStoreValue } {\n    return this.store;\n  }\n\n  public get(queryId: string): QueryStoreValue {\n    return this.store[queryId];\n  }\n\n  public initQuery(query: {\n    queryId: string;\n    document: DocumentNode;\n    storePreviousVariables: boolean;\n    variables: Object;\n    isPoll: boolean;\n    isRefetch: boolean;\n    metadata: any;\n    fetchMoreForQueryId: string | undefined;\n  }) {\n    const previousQuery = this.store[query.queryId];\n\n    // XXX we're throwing an error here to catch bugs where a query gets overwritten by a new one.\n    // we should implement a separate action for refetching so that QUERY_INIT may never overwrite\n    // an existing query (see also: https://github.com/apollostack/apollo-client/issues/732)\n    invariant(\n      !previousQuery ||\n      previousQuery.document === query.document ||\n      isEqual(previousQuery.document, query.document),\n      'Internal Error: may not update existing query string in store',\n    );\n\n    let isSetVariables = false;\n\n    let previousVariables: Object | null = null;\n    if (\n      query.storePreviousVariables &&\n      previousQuery &&\n      previousQuery.networkStatus !== NetworkStatus.loading\n      // if the previous query was still loading, we don't want to remember it at all.\n    ) {\n      if (!isEqual(previousQuery.variables, query.variables)) {\n        isSetVariables = true;\n        previousVariables = previousQuery.variables;\n      }\n    }\n\n    // TODO break this out into a separate function\n    let networkStatus;\n    if (isSetVariables) {\n      networkStatus = NetworkStatus.setVariables;\n    } else if (query.isPoll) {\n      networkStatus = NetworkStatus.poll;\n    } else if (query.isRefetch) {\n      networkStatus = NetworkStatus.refetch;\n      // TODO: can we determine setVariables here if it's a refetch and the variables have changed?\n    } else {\n      networkStatus = NetworkStatus.loading;\n    }\n\n    let graphQLErrors: ReadonlyArray<GraphQLError> = [];\n    if (previousQuery && previousQuery.graphQLErrors) {\n      graphQLErrors = previousQuery.graphQLErrors;\n    }\n\n    // XXX right now if QUERY_INIT is fired twice, like in a refetch situation, we just overwrite\n    // the store. We probably want a refetch action instead, because I suspect that if you refetch\n    // before the initial fetch is done, you'll get an error.\n    this.store[query.queryId] = {\n      document: query.document,\n      variables: query.variables,\n      previousVariables,\n      networkError: null,\n      graphQLErrors: graphQLErrors,\n      networkStatus,\n      metadata: query.metadata,\n    };\n\n    // If the action had a `moreForQueryId` property then we need to set the\n    // network status on that query as well to `fetchMore`.\n    //\n    // We have a complement to this if statement in the query result and query\n    // error action branch, but importantly *not* in the client result branch.\n    // This is because the implementation of `fetchMore` *always* sets\n    // `fetchPolicy` to `network-only` so we would never have a client result.\n    if (\n      typeof query.fetchMoreForQueryId === 'string' &&\n      this.store[query.fetchMoreForQueryId]\n    ) {\n      this.store[query.fetchMoreForQueryId].networkStatus =\n        NetworkStatus.fetchMore;\n    }\n  }\n\n  public markQueryResult(\n    queryId: string,\n    result: ExecutionResult,\n    fetchMoreForQueryId: string | undefined,\n  ) {\n    if (!this.store || !this.store[queryId]) return;\n\n    this.store[queryId].networkError = null;\n    this.store[queryId].graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n    this.store[queryId].previousVariables = null;\n    this.store[queryId].networkStatus = NetworkStatus.ready;\n\n    // If we have a `fetchMoreForQueryId` then we need to update the network\n    // status for that query. See the branch for query initialization for more\n    // explanation about this process.\n    if (\n      typeof fetchMoreForQueryId === 'string' &&\n      this.store[fetchMoreForQueryId]\n    ) {\n      this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n    }\n  }\n\n  public markQueryError(\n    queryId: string,\n    error: Error,\n    fetchMoreForQueryId: string | undefined,\n  ) {\n    if (!this.store || !this.store[queryId]) return;\n\n    this.store[queryId].networkError = error;\n    this.store[queryId].networkStatus = NetworkStatus.error;\n\n    // If we have a `fetchMoreForQueryId` then we need to update the network\n    // status for that query. See the branch for query initialization for more\n    // explanation about this process.\n    if (typeof fetchMoreForQueryId === 'string') {\n      this.markQueryResultClient(fetchMoreForQueryId, true);\n    }\n  }\n\n  public markQueryResultClient(queryId: string, complete: boolean) {\n    const storeValue = this.store && this.store[queryId];\n    if (storeValue) {\n      storeValue.networkError = null;\n      storeValue.previousVariables = null;\n      if (complete) {\n        storeValue.networkStatus = NetworkStatus.ready;\n      }\n    }\n  }\n\n  public stopQuery(queryId: string) {\n    delete this.store[queryId];\n  }\n\n  public reset(observableQueryIds: string[]) {\n    Object.keys(this.store).forEach(queryId => {\n      if (observableQueryIds.indexOf(queryId) < 0) {\n        this.stopQuery(queryId);\n      } else {\n        // XXX set loading to true so listeners don't trigger unless they want results with partial data\n        this.store[queryId].networkStatus = NetworkStatus.loading;\n      }\n    });\n  }\n}\n","import {\n  ExecutionResult,\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  SelectionNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  FieldNode,\n  ASTNode,\n} from 'graphql';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nimport { ApolloCache } from 'apollo-cache';\nimport {\n  getMainDefinition,\n  buildQueryFromSelectionSet,\n  hasDirectives,\n  removeClientSetsFromDocument,\n  mergeDeep,\n  mergeDeepArray,\n  FragmentMap,\n  argumentsObjectFromField,\n  resultKeyNameFromField,\n  getFragmentDefinitions,\n  createFragmentMap,\n  shouldInclude,\n  isField,\n  isInlineFragment,\n} from 'apollo-utilities';\n\nimport { invariant } from 'ts-invariant';\n\nimport ApolloClient from '../ApolloClient';\nimport { Resolvers, OperationVariables } from './types';\nimport { capitalizeFirstLetter } from '../util/capitalizeFirstLetter';\n\nexport type Resolver = (\n  rootValue?: any,\n  args?: any,\n  context?: any,\n  info?: {\n    field: FieldNode;\n    fragmentMap: FragmentMap;\n  },\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any,\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  context: any;\n  variables: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n  defaultOperationType: string;\n  exportedVariables: Record<string, any>;\n  onlyRunForcedResolvers: boolean;\n};\n\nexport type LocalStateOptions<TCacheShape> = {\n  cache: ApolloCache<TCacheShape>;\n  client?: ApolloClient<TCacheShape>;\n  resolvers?: Resolvers | Resolvers[];\n  fragmentMatcher?: FragmentMatcher;\n};\n\nexport class LocalState<TCacheShape> {\n  private cache: ApolloCache<TCacheShape>;\n  private client: ApolloClient<TCacheShape>;\n  private resolvers?: Resolvers;\n  private fragmentMatcher: FragmentMatcher;\n\n  constructor({\n    cache,\n    client,\n    resolvers,\n    fragmentMatcher,\n  }: LocalStateOptions<TCacheShape>) {\n    this.cache = cache;\n\n    if (client) {\n      this.client = client;\n    }\n\n    if (resolvers) {\n      this.addResolvers(resolvers);\n    }\n\n    if (fragmentMatcher) {\n      this.setFragmentMatcher(fragmentMatcher);\n    }\n  }\n\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = this.resolvers || {};\n    if (Array.isArray(resolvers)) {\n      resolvers.forEach(resolverGroup => {\n        this.resolvers = mergeDeep(this.resolvers, resolverGroup);\n      });\n    } else {\n      this.resolvers = mergeDeep(this.resolvers, resolvers);\n    }\n  }\n\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = {};\n    this.addResolvers(resolvers);\n  }\n\n  public getResolvers() {\n    return this.resolvers || {};\n  }\n\n  // Run local client resolvers against the incoming query and remote data.\n  // Locally resolved field values are merged with the incoming remote data,\n  // and returned. Note that locally resolved fields will overwrite\n  // remote data using the same field name.\n  public async runResolvers<TData>({\n    document,\n    remoteResult,\n    context,\n    variables,\n    onlyRunForcedResolvers = false,\n  }: {\n    document: DocumentNode | null;\n    remoteResult: ExecutionResult<TData>;\n    context?: Record<string, any>;\n    variables?: Record<string, any>;\n    onlyRunForcedResolvers?: boolean;\n  }): Promise<ExecutionResult<TData>> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        remoteResult.data,\n        context,\n        variables,\n        this.fragmentMatcher,\n        onlyRunForcedResolvers,\n      ).then(localResult => ({\n        ...remoteResult,\n        data: localResult.result,\n      }));\n    }\n\n    return remoteResult;\n  }\n\n  public setFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.fragmentMatcher = fragmentMatcher;\n  }\n\n  public getFragmentMatcher(): FragmentMatcher {\n    return this.fragmentMatcher;\n  }\n\n  // Client queries contain everything in the incoming document (if a @client\n  // directive is found).\n  public clientQuery(document: DocumentNode) {\n    if (hasDirectives(['client'], document)) {\n      if (this.resolvers) {\n        return document;\n      }\n      invariant.warn(\n        'Found @client directives in a query but no ApolloClient resolvers ' +\n        'were specified. This means ApolloClient local resolver handling ' +\n        'has been disabled, and @client directives will be passed through ' +\n        'to your link chain.',\n      );\n    }\n    return null;\n  }\n\n  // Server queries are stripped of all @client based selection sets.\n  public serverQuery(document: DocumentNode) {\n    return this.resolvers ? removeClientSetsFromDocument(document) : document;\n  }\n\n  public prepareContext(context = {}) {\n    const { cache } = this;\n\n    const newContext = {\n      ...context,\n      cache,\n      // Getting an entry's cache key is useful for local state resolvers.\n      getCacheKey: (obj: { __typename: string; id: string | number }) => {\n        if ((cache as any).config) {\n          return (cache as any).config.dataIdFromObject(obj);\n        } else {\n          invariant(false,\n            'To use context.getCacheKey, you need to use a cache that has ' +\n              'a configurable dataIdFromObject, like apollo-cache-inmemory.',\n          );\n        }\n      },\n    };\n\n    return newContext;\n  }\n\n  // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n  // @client @export fields locally, then pass the resolved values back to be\n  // used alongside the original operation variables.\n  public async addExportedVariables(\n    document: DocumentNode,\n    variables: OperationVariables = {},\n    context = {},\n  ) {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        this.buildRootValueFromCache(document, variables) || {},\n        this.prepareContext(context),\n        variables,\n      ).then(data => ({\n        ...variables,\n        ...data.exportedVariables,\n      }));\n    }\n\n    return {\n      ...variables,\n    };\n  }\n\n  public shouldForceResolvers(document: ASTNode) {\n    let forceResolvers = false;\n    visit(document, {\n      Directive: {\n        enter(node) {\n          if (node.name.value === 'client' && node.arguments) {\n            forceResolvers = node.arguments.some(\n              arg =>\n                arg.name.value === 'always' &&\n                arg.value.kind === 'BooleanValue' &&\n                arg.value.value === true,\n            );\n            if (forceResolvers) {\n              return BREAK;\n            }\n          }\n        },\n      },\n    });\n    return forceResolvers;\n  }\n\n  // Query the cache and return matching data.\n  private buildRootValueFromCache(\n    document: DocumentNode,\n    variables?: Record<string, any>,\n  ) {\n    return this.cache.diff({\n      query: buildQueryFromSelectionSet(document),\n      variables,\n      returnPartialData: true,\n      optimistic: false,\n    }).result;\n  }\n\n  private async resolveDocument<TData>(\n    document: DocumentNode,\n    rootValue: TData,\n    context: any = {},\n    variables: VariableMap = {},\n    fragmentMatcher: FragmentMatcher = () => true,\n    onlyRunForcedResolvers: boolean = false,\n  ) {\n    const mainDefinition = getMainDefinition(document);\n    const fragments = getFragmentDefinitions(document);\n    const fragmentMap = createFragmentMap(fragments);\n\n    const definitionOperation = (mainDefinition as OperationDefinitionNode)\n      .operation;\n\n    const defaultOperationType = definitionOperation\n      ? capitalizeFirstLetter(definitionOperation)\n      : 'Query';\n\n    const { cache, client } = this;\n    const execContext: ExecContext = {\n      fragmentMap,\n      context: {\n        ...context,\n        cache,\n        client,\n      },\n      variables,\n      fragmentMatcher,\n      defaultOperationType,\n      exportedVariables: {},\n      onlyRunForcedResolvers,\n    };\n\n    return this.resolveSelectionSet(\n      mainDefinition.selectionSet,\n      rootValue,\n      execContext,\n    ).then(result => ({\n      result,\n      exportedVariables: execContext.exportedVariables,\n    }));\n  }\n\n  private async resolveSelectionSet<TData>(\n    selectionSet: SelectionSetNode,\n    rootValue: TData,\n    execContext: ExecContext,\n  ) {\n    const { fragmentMap, context, variables } = execContext;\n    const resultsToMerge: TData[] = [rootValue];\n\n    const execute = async (selection: SelectionNode): Promise<void> => {\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely.\n        return;\n      }\n\n      if (isField(selection)) {\n        return this.resolveField(selection, rootValue, execContext).then(\n          fieldResult => {\n            if (typeof fieldResult !== 'undefined') {\n              resultsToMerge.push({\n                [resultKeyNameFromField(selection)]: fieldResult,\n              } as TData);\n            }\n          },\n        );\n      }\n\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment.\n        fragment = fragmentMap[selection.name.value];\n        invariant(fragment, `No fragment named ${selection.name.value}`);\n      }\n\n      if (fragment && fragment.typeCondition) {\n        const typeCondition = fragment.typeCondition.name.value;\n        if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n          return this.resolveSelectionSet(\n            fragment.selectionSet,\n            rootValue,\n            execContext,\n          ).then(fragmentResult => {\n            resultsToMerge.push(fragmentResult);\n          });\n        }\n      }\n    };\n\n    return Promise.all(selectionSet.selections.map(execute)).then(function() {\n      return mergeDeepArray(resultsToMerge);\n    });\n  }\n\n  private async resolveField(\n    field: FieldNode,\n    rootValue: any,\n    execContext: ExecContext,\n  ): Promise<any> {\n    const { variables } = execContext;\n    const fieldName = field.name.value;\n    const aliasedFieldName = resultKeyNameFromField(field);\n    const aliasUsed = fieldName !== aliasedFieldName;\n    const defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n    let resultPromise = Promise.resolve(defaultResult);\n\n    // Usually all local resolvers are run when passing through here, but\n    // if we've specifically identified that we only want to run forced\n    // resolvers (that is, resolvers for fields marked with\n    // `@client(always: true)`), then we'll skip running non-forced resolvers.\n    if (\n      !execContext.onlyRunForcedResolvers ||\n      this.shouldForceResolvers(field)\n    ) {\n      const resolverType =\n        rootValue.__typename || execContext.defaultOperationType;\n      const resolverMap = this.resolvers && this.resolvers[resolverType];\n      if (resolverMap) {\n        const resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n        if (resolve) {\n          resultPromise = Promise.resolve(resolve(\n            rootValue,\n            argumentsObjectFromField(field, variables),\n            execContext.context,\n            { field, fragmentMap: execContext.fragmentMap },\n          ));\n        }\n      }\n    }\n\n    return resultPromise.then((result = defaultResult) => {\n      // If an @export directive is associated with the current field, store\n      // the `as` export variable name and current result for later use.\n      if (field.directives) {\n        field.directives.forEach(directive => {\n          if (directive.name.value === 'export' && directive.arguments) {\n            directive.arguments.forEach(arg => {\n              if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                execContext.exportedVariables[arg.value.value] = result;\n              }\n            });\n          }\n        });\n      }\n\n      // Handle all scalar types here.\n      if (!field.selectionSet) {\n        return result;\n      }\n\n      // From here down, the field has a selection set, which means it's trying\n      // to query a GraphQLObjectType.\n      if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n      }\n\n      if (Array.isArray(result)) {\n        return this.resolveSubSelectedArray(field, result, execContext);\n      }\n\n      // Returned value is an object, and the query has a sub-selection. Recurse.\n      if (field.selectionSet) {\n        return this.resolveSelectionSet(\n          field.selectionSet,\n          result,\n          execContext,\n        );\n      }\n    });\n  }\n\n  private resolveSubSelectedArray(\n    field: FieldNode,\n    result: any[],\n    execContext: ExecContext,\n  ): any {\n    return Promise.all(\n      result.map(item => {\n        if (item === null) {\n          return null;\n        }\n\n        // This is a nested array, recurse.\n        if (Array.isArray(item)) {\n          return this.resolveSubSelectedArray(field, item, execContext);\n        }\n\n        // This is an object, run the selection set on it.\n        if (field.selectionSet) {\n          return this.resolveSelectionSet(field.selectionSet, item, execContext);\n        }\n      }),\n    );\n  }\n}\n","export function capitalizeFirstLetter(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import { Observable, Observer, Subscription } from './Observable';\n\n// Returns a normal Observable that can have any number of subscribers,\n// while ensuring the original Observable gets subscribed to at most once.\nexport function multiplex<T>(inner: Observable<T>): Observable<T> {\n  const observers = new Set<Observer<T>>();\n  let sub: Subscription | null = null;\n  return new Observable<T>(observer => {\n    observers.add(observer);\n    sub = sub || inner.subscribe({\n      next(value) {\n        observers.forEach(obs => obs.next && obs.next(value));\n      },\n      error(error) {\n        observers.forEach(obs => obs.error && obs.error(error));\n      },\n      complete() {\n        observers.forEach(obs => obs.complete && obs.complete());\n      },\n    });\n    return () => {\n      if (observers.delete(observer) && !observers.size && sub) {\n        sub.unsubscribe();\n        sub = null;\n      }\n    };\n  });\n}\n\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap<V, R>(\n  observable: Observable<V>,\n  mapFn: (value: V) => R | Promise<R>,\n): Observable<R> {\n  return new Observable<R>(observer => {\n    const { next, error, complete } = observer;\n    let activeNextCount = 0;\n    let completed = false;\n\n    const handler: Observer<V> = {\n      next(value) {\n        ++activeNextCount;\n        new Promise(resolve => {\n          resolve(mapFn(value));\n        }).then(\n          result => {\n            --activeNextCount;\n            next && next.call(observer, result);\n            completed && handler.complete!();\n          },\n          e => {\n            --activeNextCount;\n            error && error.call(observer, e);\n          },\n        );\n      },\n      error(e) {\n        error && error.call(observer, e);\n      },\n      complete() {\n        completed = true;\n        if (!activeNextCount) {\n          complete && complete.call(observer);\n        }\n      },\n    };\n\n    const sub = observable.subscribe(handler);\n    return () => sub.unsubscribe();\n  });\n}\n","import { execute, ApolloLink, FetchResult } from 'apollo-link';\nimport { ExecutionResult, DocumentNode } from 'graphql';\nimport { Cache } from 'apollo-cache';\nimport {\n  getDefaultValues,\n  getOperationDefinition,\n  getOperationName,\n  hasDirectives,\n  graphQLResultHasError,\n  hasClientExports,\n  removeConnectionDirectiveFromDocument,\n  canUseWeakMap,\n} from 'apollo-utilities';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { isApolloError, ApolloError } from '../errors/ApolloError';\nimport { Observer, Subscription, Observable } from '../util/Observable';\nimport { QueryWithUpdater, DataStore } from '../data/store';\nimport { MutationStore } from '../data/mutations';\nimport { QueryStore, QueryStoreValue } from '../data/queries';\n\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  ErrorPolicy,\n} from './watchQueryOptions';\nimport { ObservableQuery } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport {\n  QueryListener,\n  ApolloQueryResult,\n  FetchType,\n  OperationVariables,\n} from './types';\nimport { LocalState } from './LocalState';\nimport { asyncMap, multiplex } from '../util/observables';\nimport { isNonEmptyArray } from '../util/arrays';\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport interface QueryInfo {\n  listeners: Set<QueryListener>;\n  invalidated: boolean;\n  newData: Cache.DiffResult<any> | null;\n  document: DocumentNode | null;\n  lastRequestId: number;\n  // A map going from queryId to an observer for a query issued by watchQuery. We use\n  // these to keep track of queries that are inflight and error on the observers associated\n  // with them in case of some destabalizing action (e.g. reset of the Apollo store).\n  observableQuery: ObservableQuery<any> | null;\n  subscriptions: Set<Subscription>;\n  cancel?: () => void;\n}\n\nexport class QueryManager<TStore> {\n  public link: ApolloLink;\n  public mutationStore: MutationStore = new MutationStore();\n  public queryStore: QueryStore = new QueryStore();\n  public dataStore: DataStore<TStore>;\n  public readonly assumeImmutableResults: boolean;\n\n  private queryDeduplication: boolean;\n  private clientAwareness: Record<string, string> = {};\n  private localState: LocalState<TStore>;\n\n  private onBroadcast: () => void;\n\n  private ssrMode: boolean;\n\n  // let's not start at zero to avoid pain with bad checks\n  private idCounter = 1;\n\n  // XXX merge with ObservableQuery but that needs to be expanded to support mutations and\n  // subscriptions as well\n  private queries: Map<string, QueryInfo> = new Map();\n\n  // A map of Promise reject functions for fetchQuery promises that have not\n  // yet been resolved, used to keep track of in-flight queries so that we can\n  // reject them in case a destabilizing event occurs (e.g. Apollo store reset).\n  // The key is in the format of `query:${queryId}` or `fetchRequest:${queryId}`,\n  // depending on where the promise's rejection function was created from.\n  private fetchQueryRejectFns = new Map<string, Function>();\n\n  constructor({\n    link,\n    queryDeduplication = false,\n    store,\n    onBroadcast = () => undefined,\n    ssrMode = false,\n    clientAwareness = {},\n    localState,\n    assumeImmutableResults,\n  }: {\n    link: ApolloLink;\n    queryDeduplication?: boolean;\n    store: DataStore<TStore>;\n    onBroadcast?: () => void;\n    ssrMode?: boolean;\n    clientAwareness?: Record<string, string>;\n    localState?: LocalState<TStore>;\n    assumeImmutableResults?: boolean;\n  }) {\n    this.link = link;\n    this.queryDeduplication = queryDeduplication;\n    this.dataStore = store;\n    this.onBroadcast = onBroadcast;\n    this.clientAwareness = clientAwareness;\n    this.localState = localState || new LocalState({ cache: store.getCache() });\n    this.ssrMode = ssrMode;\n    this.assumeImmutableResults = !!assumeImmutableResults;\n  }\n\n  /**\n   * Call this method to terminate any active query processes, making it safe\n   * to dispose of this QueryManager instance.\n   */\n  public stop() {\n    this.queries.forEach((_info, queryId) => {\n      this.stopQueryNoBroadcast(queryId);\n    });\n\n    this.fetchQueryRejectFns.forEach(reject => {\n      reject(\n        new InvariantError('QueryManager stopped while query was in flight'),\n      );\n    });\n  }\n\n  public async mutate<T>({\n    mutation,\n    variables,\n    optimisticResponse,\n    updateQueries: updateQueriesByName,\n    refetchQueries = [],\n    awaitRefetchQueries = false,\n    update: updateWithProxyFn,\n    errorPolicy = 'none',\n    fetchPolicy,\n    context = {},\n  }: MutationOptions): Promise<FetchResult<T>> {\n    invariant(\n      mutation,\n      'mutation option is required. You must specify your GraphQL document in the mutation option.',\n    );\n\n    invariant(\n      !fetchPolicy || fetchPolicy === 'no-cache',\n      \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\"\n    );\n\n    const mutationId = this.generateQueryId();\n    mutation = this.transform(mutation).document;\n\n    this.setQuery(mutationId, () => ({ document: mutation }));\n\n    variables = this.getVariables(mutation, variables);\n\n    if (this.transform(mutation).hasClientExports) {\n      variables = await this.localState.addExportedVariables(mutation, variables, context);\n    }\n\n    // Create a map of update queries by id to the query instead of by name.\n    const generateUpdateQueriesInfo: () => {\n      [queryId: string]: QueryWithUpdater;\n    } = () => {\n      const ret: { [queryId: string]: QueryWithUpdater } = {};\n\n      if (updateQueriesByName) {\n        this.queries.forEach(({ observableQuery }, queryId) => {\n          if (observableQuery) {\n            const { queryName } = observableQuery;\n            if (\n              queryName &&\n              hasOwnProperty.call(updateQueriesByName, queryName)\n            ) {\n              ret[queryId] = {\n                updater: updateQueriesByName[queryName],\n                query: this.queryStore.get(queryId),\n              };\n            }\n          }\n        });\n      }\n\n      return ret;\n    };\n\n    this.mutationStore.initMutation(\n      mutationId,\n      mutation,\n      variables,\n    );\n\n    this.dataStore.markMutationInit({\n      mutationId,\n      document: mutation,\n      variables,\n      updateQueries: generateUpdateQueriesInfo(),\n      update: updateWithProxyFn,\n      optimisticResponse,\n    });\n\n    this.broadcastQueries();\n\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      let storeResult: FetchResult<T> | null;\n      let error: ApolloError;\n\n      self.getObservableFromLink(\n        mutation,\n        {\n          ...context,\n          optimisticResponse,\n        },\n        variables,\n        false,\n      ).subscribe({\n        next(result: ExecutionResult) {\n          if (graphQLResultHasError(result) && errorPolicy === 'none') {\n            error = new ApolloError({\n              graphQLErrors: result.errors,\n            });\n            return;\n          }\n\n          self.mutationStore.markMutationResult(mutationId);\n\n          if (fetchPolicy !== 'no-cache') {\n            self.dataStore.markMutationResult({\n              mutationId,\n              result,\n              document: mutation,\n              variables,\n              updateQueries: generateUpdateQueriesInfo(),\n              update: updateWithProxyFn,\n            });\n          }\n\n          storeResult = result as FetchResult<T>;\n        },\n\n        error(err: Error) {\n          self.mutationStore.markMutationError(mutationId, err);\n          self.dataStore.markMutationComplete({\n            mutationId,\n            optimisticResponse,\n          });\n          self.broadcastQueries();\n          self.setQuery(mutationId, () => ({ document: null }));\n          reject(\n            new ApolloError({\n              networkError: err,\n            }),\n          );\n        },\n\n        complete() {\n          if (error) {\n            self.mutationStore.markMutationError(mutationId, error);\n          }\n\n          self.dataStore.markMutationComplete({\n            mutationId,\n            optimisticResponse,\n          });\n\n          self.broadcastQueries();\n\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          // allow for conditional refetches\n          // XXX do we want to make this the only API one day?\n          if (typeof refetchQueries === 'function') {\n            refetchQueries = refetchQueries(storeResult as ExecutionResult);\n          }\n\n          const refetchQueryPromises: Promise<\n            ApolloQueryResult<any>[] | ApolloQueryResult<{}>\n          >[] = [];\n\n          if (isNonEmptyArray(refetchQueries)) {\n            refetchQueries.forEach(refetchQuery => {\n              if (typeof refetchQuery === 'string') {\n                self.queries.forEach(({ observableQuery }) => {\n                  if (\n                    observableQuery &&\n                    observableQuery.queryName === refetchQuery\n                  ) {\n                    refetchQueryPromises.push(observableQuery.refetch());\n                  }\n                });\n              } else {\n                const queryOptions: QueryOptions = {\n                  query: refetchQuery.query,\n                  variables: refetchQuery.variables,\n                  fetchPolicy: 'network-only',\n                };\n\n                if (refetchQuery.context) {\n                  queryOptions.context = refetchQuery.context;\n                }\n\n                refetchQueryPromises.push(self.query(queryOptions));\n              }\n            });\n          }\n\n          Promise.all(\n            awaitRefetchQueries ? refetchQueryPromises : [],\n          ).then(() => {\n            self.setQuery(mutationId, () => ({ document: null }));\n\n            if (\n              errorPolicy === 'ignore' &&\n              storeResult &&\n              graphQLResultHasError(storeResult)\n            ) {\n              delete storeResult.errors;\n            }\n\n            resolve(storeResult!);\n          });\n        },\n      });\n    });\n  }\n\n  public async fetchQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    fetchType?: FetchType,\n    // This allows us to track if this is a query spawned by a `fetchMore`\n    // call for another query. We need this data to compute the `fetchMore`\n    // network status for the query this is fetching for.\n    fetchMoreForQueryId?: string,\n  ): Promise<FetchResult<T>> {\n    const {\n      metadata = null,\n      fetchPolicy = 'cache-first', // cache-first is the default fetch policy.\n      context = {},\n    } = options;\n\n    const query = this.transform(options.query).document;\n\n    let variables = this.getVariables(query, options.variables);\n\n    if (this.transform(query).hasClientExports) {\n      variables = await this.localState.addExportedVariables(query, variables, context);\n    }\n\n    options = { ...options, variables };\n\n    let storeResult: any;\n    const isNetworkOnly =\n      fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n    let needToFetch = isNetworkOnly;\n\n    // Unless we are completely skipping the cache, we want to diff the query\n    // against the cache before we fetch it from the network interface.\n    if (!isNetworkOnly) {\n      const { complete, result } = this.dataStore.getCache().diff({\n        query,\n        variables,\n        returnPartialData: true,\n        optimistic: false,\n      });\n\n      // If we're in here, only fetch if we have missing fields\n      needToFetch = !complete || fetchPolicy === 'cache-and-network';\n      storeResult = result;\n    }\n\n    let shouldFetch =\n      needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n\n    // we need to check to see if this is an operation that uses the @live directive\n    if (hasDirectives(['live'], query)) shouldFetch = true;\n\n    const requestId = this.idCounter++;\n\n    // set up a watcher to listen to cache updates\n    const cancel = fetchPolicy !== 'no-cache'\n      ? this.updateQueryWatch(queryId, query, options)\n      : undefined;\n\n    // Initialize query in store with unique requestId\n    this.setQuery(queryId, () => ({\n      document: query,\n      lastRequestId: requestId,\n      invalidated: true,\n      cancel,\n    }));\n\n    this.invalidate(fetchMoreForQueryId);\n\n    this.queryStore.initQuery({\n      queryId,\n      document: query,\n      storePreviousVariables: shouldFetch,\n      variables,\n      isPoll: fetchType === FetchType.poll,\n      isRefetch: fetchType === FetchType.refetch,\n      metadata,\n      fetchMoreForQueryId,\n    });\n\n    this.broadcastQueries();\n\n    if (shouldFetch) {\n      const networkResult = this.fetchRequest<T>({\n        requestId,\n        queryId,\n        document: query,\n        options,\n        fetchMoreForQueryId,\n      }).catch(error => {\n        // This is for the benefit of `refetch` promises, which currently don't get their errors\n        // through the store like watchQuery observers do\n        if (isApolloError(error)) {\n          throw error;\n        } else {\n          if (requestId >= this.getQuery(queryId).lastRequestId) {\n            this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n            this.invalidate(queryId);\n            this.invalidate(fetchMoreForQueryId);\n            this.broadcastQueries();\n          }\n          throw new ApolloError({ networkError: error });\n        }\n      });\n\n      // we don't return the promise for cache-and-network since it is already\n      // returned below from the cache\n      if (fetchPolicy !== 'cache-and-network') {\n        return networkResult;\n      }\n\n      // however we need to catch the error so it isn't unhandled in case of\n      // network error\n      networkResult.catch(() => {});\n    }\n\n    // If there is no part of the query we need to fetch from the server (or,\n    // fetchPolicy is cache-only), we just write the store result as the final result.\n    this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n    this.invalidate(queryId);\n    this.invalidate(fetchMoreForQueryId);\n\n    if (this.transform(query).hasForcedResolvers) {\n      return this.localState.runResolvers({\n        document: query,\n        remoteResult: { data: storeResult },\n        context,\n        variables,\n        onlyRunForcedResolvers: true,\n      }).then((result: FetchResult<T>) => {\n        this.markQueryResult(\n          queryId,\n          result,\n          options,\n          fetchMoreForQueryId,\n        );\n        this.broadcastQueries();\n        return result;\n      });\n    }\n\n    this.broadcastQueries();\n\n    // If we have no query to send to the server, we should return the result\n    // found within the store.\n    return { data: storeResult };\n  }\n\n  private markQueryResult(\n    queryId: string,\n    result: ExecutionResult,\n    {\n      fetchPolicy,\n      variables,\n      errorPolicy,\n    }: WatchQueryOptions,\n    fetchMoreForQueryId?: string,\n  ) {\n    if (fetchPolicy === 'no-cache') {\n      this.setQuery(queryId, () => ({\n        newData: { result: result.data, complete: true },\n      }));\n    } else {\n      this.dataStore.markQueryResult(\n        result,\n        this.getQuery(queryId).document!,\n        variables,\n        fetchMoreForQueryId,\n        errorPolicy === 'ignore' || errorPolicy === 'all',\n      );\n    }\n  }\n\n  // Returns a query listener that will update the given observer based on the\n  // results (or lack thereof) for a particular query.\n  public queryListenerForObserver<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    observer: Observer<ApolloQueryResult<T>>,\n  ): QueryListener {\n    function invoke(method: 'next' | 'error', argument: any) {\n      if (observer[method]) {\n        try {\n          observer[method]!(argument);\n        } catch (e) {\n          invariant.error(e);\n        }\n      } else if (method === 'error') {\n        invariant.error(argument);\n      }\n    }\n\n    return (\n      queryStoreValue: QueryStoreValue,\n      newData?: Cache.DiffResult<T>,\n    ) => {\n      // we're going to take a look at the data, so the query is no longer invalidated\n      this.invalidate(queryId, false);\n\n      // The query store value can be undefined in the event of a store\n      // reset.\n      if (!queryStoreValue) return;\n\n      const { observableQuery, document } = this.getQuery(queryId);\n\n      const fetchPolicy = observableQuery\n        ? observableQuery.options.fetchPolicy\n        : options.fetchPolicy;\n\n      // don't watch the store for queries on standby\n      if (fetchPolicy === 'standby') return;\n\n      const loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n      const lastResult = observableQuery && observableQuery.getLastResult();\n\n      const networkStatusChanged = !!(\n        lastResult &&\n        lastResult.networkStatus !== queryStoreValue.networkStatus\n      );\n\n      const shouldNotifyIfLoading =\n        options.returnPartialData ||\n        (!newData && queryStoreValue.previousVariables) ||\n        (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n        fetchPolicy === 'cache-only' ||\n        fetchPolicy === 'cache-and-network';\n\n      if (loading && !shouldNotifyIfLoading) {\n        return;\n      }\n\n      const hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n\n      const errorPolicy: ErrorPolicy = observableQuery\n        && observableQuery.options.errorPolicy\n        || options.errorPolicy\n        || 'none';\n\n      // If we have either a GraphQL error or a network error, we create\n      // an error and tell the observer about it.\n      if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n        return invoke('error', new ApolloError({\n          graphQLErrors: queryStoreValue.graphQLErrors,\n          networkError: queryStoreValue.networkError,\n        }));\n      }\n\n      try {\n        let data: any;\n        let isMissing: boolean;\n\n        if (newData) {\n          // As long as we're using the cache, clear out the latest\n          // `newData`, since it will now become the current data. We need\n          // to keep the `newData` stored with the query when using\n          // `no-cache` since `getCurrentQueryResult` attemps to pull from\n          // `newData` first, following by trying the cache (which won't\n          // find a hit for `no-cache`).\n          if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n            this.setQuery(queryId, () => ({ newData: null }));\n          }\n\n          data = newData.result;\n          isMissing = !newData.complete;\n        } else {\n          const lastError = observableQuery && observableQuery.getLastError();\n          const errorStatusChanged =\n            errorPolicy !== 'none' &&\n            (lastError && lastError.graphQLErrors) !==\n              queryStoreValue.graphQLErrors;\n\n          if (lastResult && lastResult.data && !errorStatusChanged) {\n            data = lastResult.data;\n            isMissing = false;\n          } else {\n            const diffResult = this.dataStore.getCache().diff({\n              query: document as DocumentNode,\n              variables:\n                queryStoreValue.previousVariables ||\n                queryStoreValue.variables,\n              returnPartialData: true,\n              optimistic: true,\n            });\n\n            data = diffResult.result;\n            isMissing = !diffResult.complete;\n          }\n        }\n\n        // If there is some data missing and the user has told us that they\n        // do not tolerate partial data then we want to return the previous\n        // result and mark it as stale.\n        const stale = isMissing && !(\n          options.returnPartialData ||\n          fetchPolicy === 'cache-only'\n        );\n\n        const resultFromStore: ApolloQueryResult<T> = {\n          data: stale ? lastResult && lastResult.data : data,\n          loading,\n          networkStatus: queryStoreValue.networkStatus,\n          stale,\n        };\n\n        // if the query wants updates on errors we need to add it to the result\n        if (errorPolicy === 'all' && hasGraphQLErrors) {\n          resultFromStore.errors = queryStoreValue.graphQLErrors;\n        }\n\n        invoke('next', resultFromStore);\n\n      } catch (networkError) {\n        invoke('error', new ApolloError({ networkError }));\n      }\n    };\n  }\n\n  private transformCache = new (canUseWeakMap ? WeakMap : Map)<\n    DocumentNode,\n    Readonly<{\n      document: Readonly<DocumentNode>;\n      hasClientExports: boolean;\n      hasForcedResolvers: boolean;\n      clientQuery: Readonly<DocumentNode> | null;\n      serverQuery: Readonly<DocumentNode> | null;\n      defaultVars: Readonly<OperationVariables>;\n    }>\n  >();\n\n  public transform(document: DocumentNode) {\n    const { transformCache } = this;\n\n    if (!transformCache.has(document)) {\n      const cache = this.dataStore.getCache();\n      const transformed = cache.transformDocument(document);\n      const forLink = removeConnectionDirectiveFromDocument(\n        cache.transformForLink(transformed));\n\n      const clientQuery = this.localState.clientQuery(transformed);\n      const serverQuery = this.localState.serverQuery(forLink);\n\n      const cacheEntry = {\n        document: transformed,\n        // TODO These two calls (hasClientExports and shouldForceResolvers)\n        // could probably be merged into a single traversal.\n        hasClientExports: hasClientExports(transformed),\n        hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n        clientQuery,\n        serverQuery,\n        defaultVars: getDefaultValues(\n          getOperationDefinition(transformed)\n        ) as OperationVariables,\n      };\n\n      const add = (doc: DocumentNode | null) => {\n        if (doc && !transformCache.has(doc)) {\n          transformCache.set(doc, cacheEntry);\n        }\n      }\n      // Add cacheEntry to the transformCache using several different keys,\n      // since any one of these documents could end up getting passed to the\n      // transform method again in the future.\n      add(document);\n      add(transformed);\n      add(clientQuery);\n      add(serverQuery);\n    }\n\n    return transformCache.get(document)!;\n  }\n\n  private getVariables(\n    document: DocumentNode,\n    variables?: OperationVariables,\n  ): OperationVariables {\n    return {\n      ...this.transform(document).defaultVars,\n      ...variables,\n    };\n  }\n\n  // The shouldSubscribe option is a temporary fix that tells us whether watchQuery was called\n  // directly (i.e. through ApolloClient) or through the query method within QueryManager.\n  // Currently, the query method uses watchQuery in order to handle non-network errors correctly\n  // but we don't want to keep track observables issued for the query method since those aren't\n  // supposed to be refetched in the event of a store reset. Once we unify error handling for\n  // network errors and non-network errors, the shouldSubscribe option will go away.\n\n  public watchQuery<T, TVariables = OperationVariables>(\n    options: WatchQueryOptions,\n    shouldSubscribe = true,\n  ): ObservableQuery<T, TVariables> {\n    invariant(\n      options.fetchPolicy !== 'standby',\n      'client.watchQuery cannot be called with fetchPolicy set to \"standby\"',\n    );\n\n    // assign variable default values if supplied\n    options.variables = this.getVariables(options.query, options.variables);\n\n    if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n      options.notifyOnNetworkStatusChange = false;\n    }\n\n    let transformedOptions = { ...options } as WatchQueryOptions<TVariables>;\n\n    return new ObservableQuery<T, TVariables>({\n      queryManager: this,\n      options: transformedOptions,\n      shouldSubscribe: shouldSubscribe,\n    });\n  }\n\n  public query<T>(options: QueryOptions): Promise<ApolloQueryResult<T>> {\n    invariant(\n      options.query,\n      'query option is required. You must specify your GraphQL document ' +\n        'in the query option.',\n    );\n\n    invariant(\n      options.query.kind === 'Document',\n      'You must wrap the query string in a \"gql\" tag.',\n    );\n\n    invariant(\n      !(options as any).returnPartialData,\n      'returnPartialData option only supported on watchQuery.',\n    );\n\n    invariant(\n      !(options as any).pollInterval,\n      'pollInterval option only supported on watchQuery.',\n    );\n\n    return new Promise<ApolloQueryResult<T>>((resolve, reject) => {\n      const watchedQuery = this.watchQuery<T>(options, false);\n      this.fetchQueryRejectFns.set(`query:${watchedQuery.queryId}`, reject);\n      watchedQuery\n        .result()\n        .then(resolve, reject)\n        // Since neither resolve nor reject throw or return a value, this .then\n        // handler is guaranteed to execute. Note that it doesn't really matter\n        // when we remove the reject function from this.fetchQueryRejectFns,\n        // since resolve and reject are mutually idempotent. In fact, it would\n        // not be incorrect to let reject functions accumulate over time; it's\n        // just a waste of memory.\n        .then(() =>\n          this.fetchQueryRejectFns.delete(`query:${watchedQuery.queryId}`),\n        );\n    });\n  }\n\n  public generateQueryId() {\n    return String(this.idCounter++);\n  }\n\n  public stopQueryInStore(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryInStoreNoBroadcast(queryId: string) {\n    this.stopPollingQuery(queryId);\n    this.queryStore.stopQuery(queryId);\n    this.invalidate(queryId);\n  }\n\n  public addQueryListener(queryId: string, listener: QueryListener) {\n    this.setQuery(queryId, ({ listeners }) => {\n      listeners.add(listener);\n      return { invalidated: false };\n    });\n  }\n\n  public updateQueryWatch(\n    queryId: string,\n    document: DocumentNode,\n    options: WatchQueryOptions,\n  ) {\n    const { cancel } = this.getQuery(queryId);\n    if (cancel) cancel();\n    const previousResult = () => {\n      let previousResult = null;\n      const { observableQuery } = this.getQuery(queryId);\n      if (observableQuery) {\n        const lastResult = observableQuery.getLastResult();\n        if (lastResult) {\n          previousResult = lastResult.data;\n        }\n      }\n\n      return previousResult;\n    };\n    return this.dataStore.getCache().watch({\n      query: document as DocumentNode,\n      variables: options.variables,\n      optimistic: true,\n      previousResult,\n      callback: newData => {\n        this.setQuery(queryId, () => ({ invalidated: true, newData }));\n      },\n    });\n  }\n\n  // Adds an ObservableQuery to this.observableQueries and to this.observableQueriesByName.\n  public addObservableQuery<T>(\n    queryId: string,\n    observableQuery: ObservableQuery<T>,\n  ) {\n    this.setQuery(queryId, () => ({ observableQuery }));\n  }\n\n  public removeObservableQuery(queryId: string) {\n    const { cancel } = this.getQuery(queryId);\n    this.setQuery(queryId, () => ({ observableQuery: null }));\n    if (cancel) cancel();\n  }\n\n  public clearStore(): Promise<void> {\n    // Before we have sent the reset action to the store,\n    // we can no longer rely on the results returned by in-flight\n    // requests since these may depend on values that previously existed\n    // in the data portion of the store. So, we cancel the promises and observers\n    // that we have issued so far and not yet resolved (in the case of\n    // queries).\n    this.fetchQueryRejectFns.forEach(reject => {\n      reject(new InvariantError(\n        'Store reset while query was in flight (not completed in link chain)',\n      ));\n    });\n\n    const resetIds: string[] = [];\n    this.queries.forEach(({ observableQuery }, queryId) => {\n      if (observableQuery) resetIds.push(queryId);\n    });\n\n    this.queryStore.reset(resetIds);\n    this.mutationStore.reset();\n\n    // begin removing data from the store\n    return this.dataStore.reset();\n  }\n\n  public resetStore(): Promise<ApolloQueryResult<any>[]> {\n    // Similarly, we have to have to refetch each of the queries currently being\n    // observed. We refetch instead of error'ing on these since the assumption is that\n    // resetting the store doesn't eliminate the need for the queries currently being\n    // watched. If there is an existing query in flight when the store is reset,\n    // the promise for it will be rejected and its results will not be written to the\n    // store.\n    return this.clearStore().then(() => {\n      return this.reFetchObservableQueries();\n    });\n  }\n\n  public reFetchObservableQueries(\n    includeStandby: boolean = false,\n  ): Promise<ApolloQueryResult<any>[]> {\n    const observableQueryPromises: Promise<ApolloQueryResult<any>>[] = [];\n\n    this.queries.forEach(({ observableQuery }, queryId) => {\n      if (observableQuery) {\n        const fetchPolicy = observableQuery.options.fetchPolicy;\n\n        observableQuery.resetLastResults();\n        if (\n          fetchPolicy !== 'cache-only' &&\n          (includeStandby || fetchPolicy !== 'standby')\n        ) {\n          observableQueryPromises.push(observableQuery.refetch());\n        }\n\n        this.setQuery(queryId, () => ({ newData: null }));\n        this.invalidate(queryId);\n      }\n    });\n\n    this.broadcastQueries();\n\n    return Promise.all(observableQueryPromises);\n  }\n\n  public observeQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    observer: Observer<ApolloQueryResult<T>>,\n  ) {\n    this.addQueryListener(\n      queryId,\n      this.queryListenerForObserver(queryId, options, observer),\n    );\n    return this.fetchQuery<T>(queryId, options);\n  }\n\n  public startQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    listener: QueryListener,\n  ) {\n    invariant.warn(\"The QueryManager.startQuery method has been deprecated\");\n\n    this.addQueryListener(queryId, listener);\n\n    this.fetchQuery<T>(queryId, options)\n      // `fetchQuery` returns a Promise. In case of a failure it should be caucht or else the\n      // console will show an `Uncaught (in promise)` message. Ignore the error for now.\n      .catch(() => undefined);\n\n    return queryId;\n  }\n\n  public startGraphQLSubscription<T = any>({\n    query,\n    fetchPolicy,\n    variables,\n  }: SubscriptionOptions): Observable<FetchResult<T>> {\n    query = this.transform(query).document;\n    variables = this.getVariables(query, variables);\n\n    const makeObservable = (variables: OperationVariables) =>\n      this.getObservableFromLink<T>(\n        query,\n        {},\n        variables,\n        false,\n      ).map(result => {\n        if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n          this.dataStore.markSubscriptionResult(\n            result,\n            query,\n            variables,\n          );\n          this.broadcastQueries();\n        }\n\n        if (graphQLResultHasError(result)) {\n          throw new ApolloError({\n            graphQLErrors: result.errors,\n          });\n        }\n\n        return result;\n      });\n\n    if (this.transform(query).hasClientExports) {\n      const observablePromise = this.localState.addExportedVariables(\n        query,\n        variables,\n      ).then(makeObservable);\n\n      return new Observable<FetchResult<T>>(observer => {\n        let sub: Subscription | null = null;\n        observablePromise.then(\n          observable => sub = observable.subscribe(observer),\n          observer.error,\n        );\n        return () => sub && sub.unsubscribe();\n      });\n    }\n\n    return makeObservable(variables);\n  }\n\n  public stopQuery(queryId: string) {\n    this.stopQueryNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryNoBroadcast(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.removeQuery(queryId);\n  }\n\n  public removeQuery(queryId: string) {\n    // teardown all links\n    // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n    // that each add their reject functions to fetchQueryRejectFns.\n    // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n    // The same queryId could have two rejection fns for two promises\n    this.fetchQueryRejectFns.delete(`query:${queryId}`);\n    this.fetchQueryRejectFns.delete(`fetchRequest:${queryId}`);\n    this.getQuery(queryId).subscriptions.forEach(x => x.unsubscribe());\n    this.queries.delete(queryId);\n  }\n\n  public getCurrentQueryResult<T>(\n    observableQuery: ObservableQuery<T>,\n    optimistic: boolean = true,\n  ): {\n    data: T | undefined;\n    partial: boolean;\n  } {\n    const { variables, query, fetchPolicy, returnPartialData } = observableQuery.options;\n    const lastResult = observableQuery.getLastResult();\n    const { newData } = this.getQuery(observableQuery.queryId);\n\n    if (newData && newData.complete) {\n      return { data: newData.result, partial: false };\n    }\n\n    if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n      return { data: undefined, partial: false };\n    }\n\n    const { result, complete } = this.dataStore.getCache().diff<T>({\n      query,\n      variables,\n      previousResult: lastResult ? lastResult.data : undefined,\n      returnPartialData: true,\n      optimistic,\n    });\n\n    return {\n      data: (complete || returnPartialData) ? result : void 0,\n      partial: !complete,\n    };\n  }\n\n  public getQueryWithPreviousResult<TData, TVariables = OperationVariables>(\n    queryIdOrObservable: string | ObservableQuery<TData, TVariables>,\n  ): {\n    previousResult: any;\n    variables: TVariables | undefined;\n    document: DocumentNode;\n  } {\n    let observableQuery: ObservableQuery<TData, any>;\n    if (typeof queryIdOrObservable === 'string') {\n      const { observableQuery: foundObserveableQuery } = this.getQuery(\n        queryIdOrObservable,\n      );\n      invariant(\n        foundObserveableQuery,\n        `ObservableQuery with this id doesn't exist: ${queryIdOrObservable}`\n      );\n      observableQuery = foundObserveableQuery!;\n    } else {\n      observableQuery = queryIdOrObservable;\n    }\n\n    const { variables, query } = observableQuery.options;\n    return {\n      previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n      variables,\n      document: query,\n    };\n  }\n\n  public broadcastQueries() {\n    this.onBroadcast();\n    this.queries.forEach((info, id) => {\n      if (info.invalidated) {\n        info.listeners.forEach(listener => {\n          // it's possible for the listener to be undefined if the query is being stopped\n          // See here for more detail: https://github.com/apollostack/apollo-client/issues/231\n          if (listener) {\n            listener(this.queryStore.get(id), info.newData);\n          }\n        });\n      }\n    });\n  }\n\n  public getLocalState(): LocalState<TStore> {\n    return this.localState;\n  }\n\n  private inFlightLinkObservables = new Map<\n    DocumentNode,\n    Map<string, Observable<FetchResult>>\n  >();\n\n  private getObservableFromLink<T = any>(\n    query: DocumentNode,\n    context: any,\n    variables?: OperationVariables,\n    deduplication: boolean = this.queryDeduplication,\n  ): Observable<FetchResult<T>> {\n    let observable: Observable<FetchResult<T>>;\n\n    const { serverQuery } = this.transform(query);\n    if (serverQuery) {\n      const { inFlightLinkObservables, link } = this;\n\n      const operation = {\n        query: serverQuery,\n        variables,\n        operationName: getOperationName(serverQuery) || void 0,\n        context: this.prepareContext({\n          ...context,\n          forceFetch: !deduplication\n        }),\n      };\n\n      context = operation.context;\n\n      if (deduplication) {\n        const byVariables = inFlightLinkObservables.get(serverQuery) || new Map();\n        inFlightLinkObservables.set(serverQuery, byVariables);\n\n        const varJson = JSON.stringify(variables);\n        observable = byVariables.get(varJson);\n\n        if (!observable) {\n          byVariables.set(\n            varJson,\n            observable = multiplex(\n              execute(link, operation) as Observable<FetchResult<T>>\n            )\n          );\n\n          const cleanup = () => {\n            byVariables.delete(varJson);\n            if (!byVariables.size) inFlightLinkObservables.delete(serverQuery);\n            cleanupSub.unsubscribe();\n          };\n\n          const cleanupSub = observable.subscribe({\n            next: cleanup,\n            error: cleanup,\n            complete: cleanup,\n          });\n        }\n\n      } else {\n        observable = multiplex(execute(link, operation) as Observable<FetchResult<T>>);\n      }\n    } else {\n      observable = Observable.of({ data: {} } as FetchResult<T>);\n      context = this.prepareContext(context);\n    }\n\n    const { clientQuery } = this.transform(query);\n    if (clientQuery) {\n      observable = asyncMap(observable, result => {\n        return this.localState.runResolvers({\n          document: clientQuery,\n          remoteResult: result,\n          context,\n          variables,\n        });\n      });\n    }\n\n    return observable;\n  }\n\n  // Takes a request id, query id, a query document and information associated with the query\n  // and send it to the network interface. Returns\n  // a promise for the result associated with that request.\n  private fetchRequest<T>({\n    requestId,\n    queryId,\n    document,\n    options,\n    fetchMoreForQueryId,\n  }: {\n    requestId: number;\n    queryId: string;\n    document: DocumentNode;\n    options: WatchQueryOptions;\n    fetchMoreForQueryId?: string;\n  }): Promise<FetchResult<T>> {\n    const { variables, errorPolicy = 'none', fetchPolicy } = options;\n    let resultFromStore: any;\n    let errorsFromStore: any;\n\n    return new Promise<ApolloQueryResult<T>>((resolve, reject) => {\n      const observable = this.getObservableFromLink(\n        document,\n        options.context,\n        variables,\n      );\n\n      const fqrfId = `fetchRequest:${queryId}`;\n      this.fetchQueryRejectFns.set(fqrfId, reject);\n\n      const cleanup = () => {\n        this.fetchQueryRejectFns.delete(fqrfId);\n        this.setQuery(queryId, ({ subscriptions }) => {\n          subscriptions.delete(subscription);\n        });\n      };\n\n      const subscription = observable.map((result: ExecutionResult) => {\n        if (requestId >= this.getQuery(queryId).lastRequestId) {\n          this.markQueryResult(\n            queryId,\n            result,\n            options,\n            fetchMoreForQueryId,\n          );\n\n          this.queryStore.markQueryResult(\n            queryId,\n            result,\n            fetchMoreForQueryId,\n          );\n\n          this.invalidate(queryId);\n          this.invalidate(fetchMoreForQueryId);\n\n          this.broadcastQueries();\n        }\n\n        if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n          return reject(new ApolloError({\n            graphQLErrors: result.errors,\n          }));\n        }\n\n        if (errorPolicy === 'all') {\n          errorsFromStore = result.errors;\n        }\n\n        if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n          // We don't write fetchMore results to the store because this would overwrite\n          // the original result in case an @connection directive is used.\n          resultFromStore = result.data;\n        } else {\n          // ensure result is combined with data already in store\n          const { result, complete } = this.dataStore.getCache().diff<T>({\n            variables,\n            query: document,\n            optimistic: false,\n            returnPartialData: true,\n          });\n\n          if (complete || options.returnPartialData) {\n            resultFromStore = result;\n          }\n        }\n      }).subscribe({\n        error(error: ApolloError) {\n          cleanup();\n          reject(error);\n        },\n\n        complete() {\n          cleanup();\n          resolve({\n            data: resultFromStore,\n            errors: errorsFromStore,\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            stale: false,\n          });\n        },\n      });\n\n      this.setQuery(queryId, ({ subscriptions }) => {\n        subscriptions.add(subscription);\n      });\n    });\n  }\n\n  private getQuery(queryId: string) {\n    return (\n      this.queries.get(queryId) || {\n        listeners: new Set<QueryListener>(),\n        invalidated: false,\n        document: null,\n        newData: null,\n        lastRequestId: 1,\n        observableQuery: null,\n        subscriptions: new Set<Subscription>(),\n      }\n    );\n  }\n\n  private setQuery<T extends keyof QueryInfo>(\n    queryId: string,\n    updater: (prev: QueryInfo) => Pick<QueryInfo, T> | void,\n  ) {\n    const prev = this.getQuery(queryId);\n    const newInfo = { ...prev, ...updater(prev) };\n    this.queries.set(queryId, newInfo);\n  }\n\n  private invalidate(\n    queryId: string | undefined,\n    invalidated = true,\n  ) {\n    if (queryId) {\n      this.setQuery(queryId, () => ({ invalidated }));\n    }\n  }\n\n  private prepareContext(context = {}) {\n    const newContext = this.localState.prepareContext(context);\n    return {\n      ...newContext,\n      clientAwareness: this.clientAwareness,\n    };\n  }\n\n  public checkInFlight(queryId: string) {\n    const query = this.queryStore.get(queryId);\n\n    return (\n      query &&\n      query.networkStatus !== NetworkStatus.ready &&\n      query.networkStatus !== NetworkStatus.error\n    );\n  }\n\n  // Map from client ID to { interval, options }.\n  private pollingInfoByQueryId = new Map<string, {\n    interval: number;\n    timeout: NodeJS.Timeout;\n    options: WatchQueryOptions;\n  }>();\n\n  public startPollingQuery(\n    options: WatchQueryOptions,\n    queryId: string,\n    listener?: QueryListener,\n  ): string {\n    const { pollInterval } = options;\n\n    invariant(\n      pollInterval,\n      'Attempted to start a polling query without a polling interval.',\n    );\n\n    // Do not poll in SSR mode\n    if (!this.ssrMode) {\n      let info = this.pollingInfoByQueryId.get(queryId)!;\n      if (!info) {\n        this.pollingInfoByQueryId.set(queryId, (info = {} as any));\n      }\n\n      info.interval = pollInterval!;\n      info.options = {\n        ...options,\n        fetchPolicy: 'network-only',\n      };\n\n      const maybeFetch = () => {\n        const info = this.pollingInfoByQueryId.get(queryId);\n        if (info) {\n          if (this.checkInFlight(queryId)) {\n            poll();\n          } else {\n            this.fetchQuery(queryId, info.options, FetchType.poll).then(\n              poll,\n              poll,\n            );\n          }\n        }\n      };\n\n      const poll = () => {\n        const info = this.pollingInfoByQueryId.get(queryId);\n        if (info) {\n          clearTimeout(info.timeout);\n          info.timeout = setTimeout(maybeFetch, info.interval);\n        }\n      };\n\n      if (listener) {\n        this.addQueryListener(queryId, listener);\n      }\n\n      poll();\n    }\n\n    return queryId;\n  }\n\n  public stopPollingQuery(queryId: string) {\n    this.pollingInfoByQueryId.delete(queryId);\n  }\n}\n","import { ExecutionResult, DocumentNode } from 'graphql';\nimport { ApolloCache, Cache, DataProxy } from 'apollo-cache';\n\nimport { QueryStoreValue } from '../data/queries';\nimport {\n  getOperationName,\n  tryFunctionOrLogError,\n  graphQLResultHasError,\n} from 'apollo-utilities';\nimport { MutationQueryReducer } from '../core/types';\n\nexport type QueryWithUpdater = {\n  updater: MutationQueryReducer<Object>;\n  query: QueryStoreValue;\n};\n\nexport interface DataWrite {\n  rootId: string;\n  result: any;\n  document: DocumentNode;\n  operationName: string | null;\n  variables: Object;\n}\n\nexport class DataStore<TSerialized> {\n  private cache: ApolloCache<TSerialized>;\n\n  constructor(initialCache: ApolloCache<TSerialized>) {\n    this.cache = initialCache;\n  }\n\n  public getCache(): ApolloCache<TSerialized> {\n    return this.cache;\n  }\n\n  public markQueryResult(\n    result: ExecutionResult,\n    document: DocumentNode,\n    variables: any,\n    fetchMoreForQueryId: string | undefined,\n    ignoreErrors: boolean = false,\n  ) {\n    let writeWithErrors = !graphQLResultHasError(result);\n    if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n      writeWithErrors = true;\n    }\n    if (!fetchMoreForQueryId && writeWithErrors) {\n      this.cache.write({\n        result: result.data,\n        dataId: 'ROOT_QUERY',\n        query: document,\n        variables: variables,\n      });\n    }\n  }\n\n  public markSubscriptionResult(\n    result: ExecutionResult,\n    document: DocumentNode,\n    variables: any,\n  ) {\n    // the subscription interface should handle not sending us results we no longer subscribe to.\n    // XXX I don't think we ever send in an object with errors, but we might in the future...\n    if (!graphQLResultHasError(result)) {\n      this.cache.write({\n        result: result.data,\n        dataId: 'ROOT_SUBSCRIPTION',\n        query: document,\n        variables: variables,\n      });\n    }\n  }\n\n  public markMutationInit(mutation: {\n    mutationId: string;\n    document: DocumentNode;\n    variables: any;\n    updateQueries: { [queryId: string]: QueryWithUpdater };\n    update: ((proxy: DataProxy, mutationResult: Object) => void) | undefined;\n    optimisticResponse: Object | Function | undefined;\n  }) {\n    if (mutation.optimisticResponse) {\n      let optimistic: Object;\n      if (typeof mutation.optimisticResponse === 'function') {\n        optimistic = mutation.optimisticResponse(mutation.variables);\n      } else {\n        optimistic = mutation.optimisticResponse;\n      }\n\n      this.cache.recordOptimisticTransaction(c => {\n        const orig = this.cache;\n        this.cache = c;\n\n        try {\n          this.markMutationResult({\n            mutationId: mutation.mutationId,\n            result: { data: optimistic },\n            document: mutation.document,\n            variables: mutation.variables,\n            updateQueries: mutation.updateQueries,\n            update: mutation.update,\n          });\n        } finally {\n          this.cache = orig;\n        }\n      }, mutation.mutationId);\n    }\n  }\n\n  public markMutationResult(mutation: {\n    mutationId: string;\n    result: ExecutionResult;\n    document: DocumentNode;\n    variables: any;\n    updateQueries: { [queryId: string]: QueryWithUpdater };\n    update: ((proxy: DataProxy, mutationResult: Object) => void) | undefined;\n  }) {\n    // Incorporate the result from this mutation into the store\n    if (!graphQLResultHasError(mutation.result)) {\n      const cacheWrites: Cache.WriteOptions[] = [{\n        result: mutation.result.data,\n        dataId: 'ROOT_MUTATION',\n        query: mutation.document,\n        variables: mutation.variables,\n      }];\n\n      const { updateQueries } = mutation;\n      if (updateQueries) {\n        Object.keys(updateQueries).forEach(id => {\n          const { query, updater } = updateQueries[id];\n\n          // Read the current query result from the store.\n          const { result: currentQueryResult, complete } = this.cache.diff({\n            query: query.document,\n            variables: query.variables,\n            returnPartialData: true,\n            optimistic: false,\n          });\n\n          if (complete) {\n            // Run our reducer using the current query result and the mutation result.\n            const nextQueryResult = tryFunctionOrLogError(() =>\n              updater(currentQueryResult, {\n                mutationResult: mutation.result,\n                queryName: getOperationName(query.document) || undefined,\n                queryVariables: query.variables,\n              }),\n            );\n\n            // Write the modified result back into the store if we got a new result.\n            if (nextQueryResult) {\n              cacheWrites.push({\n                result: nextQueryResult,\n                dataId: 'ROOT_QUERY',\n                query: query.document,\n                variables: query.variables,\n              });\n            }\n          }\n        });\n      }\n\n      this.cache.performTransaction(c => {\n        cacheWrites.forEach(write => c.write(write));\n\n        // If the mutation has some writes associated with it then we need to\n        // apply those writes to the store by running this reducer again with a\n        // write action.\n        const { update } = mutation;\n        if (update) {\n          tryFunctionOrLogError(() => update(c, mutation.result));\n        }\n      });\n    }\n  }\n\n  public markMutationComplete({\n    mutationId,\n    optimisticResponse,\n  }: {\n    mutationId: string;\n    optimisticResponse?: any;\n  }) {\n    if (optimisticResponse) {\n      this.cache.removeOptimistic(mutationId);\n    }\n  }\n\n  public markUpdateQueryResult(\n    document: DocumentNode,\n    variables: any,\n    newResult: any,\n  ) {\n    this.cache.write({\n      result: newResult,\n      dataId: 'ROOT_QUERY',\n      variables,\n      query: document,\n    });\n  }\n\n  public reset(): Promise<void> {\n    return this.cache.reset();\n  }\n}\n","import {\n  ApolloLink,\n  FetchResult,\n  GraphQLRequest,\n  execute,\n} from 'apollo-link';\nimport { ExecutionResult, DocumentNode } from 'graphql';\nimport { ApolloCache, DataProxy } from 'apollo-cache';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { QueryManager } from './core/QueryManager';\nimport {\n  ApolloQueryResult,\n  OperationVariables,\n  Resolvers,\n} from './core/types';\nimport { ObservableQuery } from './core/ObservableQuery';\nimport { LocalState, FragmentMatcher } from './core/LocalState';\nimport { Observable } from './util/Observable';\n\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  WatchQueryFetchPolicy,\n} from './core/watchQueryOptions';\n\nimport { DataStore } from './data/store';\n\nimport { version } from './version';\n\nexport interface DefaultOptions {\n  watchQuery?: Partial<WatchQueryOptions>;\n  query?: Partial<QueryOptions>;\n  mutate?: Partial<MutationOptions>;\n}\n\nlet hasSuggestedDevtools = false;\n\nexport type ApolloClientOptions<TCacheShape> = {\n  link?: ApolloLink;\n  cache: ApolloCache<TCacheShape>;\n  ssrForceFetchDelay?: number;\n  ssrMode?: boolean;\n  connectToDevTools?: boolean;\n  queryDeduplication?: boolean;\n  defaultOptions?: DefaultOptions;\n  assumeImmutableResults?: boolean;\n  resolvers?: Resolvers | Resolvers[];\n  typeDefs?: string | string[] | DocumentNode | DocumentNode[];\n  fragmentMatcher?: FragmentMatcher;\n  name?: string;\n  version?: string;\n};\n\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nexport default class ApolloClient<TCacheShape> implements DataProxy {\n  public link: ApolloLink;\n  public store: DataStore<TCacheShape>;\n  public cache: ApolloCache<TCacheShape>;\n  public readonly queryManager: QueryManager<TCacheShape>;\n  public disableNetworkFetches: boolean;\n  public version: string;\n  public queryDeduplication: boolean;\n  public defaultOptions: DefaultOptions = {};\n  public readonly typeDefs: ApolloClientOptions<TCacheShape>['typeDefs'];\n\n  private devToolsHookCb: Function;\n  private resetStoreCallbacks: Array<() => Promise<any>> = [];\n  private clearStoreCallbacks: Array<() => Promise<any>> = [];\n  private localState: LocalState<TCacheShape>;\n\n  /**\n   * Constructs an instance of {@link ApolloClient}.\n   *\n   * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n   *\n   * @param cache The initial cache to use in the data store.\n   *\n   * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n   *\n   * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n   * server side render.\n   *\n   * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n   * with identical parameters (query, variables, operationName) is already in flight.\n   *\n   * @param defaultOptions Used to set application wide defaults for the\n   *                       options supplied to `watchQuery`, `query`, or\n   *                       `mutate`.\n   *\n   * @param assumeImmutableResults When this option is true, the client will assume results\n   *                               read from the cache are never mutated by application code,\n   *                               which enables substantial performance optimizations. Passing\n   *                               `{ freezeResults: true }` to the `InMemoryCache` constructor\n   *                               can help enforce this immutability.\n   *\n   * @param name A custom name that can be used to identify this client, when\n   *             using Apollo client awareness features. E.g. \"iOS\".\n   *\n   * @param version A custom version that can be used to identify this client,\n   *                when using Apollo client awareness features. This is the\n   *                version of your client, which you may want to increment on\n   *                new builds. This is NOT the version of Apollo Client that\n   *                you are using.\n   */\n  constructor(options: ApolloClientOptions<TCacheShape>) {\n    const {\n      cache,\n      ssrMode = false,\n      ssrForceFetchDelay = 0,\n      connectToDevTools,\n      queryDeduplication = true,\n      defaultOptions,\n      assumeImmutableResults = false,\n      resolvers,\n      typeDefs,\n      fragmentMatcher,\n      name: clientAwarenessName,\n      version: clientAwarenessVersion,\n    } = options;\n\n    let { link } = options;\n\n    // If a link hasn't been defined, but local state resolvers have been set,\n    // setup a default empty link.\n    if (!link && resolvers) {\n      link = ApolloLink.empty();\n    }\n\n    if (!link || !cache) {\n      throw new InvariantError(\n        \"In order to initialize Apollo Client, you must specify 'link' and 'cache' properties in the options object.\\n\" +\n        \"These options are part of the upgrade requirements when migrating from Apollo Client 1.x to Apollo Client 2.x.\\n\" +\n        \"For more information, please visit: https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup\"\n      );\n    }\n\n    // remove apollo-client supported directives\n    this.link = link;\n    this.cache = cache;\n    this.store = new DataStore(cache);\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || {};\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(\n        () => (this.disableNetworkFetches = false),\n        ssrForceFetchDelay,\n      );\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n\n    // Attach the client instance to window to let us be found by chrome devtools, but only in\n    // development mode\n    const defaultConnectToDevTools =\n      process.env.NODE_ENV !== 'production' &&\n      typeof window !== 'undefined' &&\n      !(window as any).__APOLLO_CLIENT__;\n\n    if (\n      typeof connectToDevTools === 'undefined'\n        ? defaultConnectToDevTools\n        : connectToDevTools && typeof window !== 'undefined'\n    ) {\n      (window as any).__APOLLO_CLIENT__ = this;\n    }\n\n    /**\n     * Suggest installing the devtools for developers who don't have them\n     */\n    if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n      hasSuggestedDevtools = true;\n      if (\n        typeof window !== 'undefined' &&\n        window.document &&\n        window.top === window.self\n      ) {\n        // First check if devtools is not installed\n        if (\n          typeof (window as any).__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined'\n        ) {\n          // Only for Chrome\n          if (\n            window.navigator &&\n            window.navigator.userAgent &&\n            window.navigator.userAgent.indexOf('Chrome') > -1\n          ) {\n            // tslint:disable-next-line\n            console.debug(\n              'Download the Apollo DevTools ' +\n                'for a better development experience: ' +\n                'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm',\n            );\n          }\n        }\n      }\n    }\n\n    this.version = version;\n\n    this.localState = new LocalState({\n      cache,\n      client: this,\n      resolvers,\n      fragmentMatcher,\n    });\n\n    this.queryManager = new QueryManager({\n      link: this.link,\n      store: this.store,\n      queryDeduplication,\n      ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName!,\n        version: clientAwarenessVersion!,\n      },\n      localState: this.localState,\n      assumeImmutableResults,\n      onBroadcast: () => {\n        if (this.devToolsHookCb) {\n          this.devToolsHookCb({\n            action: {},\n            state: {\n              queries: this.queryManager.queryStore.getStore(),\n              mutations: this.queryManager.mutationStore.getStore(),\n            },\n            dataWithOptimisticResults: this.cache.extract(true),\n          });\n        }\n      },\n    });\n  }\n\n  /**\n   * Call this method to terminate any active client processes, making it safe\n   * to dispose of this `ApolloClient` instance.\n   */\n  public stop() {\n    this.queryManager.stop();\n  }\n\n  /**\n   * This watches the cache store of the query according to the options specified and\n   * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n   * receive updated results through a GraphQL observer when the cache store changes.\n   * <p /><p />\n   * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n   * it uses Apollo's store in order to reactively deliver updates to your query results.\n   * <p /><p />\n   * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n   * first and last name and this person has a particular object identifer, provided by\n   * dataIdFromObject. Later, a different query fetches that same person's\n   * first and last name and the first name has now changed. Then, any observers associated\n   * with the results of the first query will be updated with a new result object.\n   * <p /><p />\n   * Note that if the cache does not change, the subscriber will *not* be notified.\n   * <p /><p />\n   * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n   * a description of store reactivity.\n   */\n  public watchQuery<T = any, TVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables>,\n  ): ObservableQuery<T, TVariables> {\n    if (this.defaultOptions.watchQuery) {\n      options = {\n        ...this.defaultOptions.watchQuery,\n        ...options,\n      } as WatchQueryOptions<TVariables>;\n    }\n\n    // XXX Overwriting options is probably not the best way to do this long term...\n    if (\n      this.disableNetworkFetches &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.watchQuery<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single query according to the options specified and\n   * returns a {@link Promise} which is either resolved with the resulting data\n   * or rejected with an error.\n   *\n   * @param options An object of type {@link QueryOptions} that allows us to\n   * describe how this query should be treated e.g. whether it should hit the\n   * server at all or just resolve from the cache, etc.\n   */\n  public query<T = any, TVariables = OperationVariables>(\n    options: QueryOptions<TVariables>,\n  ): Promise<ApolloQueryResult<T>> {\n    if (this.defaultOptions.query) {\n      options = { ...this.defaultOptions.query, ...options } as QueryOptions<\n        TVariables\n      >;\n    }\n\n    invariant(\n      (options.fetchPolicy as WatchQueryFetchPolicy) !== 'cache-and-network',\n      'The cache-and-network fetchPolicy does not work with client.query, because ' +\n      'client.query can only return a single result. Please use client.watchQuery ' +\n      'to receive multiple results from the cache and the network, or consider ' +\n      'using a different fetchPolicy, such as cache-first or network-only.'\n    );\n\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.query<T>(options);\n  }\n\n  /**\n   * This resolves a single mutation according to the options specified and returns a\n   * {@link Promise} which is either resolved with the resulting data or rejected with an\n   * error.\n   *\n   * It takes options as an object with the following keys and values:\n   */\n  public mutate<T = any, TVariables = OperationVariables>(\n    options: MutationOptions<T, TVariables>,\n  ): Promise<FetchResult<T>> {\n    if (this.defaultOptions.mutate) {\n      options = {\n        ...this.defaultOptions.mutate,\n        ...options,\n      } as MutationOptions<T, TVariables>;\n    }\n\n    return this.queryManager.mutate<T>(options);\n  }\n\n  /**\n   * This subscribes to a graphql subscription according to the options specified and returns an\n   * {@link Observable} which either emits received data or an error.\n   */\n  public subscribe<T = any, TVariables = OperationVariables>(\n    options: SubscriptionOptions<TVariables>,\n  ): Observable<FetchResult<T>> {\n    return this.queryManager.startGraphQLSubscription<T>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL query without making a network request. This method will start at\n   * the root query. To start at a specific id returned by `dataIdFromObject`\n   * use `readFragment`.\n   *\n   * @param optimistic Set to `true` to allow `readQuery` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readQuery<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Query<TVariables>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readQuery<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL fragment without making a network request. This method will read a\n   * GraphQL fragment from any arbitrary id that is currently cached, unlike\n   * `readQuery` which will only read from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @param optimistic Set to `true` to allow `readFragment` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readFragment<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Fragment<TVariables>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readFragment<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL query directly to\n   * the store. This method will start at the root query. To start at a\n   * specific id returned by `dataIdFromObject` then use `writeFragment`.\n   */\n  public writeQuery<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    const result = this.cache.writeQuery<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n    return result;\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL fragment directly to\n   * the store. This method will write to a GraphQL fragment from any arbitrary\n   * id that is currently cached, unlike `writeQuery` which will only write\n   * from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are writing. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   */\n  public writeFragment<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    const result = this.cache.writeFragment<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n    return result;\n  }\n\n  /**\n   * Sugar for writeQuery & writeFragment\n   * This method will construct a query from the data object passed in.\n   * If no id is supplied, writeData will write the data to the root.\n   * If an id is supplied, writeData will write a fragment to the object\n   * specified by the id in the store.\n   *\n   * Since you aren't passing in a query to check the shape of the data,\n   * you must pass in an object that conforms to the shape of valid GraphQL data.\n   */\n  public writeData<TData = any>(\n    options: DataProxy.WriteDataOptions<TData>,\n  ): void {\n    const result = this.cache.writeData<TData>(options);\n    this.queryManager.broadcastQueries();\n    return result;\n  }\n\n  public __actionHookForDevTools(cb: () => any) {\n    this.devToolsHookCb = cb;\n  }\n\n  public __requestRaw(payload: GraphQLRequest): Observable<ExecutionResult> {\n    return execute(this.link, payload);\n  }\n\n  /**\n   * This initializes the query manager that tracks queries and the cache\n   */\n  public initQueryManager(): QueryManager<TCacheShape> {\n    invariant.warn(\n      'Calling the initQueryManager method is no longer necessary, ' +\n        'and it will be removed from ApolloClient in version 3.0.',\n    );\n    return this.queryManager;\n  }\n\n  /**\n   * Resets your entire store by clearing out your cache and then re-executing\n   * all of your active queries. This makes it so that you may guarantee that\n   * there is no data left in your store from a time before you called this\n   * method.\n   *\n   * `resetStore()` is useful when your user just logged out. You’ve removed the\n   * user session, and you now want to make sure that any references to data you\n   * might have fetched while the user session was active is gone.\n   *\n   * It is important to remember that `resetStore()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public resetStore(): Promise<ApolloQueryResult<any>[] | null> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore())\n      .then(() => Promise.all(this.resetStoreCallbacks.map(fn => fn())))\n      .then(() => this.reFetchObservableQueries());\n  }\n\n  /**\n   * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n   * not refetch any active queries.\n   */\n  public clearStore(): Promise<any[]> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore())\n      .then(() => Promise.all(this.clearStoreCallbacks.map(fn => fn())));\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * reset. `onResetStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onResetStore(cb: () => Promise<any>): () => void {\n    this.resetStoreCallbacks.push(cb);\n    return () => {\n      this.resetStoreCallbacks = this.resetStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * cleared. `onClearStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onClearStore(cb: () => Promise<any>): () => void {\n    this.clearStoreCallbacks.push(cb);\n    return () => {\n      this.clearStoreCallbacks = this.clearStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Refetches all of your active queries.\n   *\n   * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n   *\n   * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n   */\n  public reFetchObservableQueries(\n    includeStandby?: boolean,\n  ): Promise<ApolloQueryResult<any>[]> {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  }\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public extract(optimistic?: boolean): TCacheShape {\n    return this.cache.extract(optimistic);\n  }\n\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public restore(serializedState: TCacheShape): ApolloCache<TCacheShape> {\n    return this.cache.restore(serializedState);\n  }\n\n  /**\n   * Add additional local resolvers.\n   */\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.addResolvers(resolvers);\n  }\n\n  /**\n   * Set (override existing) local resolvers.\n   */\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.setResolvers(resolvers);\n  }\n\n  /**\n   * Get all registered local resolvers.\n   */\n  public getResolvers() {\n    return this.localState.getResolvers();\n  }\n\n  /**\n   * Set a custom local state fragment matcher.\n   */\n  public setLocalStateFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  }\n}\n","export const version = \"2.6.8\"","module.exports = require('./lib/Observable.js').Observable;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var isHotReloading = function isHotReloading() {\n  var castModule = module;\n  return !!(typeof castModule !== 'undefined' && castModule.hot && typeof castModule.hot.status === 'function' && castModule.hot.status() === 'apply');\n};\n\nexport default isHotReloading;","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n  /* istanbul ignore else (see transformation done in './resources/inlineInvariant.js') */\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n\n/* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n\n/* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\n\nexport var SYMBOL_ASYNC_ITERATOR = // $FlowFixMe Flow doesn't define `Symbol.asyncIterator` yet\ntypeof Symbol === 'function' ? Symbol.asyncIterator : '@@asyncIterator';\n/* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\n\nexport var SYMBOL_TO_STRING_TAG = // $FlowFixMe Flow doesn't define `Symbol.toStringTag` yet\ntypeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag';\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError === null || originalError === void 0 ? void 0 : originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    }\n    /* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Token(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Token(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Token(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Token(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Token(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Token(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Token(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Token(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Token(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Token(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Token(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Token(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Token(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Token(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Source } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\nimport { Location } from \"./ast.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj), \".\"));\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        var _this$_options2;\n\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging\n */\n\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n} from 'graphql';\n\nexport function queryFromPojo(obj: any): DocumentNode {\n  const op: OperationDefinitionNode = {\n    kind: 'OperationDefinition',\n    operation: 'query',\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [op],\n  };\n\n  return out;\n}\n\nexport function fragmentFromPojo(obj: any, typename?: string): DocumentNode {\n  const frag: FragmentDefinitionNode = {\n    kind: 'FragmentDefinition',\n    typeCondition: {\n      kind: 'NamedType',\n      name: {\n        kind: 'Name',\n        value: typename || '__FakeType',\n      },\n    },\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [frag],\n  };\n\n  return out;\n}\n\nfunction selectionSetFromObj(obj: any): SelectionSetNode {\n  if (\n    typeof obj === 'number' ||\n    typeof obj === 'boolean' ||\n    typeof obj === 'string' ||\n    typeof obj === 'undefined' ||\n    obj === null\n  ) {\n    // No selection set here\n    return null;\n  }\n\n  if (Array.isArray(obj)) {\n    // GraphQL queries don't include arrays\n    return selectionSetFromObj(obj[0]);\n  }\n\n  // Now we know it's an object\n  const selections: FieldNode[] = [];\n\n  Object.keys(obj).forEach(key => {\n    const nestedSelSet: SelectionSetNode = selectionSetFromObj(obj[key]);\n\n    const field: FieldNode = {\n      kind: 'Field',\n      name: {\n        kind: 'Name',\n        value: key,\n      },\n      selectionSet: nestedSelSet || undefined,\n    };\n\n    selections.push(field);\n  });\n\n  const selectionSet: SelectionSetNode = {\n    kind: 'SelectionSet',\n    selections,\n  };\n\n  return selectionSet;\n}\n\nexport const justTypenameQuery: DocumentNode = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: null,\n      variableDefinitions: null,\n      directives: [],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            alias: null,\n            name: {\n              kind: 'Name',\n              value: '__typename',\n            },\n            arguments: [],\n            directives: [],\n            selectionSet: null,\n          },\n        ],\n      },\n    },\n  ],\n};\n","import { DataProxy } from './DataProxy';\n\nexport namespace Cache {\n  export type WatchCallback = (newData: any) => void;\n  export interface EvictionResult {\n    success: Boolean;\n  }\n\n  export interface ReadOptions<TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    rootId?: string;\n    previousResult?: any;\n    optimistic: boolean;\n  }\n\n  export interface WriteOptions<TResult = any, TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    dataId: string;\n    result: TResult;\n  }\n\n  export interface DiffOptions extends ReadOptions {\n    returnPartialData?: boolean;\n  }\n\n  export interface WatchOptions extends ReadOptions {\n    callback: WatchCallback;\n  }\n\n  export interface EvictOptions<TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    rootId?: string;\n  }\n\n  export import DiffResult = DataProxy.DiffResult;\n  export import WriteQueryOptions = DataProxy.WriteQueryOptions;\n  export import WriteFragmentOptions = DataProxy.WriteFragmentOptions;\n  export import WriteDataOptions = DataProxy.WriteDataOptions;\n  export import Fragment = DataProxy.Fragment;\n}\n","interface Node<K, V> {\n  key: K;\n  value: V;\n  newer: Node<K, V> | null;\n  older: Node<K, V> | null;\n}\n\nfunction defaultDispose() {}\n\nexport class Cache<K = any, V = any> {\n  private map = new Map<K, Node<K, V>>();\n  private newest: Node<K, V> | null = null;\n  private oldest: Node<K, V> | null = null;\n\n  constructor(\n    private max = Infinity,\n    public dispose: (value: V, key: K) => void = defaultDispose,\n  ) {}\n\n  public has(key: K) {\n    return this.map.has(key);\n  }\n\n  public get(key: K) {\n    const entry = this.getEntry(key);\n    return entry && entry.value;\n  }\n\n  private getEntry(key: K): Node<K, V> | void {\n    const entry = this.map.get(key);\n\n    if (entry && entry !== this.newest) {\n      const { older, newer } = entry;\n\n      if (newer) {\n        newer.older = older;\n      }\n\n      if (older) {\n        older.newer = newer;\n      }\n\n      entry.older = this.newest;\n      entry.older!.newer = entry;\n\n      entry.newer = null;\n      this.newest = entry;\n\n      if (entry === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n\n    return entry;\n  }\n\n  public set(key: K, value: V) {\n    let entry = this.getEntry(key);\n    if (entry) {\n      return entry.value = value;\n    }\n\n    entry = {\n      key: key,\n      value: value,\n      newer: null,\n      older: this.newest\n    };\n\n    if (this.newest) {\n      this.newest.newer = entry;\n    }\n\n    this.newest = entry;\n    this.oldest = this.oldest || entry;\n\n    this.map.set(key, entry);\n\n    return entry.value;\n  }\n\n  public clean() {\n    while (this.oldest && this.map.size > this.max) {\n      this.delete(this.oldest.key);\n    }\n  }\n\n  public delete(key: K) {\n    const entry = this.map.get(key);\n    if (entry) {\n      if (entry === this.newest) {\n        this.newest = entry.older;\n      }\n\n      if (entry === this.oldest) {\n        this.oldest = entry.newer;\n      }\n\n      if (entry.newer) {\n        entry.newer.older = entry.older;\n      }\n\n      if (entry.older) {\n        entry.older.newer = entry.newer;\n      }\n\n      this.map.delete(key);\n      this.dispose(entry.value, key);\n\n      return true;\n    }\n\n    return false;\n  }\n}\n","type Context = {\n  parent: Context | null;\n  slots: { [slotId: string]: any };\n}\n\n// This currentContext variable will only be used if the makeSlotClass\n// function is called, which happens only if this is the first copy of the\n// @wry/context package to be imported.\nlet currentContext: Context | null = null;\n\n// This unique internal object is used to denote the absence of a value\n// for a given Slot, and is never exposed to outside code.\nconst MISSING_VALUE: any = {};\n\nlet idCounter = 1;\n\n// Although we can't do anything about the cost of duplicated code from\n// accidentally bundling multiple copies of the @wry/context package, we can\n// avoid creating the Slot class more than once using makeSlotClass.\nconst makeSlotClass = () => class Slot<TValue> {\n  // If you have a Slot object, you can find out its slot.id, but you cannot\n  // guess the slot.id of a Slot you don't have access to, thanks to the\n  // randomized suffix.\n  public readonly id = [\n    \"slot\",\n    idCounter++,\n    Date.now(),\n    Math.random().toString(36).slice(2),\n  ].join(\":\");\n\n  public hasValue() {\n    for (let context = currentContext; context; context = context.parent) {\n      // We use the Slot object iself as a key to its value, which means the\n      // value cannot be obtained without a reference to the Slot object.\n      if (this.id in context.slots) {\n        const value = context.slots[this.id];\n        if (value === MISSING_VALUE) break;\n        if (context !== currentContext) {\n          // Cache the value in currentContext.slots so the next lookup will\n          // be faster. This caching is safe because the tree of contexts and\n          // the values of the slots are logically immutable.\n          currentContext!.slots[this.id] = value;\n        }\n        return true;\n      }\n    }\n    if (currentContext) {\n      // If a value was not found for this Slot, it's never going to be found\n      // no matter how many times we look it up, so we might as well cache\n      // the absence of the value, too.\n      currentContext.slots[this.id] = MISSING_VALUE;\n    }\n    return false;\n  }\n\n  public getValue(): TValue | undefined {\n    if (this.hasValue()) {\n      return currentContext!.slots[this.id] as TValue;\n    }\n  }\n\n  public withValue<TResult, TArgs extends any[], TThis = any>(\n    value: TValue,\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ): TResult {\n    const slots = {\n      __proto__: null,\n      [this.id]: value,\n    };\n    const parent = currentContext;\n    currentContext = { parent, slots };\n    try {\n      // Function.prototype.apply allows the arguments array argument to be\n      // omitted or undefined, so args! is fine here.\n      return callback.apply(thisArg!, args!);\n    } finally {\n      currentContext = parent;\n    }\n  }\n\n  // Capture the current context and wrap a callback function so that it\n  // reestablishes the captured context when called.\n  static bind<TArgs extends any[], TResult>(\n    callback: (...args: TArgs) => TResult,\n  ) {\n    const context = currentContext;\n    return function (this: any) {\n      const saved = currentContext;\n      try {\n        currentContext = context;\n        return callback.apply(this, arguments as any);\n      } finally {\n        currentContext = saved;\n      }\n    } as typeof callback;\n  }\n\n  // Immediately run a callback function without any captured context.\n  static noContext<TResult, TArgs extends any[], TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ) {\n    if (currentContext) {\n      const saved = currentContext;\n      try {\n        currentContext = null;\n        // Function.prototype.apply allows the arguments array argument to be\n        // omitted or undefined, so args! is fine here.\n        return callback.apply(thisArg!, args!);\n      } finally {\n        currentContext = saved;\n      }\n    } else {\n      return callback.apply(thisArg!, args!);\n    }\n  }\n};\n\n// We store a single global implementation of the Slot class as a permanent\n// non-enumerable symbol property of the Array constructor. This obfuscation\n// does nothing to prevent access to the Slot class, but at least it ensures\n// the implementation (i.e. currentContext) cannot be tampered with, and all\n// copies of the @wry/context package (hopefully just one) will share the\n// same Slot implementation. Since the first copy of the @wry/context package\n// to be imported wins, this technique imposes a very high cost for any\n// future breaking changes to the Slot class.\nconst globalKey = \"@wry/context:Slot\";\nconst host = Array as any;\n\nexport const Slot: ReturnType<typeof makeSlotClass> = host[globalKey] || function () {\n  const Slot = makeSlotClass();\n  try {\n    Object.defineProperty(host, globalKey, {\n      value: host[globalKey] = Slot,\n      enumerable: false,\n      writable: false,\n      configurable: false,\n    });\n  } finally {\n    return Slot;\n  }\n}();\n","import { AnyEntry } from \"./entry\";\nimport { Slot } from \"@wry/context\";\n\nexport const parentEntrySlot = new Slot<AnyEntry>();\n\nexport {\n  bind as bindContext,\n  noContext,\n  setTimeout,\n  asyncFromGen,\n} from \"@wry/context\";\n","import { parentEntrySlot } from \"./context\";\nimport { OptimisticWrapOptions } from \"./index\";\n\nconst reusableEmptyArray: AnyEntry[] = [];\nconst emptySetPool: Set<AnyEntry>[] = [];\nconst POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition: any, optionalMessage?: string) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\n// Since exceptions are cached just like normal values, we need an efficient\n// way of representing unknown, ordinary, and exceptional values.\ntype Value<T> =\n  | []           // unknown\n  | [T]          // known value\n  | [void, any]; // known exception\n\nfunction valueIs(a: Value<any>, b: Value<any>) {\n  const len = a.length;\n  return (\n    // Unknown values are not equal to each other.\n    len > 0 &&\n    // Both values must be ordinary (or both exceptional) to be equal.\n    len === b.length &&\n    // The underlying value or exception must be the same.\n    a[len - 1] === b[len - 1]\n  );\n}\n\nfunction valueGet<T>(value: Value<T>): T {\n  switch (value.length) {\n    case 0: throw new Error(\"unknown value\");\n    case 1: return value[0];\n    case 2: throw value[1];\n  }\n}\n\nfunction valueCopy<T>(value: Value<T>): Value<T> {\n  return value.slice(0) as Value<T>;\n}\n\nexport type AnyEntry = Entry<any, any>;\n\nexport class Entry<TArgs extends any[], TValue> {\n  public static count = 0;\n\n  public subscribe: OptimisticWrapOptions<TArgs>[\"subscribe\"];\n  public unsubscribe?: () => any;\n  public reportOrphan?: (this: Entry<TArgs, TValue>) => any;\n\n  public readonly parents = new Set<AnyEntry>();\n  public readonly childValues = new Map<AnyEntry, Value<any>>();\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  public dirtyChildren: Set<AnyEntry> | null = null;\n\n  public dirty = true;\n  public recomputing = false;\n  public readonly value: Value<TValue> = [];\n\n  constructor(\n    public readonly fn: (...args: TArgs) => TValue,\n    public args: TArgs,\n  ) {\n    ++Entry.count;\n  }\n\n  // This is the most important method of the Entry API, because it\n  // determines whether the cached this.value can be returned immediately,\n  // or must be recomputed. The overall performance of the caching system\n  // depends on the truth of the following observations: (1) this.dirty is\n  // usually false, (2) this.dirtyChildren is usually null/empty, and thus\n  // (3) valueGet(this.value) is usually returned without recomputation.\n  public recompute(): TValue {\n    assert(! this.recomputing, \"already recomputing\");\n\n    if (! rememberParent(this) && maybeReportOrphan(this)) {\n      // The recipient of the entry.reportOrphan callback decided to dispose\n      // of this orphan entry by calling entry.dispose(), so we don't need to\n      // (and should not) proceed with the recomputation.\n      return void 0 as any;\n    }\n\n    return mightBeDirty(this)\n      ? reallyRecompute(this)\n      : valueGet(this.value);\n  }\n\n  public setDirty() {\n    if (this.dirty) return;\n    this.dirty = true;\n    this.value.length = 0;\n    reportDirty(this);\n    // We can go ahead and unsubscribe here, since any further dirty\n    // notifications we receive will be redundant, and unsubscribing may\n    // free up some resources, e.g. file watchers.\n    maybeUnsubscribe(this);\n  }\n\n  public dispose() {\n    forgetChildren(this).forEach(maybeReportOrphan);\n    maybeUnsubscribe(this);\n\n    // Because this entry has been kicked out of the cache (in index.js),\n    // we've lost the ability to find out if/when this entry becomes dirty,\n    // whether that happens through a subscription, because of a direct call\n    // to entry.setDirty(), or because one of its children becomes dirty.\n    // Because of this loss of future information, we have to assume the\n    // worst (that this entry might have become dirty very soon), so we must\n    // immediately mark this entry's parents as dirty. Normally we could\n    // just call entry.setDirty() rather than calling parent.setDirty() for\n    // each parent, but that would leave this entry in parent.childValues\n    // and parent.dirtyChildren, which would prevent the child from being\n    // truly forgotten.\n    this.parents.forEach(parent => {\n      parent.setDirty();\n      forgetChild(parent, this);\n    });\n  }\n}\n\nfunction rememberParent(child: AnyEntry) {\n  const parent = parentEntrySlot.getValue();\n  if (parent) {\n    child.parents.add(parent);\n\n    if (! parent.childValues.has(child)) {\n      parent.childValues.set(child, []);\n    }\n\n    if (mightBeDirty(child)) {\n      reportDirtyChild(parent, child);\n    } else {\n      reportCleanChild(parent, child);\n    }\n\n    return parent;\n  }\n}\n\nfunction reallyRecompute(entry: AnyEntry) {\n  // Since this recomputation is likely to re-remember some of this\n  // entry's children, we forget our children here but do not call\n  // maybeReportOrphan until after the recomputation finishes.\n  const originalChildren = forgetChildren(entry);\n\n  // Set entry as the parent entry while calling recomputeNewValue(entry).\n  parentEntrySlot.withValue(entry, recomputeNewValue, [entry]);\n\n  if (maybeSubscribe(entry)) {\n    // If we successfully recomputed entry.value and did not fail to\n    // (re)subscribe, then this Entry is no longer explicitly dirty.\n    setClean(entry);\n  }\n\n  // Now that we've had a chance to re-remember any children that were\n  // involved in the recomputation, we can safely report any orphan\n  // children that remain.\n  originalChildren.forEach(maybeReportOrphan);\n\n  return valueGet(entry.value);\n}\n\nfunction recomputeNewValue(entry: AnyEntry) {\n  entry.recomputing = true;\n  // Set entry.value as unknown.\n  entry.value.length = 0;\n  try {\n    // If entry.fn succeeds, entry.value will become a normal Value.\n    entry.value[0] = entry.fn.apply(null, entry.args);\n  } catch (e) {\n    // If entry.fn throws, entry.value will become exceptional.\n    entry.value[1] = e;\n  }\n  // Either way, this line is always reached.\n  entry.recomputing = false;\n}\n\nfunction mightBeDirty(entry: AnyEntry) {\n  return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\n}\n\nfunction setClean(entry: AnyEntry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(child: AnyEntry) {\n  child.parents.forEach(parent => reportDirtyChild(parent, child));\n}\n\nfunction reportClean(child: AnyEntry) {\n  child.parents.forEach(parent => reportCleanChild(parent, child));\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(mightBeDirty(child));\n\n  if (! parent.dirtyChildren) {\n    parent.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (parent.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  parent.dirtyChildren.add(child);\n  reportDirty(parent);\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(! mightBeDirty(child));\n\n  const childValue = parent.childValues.get(child)!;\n  if (childValue.length === 0) {\n    parent.childValues.set(child, valueCopy(child.value));\n  } else if (! valueIs(childValue, child.value)) {\n    parent.setDirty();\n  }\n\n  removeDirtyChild(parent, child);\n\n  if (mightBeDirty(parent)) {\n    return;\n  }\n\n  reportClean(parent);\n}\n\nfunction removeDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  const dc = parent.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      parent.dirtyChildren = null;\n    }\n  }\n}\n\n// If the given entry has a reportOrphan method, and no remaining parents,\n// call entry.reportOrphan and return true iff it returns true. The\n// reportOrphan function should return true to indicate entry.dispose()\n// has been called, and the entry has been removed from any other caches\n// (see index.js for the only current example).\nfunction maybeReportOrphan(entry: AnyEntry) {\n  return entry.parents.size === 0 &&\n    typeof entry.reportOrphan === \"function\" &&\n    entry.reportOrphan() === true;\n}\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(parent: AnyEntry) {\n  let children = reusableEmptyArray;\n\n  if (parent.childValues.size > 0) {\n    children = [];\n    parent.childValues.forEach((_value, child) => {\n      forgetChild(parent, child);\n      children.push(child);\n    });\n  }\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefore must have been reset to null.\n  assert(parent.dirtyChildren === null);\n\n  return children;\n}\n\nfunction forgetChild(parent: AnyEntry, child: AnyEntry) {\n  child.parents.delete(parent);\n  parent.childValues.delete(child);\n  removeDirtyChild(parent, child);\n}\n\nfunction maybeSubscribe(entry: AnyEntry) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      maybeUnsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, entry.args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n\nfunction maybeUnsubscribe(entry: AnyEntry) {\n  const { unsubscribe } = entry;\n  if (typeof unsubscribe === \"function\") {\n    entry.unsubscribe = void 0;\n    unsubscribe();\n  }\n}\n","// A trie data structure that holds object keys weakly, yet can also hold\n// non-object keys, unlike the native `WeakMap`.\nexport class KeyTrie<K> {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  private weak?: WeakMap<any, KeyTrie<K>>;\n  private strong?: Map<any, KeyTrie<K>>;\n  private data?: K;\n\n  constructor(private readonly weakness: boolean) {}\n\n  public lookup<T extends any[]>(...array: T): K {\n    return this.lookupArray(array);\n  }\n\n  public lookupArray<T extends any[]>(array: T): K {\n    let node: KeyTrie<K> = this;\n    array.forEach(key => node = node.getChildTrie(key));\n    return node.data || (node.data = Object.create(null));\n  }\n\n  private getChildTrie(key: any) {\n    const map = this.weakness && isObjRef(key)\n      ? this.weak || (this.weak = new WeakMap<any, KeyTrie<K>>())\n      : this.strong || (this.strong = new Map<any, KeyTrie<K>>());\n    let child = map.get(key);\n    if (!child) map.set(key, child = new KeyTrie<K>(this.weakness));\n    return child;\n  }\n}\n\nfunction isObjRef(value: any) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) break;\n    // Fall through to return true...\n  case \"function\":\n    return true;\n  }\n  return false;\n}\n","import { Operation } from 'apollo-link';\nimport { print } from 'graphql/language/printer';\nimport { InvariantError } from 'ts-invariant';\n\n/*\n * Http Utilities: shared across links that make http requests\n */\n\n// XXX replace with actual typings when available\ndeclare var AbortController: any;\n\n//Used for any Error for data from the server\n//on a request with a Status >= 300\n//response contains no data or errors\nexport type ServerError = Error & {\n  response: Response;\n  result: Record<string, any>;\n  statusCode: number;\n};\n\n//Thrown when server's resonse is cannot be parsed\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport interface HttpQueryOptions {\n  includeQuery?: boolean;\n  includeExtensions?: boolean;\n}\n\nexport interface HttpConfig {\n  http?: HttpQueryOptions;\n  options?: any;\n  headers?: any; //overrides headers in options\n  credentials?: any;\n}\n\nexport interface UriFunction {\n  (operation: Operation): string;\n}\n\n// The body of a GraphQL-over-HTTP-POST request.\nexport interface Body {\n  query?: string;\n  operationName?: string;\n  variables?: Record<string, any>;\n  extensions?: Record<string, any>;\n}\n\nexport interface HttpOptions {\n  /**\n   * The URI to use when fetching operations.\n   *\n   * Defaults to '/graphql'.\n   */\n  uri?: string | UriFunction;\n\n  /**\n   * Passes the extensions field to your graphql server.\n   *\n   * Defaults to false.\n   */\n  includeExtensions?: boolean;\n\n  /**\n   * A `fetch`-compatible API to use when making requests.\n   */\n  fetch?: WindowOrWorkerGlobalScope['fetch'];\n\n  /**\n   * An object representing values to be sent as headers on the request.\n   */\n  headers?: any;\n\n  /**\n   * The credentials policy you want to use for the fetch call.\n   */\n  credentials?: string;\n\n  /**\n   * Any overrides of the fetch options argument to pass to the fetch call.\n   */\n  fetchOptions?: any;\n}\n\nconst defaultHttpOptions: HttpQueryOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n};\n\nconst defaultHeaders = {\n  // headers are case insensitive (https://stackoverflow.com/a/5259004)\n  accept: '*/*',\n  'content-type': 'application/json',\n};\n\nconst defaultOptions = {\n  method: 'POST',\n};\n\nexport const fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions,\n};\n\nexport const throwServerError = (response, result, message) => {\n  const error = new Error(message) as ServerError;\n\n  error.name = 'ServerError';\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n\n  throw error;\n};\n\n//TODO: when conditional types come in ts 2.8, operations should be a generic type that extends Operation | Array<Operation>\nexport const parseAndCheckHttpResponse = operations => (response: Response) => {\n  return (\n    response\n      .text()\n      .then(bodyText => {\n        try {\n          return JSON.parse(bodyText);\n        } catch (err) {\n          const parseError = err as ServerParseError;\n          parseError.name = 'ServerParseError';\n          parseError.response = response;\n          parseError.statusCode = response.status;\n          parseError.bodyText = bodyText;\n          return Promise.reject(parseError);\n        }\n      })\n      //TODO: when conditional types come out then result should be T extends Array ? Array<FetchResult> : FetchResult\n      .then((result: any) => {\n        if (response.status >= 300) {\n          //Network error\n          throwServerError(\n            response,\n            result,\n            `Response not successful: Received status code ${response.status}`,\n          );\n        }\n        //TODO should really error per response in a Batch based on properties\n        //    - could be done in a validation link\n        if (\n          !Array.isArray(result) &&\n          !result.hasOwnProperty('data') &&\n          !result.hasOwnProperty('errors')\n        ) {\n          //Data error\n          throwServerError(\n            response,\n            result,\n            `Server response was missing for query '${\n              Array.isArray(operations)\n                ? operations.map(op => op.operationName)\n                : operations.operationName\n            }'.`,\n          );\n        }\n        return result;\n      })\n  );\n};\n\nexport const checkFetcher = (fetcher: WindowOrWorkerGlobalScope['fetch']) => {\n  if (!fetcher && typeof fetch === 'undefined') {\n    let library: string = 'unfetch';\n    if (typeof window === 'undefined') library = 'node-fetch';\n    throw new InvariantError(`\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\nyour environment like https://www.npmjs.com/package/${library}.\n\nFor example:\nimport fetch from '${library}';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });`);\n  }\n};\n\nexport const createSignalIfSupported = () => {\n  if (typeof AbortController === 'undefined')\n    return { controller: false, signal: false };\n\n  const controller = new AbortController();\n  const signal = controller.signal;\n  return { controller, signal };\n};\n\nexport const selectHttpOptionsAndBody = (\n  operation: Operation,\n  fallbackConfig: HttpConfig,\n  ...configs: Array<HttpConfig>\n) => {\n  let options: HttpConfig & Record<string, any> = {\n    ...fallbackConfig.options,\n    headers: fallbackConfig.headers,\n    credentials: fallbackConfig.credentials,\n  };\n  let http: HttpQueryOptions = fallbackConfig.http;\n\n  /*\n   * use the rest of the configs to populate the options\n   * configs later in the list will overwrite earlier fields\n   */\n  configs.forEach(config => {\n    options = {\n      ...options,\n      ...config.options,\n      headers: {\n        ...options.headers,\n        ...config.headers,\n      },\n    };\n    if (config.credentials) options.credentials = config.credentials;\n\n    http = {\n      ...http,\n      ...config.http,\n    };\n  });\n\n  //The body depends on the http options\n  const { operationName, extensions, variables, query } = operation;\n  const body: Body = { operationName, variables };\n\n  if (http.includeExtensions) (body as any).extensions = extensions;\n\n  // not sending the query (i.e persisted queries)\n  if (http.includeQuery) (body as any).query = print(query);\n\n  return {\n    options,\n    body,\n  };\n};\n\nexport const serializeFetchParameter = (p, label) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    const parseError = new InvariantError(\n      `Network request failed. ${label} is not serializable: ${e.message}`,\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n\n//selects \"/graphql\" by default\nexport const selectURI = (\n  operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n","import { isTest, IdValue } from 'apollo-utilities';\nimport { invariant } from 'ts-invariant';\n\nimport {\n  ReadStoreContext,\n  FragmentMatcherInterface,\n  PossibleTypesMap,\n  IntrospectionResultData,\n} from './types';\n\nlet haveWarned = false;\n\nfunction shouldWarn() {\n  const answer = !haveWarned;\n  /* istanbul ignore if */\n  if (!isTest()) {\n    haveWarned = true;\n  }\n  return answer;\n}\n\n/**\n * This fragment matcher is very basic and unable to match union or interface type conditions\n */\nexport class HeuristicFragmentMatcher implements FragmentMatcherInterface {\n  constructor() {\n    // do nothing\n  }\n\n  public ensureReady() {\n    return Promise.resolve();\n  }\n\n  public canBypassInit() {\n    return true; // we don't need to initialize this fragment matcher.\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ): boolean | 'heuristic' {\n    const obj = context.store.get(idValue.id);\n    const isRootQuery = idValue.id === 'ROOT_QUERY';\n\n    if (!obj) {\n      // https://github.com/apollographql/apollo-client/pull/3507\n      return isRootQuery;\n    }\n\n    const { __typename = isRootQuery && 'Query' } = obj;\n\n    if (!__typename) {\n      if (shouldWarn()) {\n        invariant.warn(`You're using fragments in your queries, but either don't have the addTypename:\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\n   can accurately match fragments.`);\n        invariant.warn(\n          'Could not find __typename on Fragment ',\n          typeCondition,\n          obj,\n        );\n        invariant.warn(\n          `DEPRECATION WARNING: using fragments without __typename is unsupported behavior ` +\n            `and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.`,\n        );\n      }\n\n      return 'heuristic';\n    }\n\n    if (__typename === typeCondition) {\n      return true;\n    }\n\n    // At this point we don't know if this fragment should match or not. It's\n    // either:\n    //\n    // 1. (GOOD) A fragment on a matching interface or union.\n    // 2. (BAD) A fragment on a non-matching concrete type or interface or union.\n    //\n    // If it's 2, we don't want it to match. If it's 1, we want it to match. We\n    // can't tell the difference, so we warn the user, but still try to match\n    // it (for backwards compatibility reasons). This unfortunately means that\n    // using the `HeuristicFragmentMatcher` with unions and interfaces is\n    // very unreliable. This will be addressed in a future major version of\n    // Apollo Client, but for now the recommendation is to use the\n    // `IntrospectionFragmentMatcher` when working with unions/interfaces.\n\n    if (shouldWarn()) {\n      invariant.error(\n        'You are using the simple (heuristic) fragment matcher, but your ' +\n          'queries contain union or interface types. Apollo Client will not be ' +\n          'able to accurately map fragments. To make this error go away, use ' +\n          'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n          'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher',\n      );\n    }\n\n    return 'heuristic';\n  }\n}\n\nexport class IntrospectionFragmentMatcher implements FragmentMatcherInterface {\n  private isReady: boolean;\n  private possibleTypesMap: PossibleTypesMap;\n\n  constructor(options?: {\n    introspectionQueryResultData?: IntrospectionResultData;\n  }) {\n    if (options && options.introspectionQueryResultData) {\n      this.possibleTypesMap = this.parseIntrospectionResult(\n        options.introspectionQueryResultData,\n      );\n      this.isReady = true;\n    } else {\n      this.isReady = false;\n    }\n\n    this.match = this.match.bind(this);\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ) {\n    invariant(\n      this.isReady,\n      'FragmentMatcher.match() was called before FragmentMatcher.init()',\n    );\n\n    const obj = context.store.get(idValue.id);\n    const isRootQuery = idValue.id === 'ROOT_QUERY';\n\n    if (!obj) {\n      // https://github.com/apollographql/apollo-client/pull/4620\n      return isRootQuery;\n    }\n\n    const { __typename = isRootQuery && 'Query' } = obj;\n\n    invariant(\n      __typename,\n      `Cannot match fragment because __typename property is missing: ${JSON.stringify(\n        obj,\n      )}`,\n    );\n\n    if (__typename === typeCondition) {\n      return true;\n    }\n\n    const implementingTypes = this.possibleTypesMap[typeCondition];\n    if (\n      __typename &&\n      implementingTypes &&\n      implementingTypes.indexOf(__typename) > -1\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private parseIntrospectionResult(\n    introspectionResultData: IntrospectionResultData,\n  ): PossibleTypesMap {\n    const typeMap: PossibleTypesMap = {};\n    introspectionResultData.__schema.types.forEach(type => {\n      if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n        typeMap[type.name] = type.possibleTypes.map(\n          implementingType => implementingType.name,\n        );\n      }\n    });\n    return typeMap;\n  }\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\nimport { wrap, OptimisticWrapperFunction } from 'optimism';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport class DepTrackingCache implements NormalizedCache {\n  // Wrapper function produced by the optimism library, used to depend on\n  // dataId strings, for easy invalidation of specific IDs.\n  private depend: OptimisticWrapperFunction<[string], StoreObject | undefined>;\n\n  constructor(private data: NormalizedCacheObject = Object.create(null)) {\n    this.depend = wrap((dataId: string) => this.data[dataId], {\n      disposable: true,\n      makeCacheKey(dataId: string) {\n        return dataId;\n      },\n    });\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return this.data;\n  }\n\n  public get(dataId: string): StoreObject {\n    this.depend(dataId);\n    return this.data[dataId]!;\n  }\n\n  public set(dataId: string, value?: StoreObject) {\n    const oldValue = this.data[dataId];\n    if (value !== oldValue) {\n      this.data[dataId] = value;\n      this.depend.dirty(dataId);\n    }\n  }\n\n  public delete(dataId: string): void {\n    if (hasOwn.call(this.data, dataId)) {\n      delete this.data[dataId];\n      this.depend.dirty(dataId);\n    }\n  }\n\n  public clear(): void {\n    this.replace(null);\n  }\n\n  public replace(newData: NormalizedCacheObject | null): void {\n    if (newData) {\n      Object.keys(newData).forEach(dataId => {\n        this.set(dataId, newData[dataId]);\n      });\n      Object.keys(this.data).forEach(dataId => {\n        if (!hasOwn.call(newData, dataId)) {\n          this.delete(dataId);\n        }\n      });\n    } else {\n      Object.keys(this.data).forEach(dataId => {\n        this.delete(dataId);\n      });\n    }\n  }\n}\n\nexport function defaultNormalizedCacheFactory(\n  seed?: NormalizedCacheObject,\n): NormalizedCache {\n  return new DepTrackingCache(seed);\n}\n","import {\n  argumentsObjectFromField,\n  assign,\n  canUseWeakMap,\n  createFragmentMap,\n  DirectiveInfo,\n  FragmentMap,\n  getDefaultValues,\n  getDirectiveInfoFromField,\n  getFragmentDefinitions,\n  getMainDefinition,\n  getQueryDefinition,\n  getStoreKeyName,\n  IdValue,\n  isEqual,\n  isField,\n  isIdValue,\n  isInlineFragment,\n  isJsonValue,\n  maybeDeepFreeze,\n  mergeDeepArray,\n  resultKeyNameFromField,\n  shouldInclude,\n  StoreValue,\n  toIdValue,\n} from 'apollo-utilities';\n\nimport { Cache } from 'apollo-cache';\n\nimport {\n  ReadStoreContext,\n  DiffQueryAgainstStoreOptions,\n  ReadQueryOptions,\n  StoreObject,\n} from './types';\n\nimport {\n  DocumentNode,\n  FieldNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n  SelectionSetNode,\n} from 'graphql';\n\nimport { wrap, KeyTrie } from 'optimism';\nimport { DepTrackingCache } from './depTrackingCache';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: ReadStoreContext,\n) => boolean | 'heuristic';\n\ntype ExecContext = {\n  query: DocumentNode;\n  fragmentMap: FragmentMap;\n  contextValue: ReadStoreContext;\n  variableValues: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n};\n\ntype ExecInfo = {\n  resultKey: string;\n  directives: DirectiveInfo;\n};\n\nexport type ExecResultMissingField = {\n  object: StoreObject;\n  fieldName: string;\n  tolerable: boolean;\n};\n\nexport type ExecResult<R = any> = {\n  result: R;\n  // Empty array if no missing fields encountered while computing result.\n  missing?: ExecResultMissingField[];\n};\n\ntype ExecStoreQueryOptions = {\n  query: DocumentNode;\n  rootValue: IdValue;\n  contextValue: ReadStoreContext;\n  variableValues: VariableMap;\n  // Default matcher always matches all fragments\n  fragmentMatcher?: FragmentMatcher;\n};\n\ntype ExecSelectionSetOptions = {\n  selectionSet: SelectionSetNode;\n  rootValue: any;\n  execContext: ExecContext;\n};\n\ntype ExecSubSelectedArrayOptions = {\n  field: FieldNode;\n  array: any[];\n  execContext: ExecContext;\n};\n\nexport interface StoreReaderConfig {\n  cacheKeyRoot?: KeyTrie<object>;\n  freezeResults?: boolean;\n}\n\nexport class StoreReader {\n  private freezeResults: boolean;\n\n  constructor({\n    cacheKeyRoot = new KeyTrie<object>(canUseWeakMap),\n    freezeResults = false,\n  }: StoreReaderConfig = {}) {\n    const {\n      executeStoreQuery,\n      executeSelectionSet,\n      executeSubSelectedArray,\n    } = this;\n\n    this.freezeResults = freezeResults;\n\n    this.executeStoreQuery = wrap((options: ExecStoreQueryOptions) => {\n      return executeStoreQuery.call(this, options);\n    }, {\n      makeCacheKey({\n        query,\n        rootValue,\n        contextValue,\n        variableValues,\n        fragmentMatcher,\n      }: ExecStoreQueryOptions) {\n        // The result of executeStoreQuery can be safely cached only if the\n        // underlying store is capable of tracking dependencies and invalidating\n        // the cache when relevant data have changed.\n        if (contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(\n            contextValue.store,\n            query,\n            fragmentMatcher,\n            JSON.stringify(variableValues),\n            rootValue.id,\n          );\n        }\n      }\n    });\n\n    this.executeSelectionSet = wrap((options: ExecSelectionSetOptions) => {\n      return executeSelectionSet.call(this, options);\n    }, {\n      makeCacheKey({\n        selectionSet,\n        rootValue,\n        execContext,\n      }: ExecSelectionSetOptions) {\n        if (execContext.contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(\n            execContext.contextValue.store,\n            selectionSet,\n            execContext.fragmentMatcher,\n            JSON.stringify(execContext.variableValues),\n            rootValue.id,\n          );\n        }\n      }\n    });\n\n    this.executeSubSelectedArray = wrap((options: ExecSubSelectedArrayOptions) => {\n      return executeSubSelectedArray.call(this, options);\n    }, {\n      makeCacheKey({ field, array, execContext }) {\n        if (execContext.contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(\n            execContext.contextValue.store,\n            field,\n            array,\n            JSON.stringify(execContext.variableValues),\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Resolves the result of a query solely from the store (i.e. never hits the server).\n   *\n   * @param {Store} store The {@link NormalizedCache} used by Apollo for the `data` portion of the\n   * store.\n   *\n   * @param {DocumentNode} query The query document to resolve from the data available in the store.\n   *\n   * @param {Object} [variables] A map from the name of a variable to its value. These variables can\n   * be referenced by the query document.\n   *\n   * @param {any} previousResult The previous result returned by this function for the same query.\n   * If nothing in the store changed since that previous result then values from the previous result\n   * will be returned to preserve referential equality.\n   */\n  public readQueryFromStore<QueryType>(\n    options: ReadQueryOptions,\n  ): QueryType | undefined {\n    return this.diffQueryAgainstStore<QueryType>({\n      ...options,\n      returnPartialData: false,\n    }).result;\n  }\n\n  /**\n   * Given a store and a query, return as much of the result as possible and\n   * identify if any data was missing from the store.\n   * @param  {DocumentNode} query A parsed GraphQL query document\n   * @param  {Store} store The Apollo Client store object\n   * @param  {any} previousResult The previous result returned by this function for the same query\n   * @return {result: Object, complete: [boolean]}\n   */\n  public diffQueryAgainstStore<T>({\n    store,\n    query,\n    variables,\n    previousResult,\n    returnPartialData = true,\n    rootId = 'ROOT_QUERY',\n    fragmentMatcherFunction,\n    config,\n  }: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n    // Throw the right validation error by trying to find a query in the document\n    const queryDefinition = getQueryDefinition(query);\n\n    variables = assign({}, getDefaultValues(queryDefinition), variables);\n\n    const context: ReadStoreContext = {\n      // Global settings\n      store,\n      dataIdFromObject: config && config.dataIdFromObject,\n      cacheRedirects: (config && config.cacheRedirects) || {},\n    };\n\n    const execResult = this.executeStoreQuery({\n      query,\n      rootValue: {\n        type: 'id',\n        id: rootId,\n        generated: true,\n        typename: 'Query',\n      },\n      contextValue: context,\n      variableValues: variables,\n      fragmentMatcher: fragmentMatcherFunction,\n    });\n\n    const hasMissingFields =\n      execResult.missing && execResult.missing.length > 0;\n\n    if (hasMissingFields && ! returnPartialData) {\n      execResult.missing!.forEach(info => {\n        if (info.tolerable) return;\n        throw new InvariantError(\n          `Can't find field ${info.fieldName} on object ${JSON.stringify(\n            info.object,\n            null,\n            2,\n          )}.`,\n        );\n      });\n    }\n\n    if (previousResult) {\n      if (isEqual(previousResult, execResult.result)) {\n        execResult.result = previousResult;\n      }\n    }\n\n    return {\n      result: execResult.result,\n      complete: !hasMissingFields,\n    };\n  }\n\n  /**\n   * Based on graphql function from graphql-js:\n   *\n   * graphql(\n   *   schema: GraphQLSchema,\n   *   requestString: string,\n   *   rootValue?: ?any,\n   *   contextValue?: ?any,\n   *   variableValues?: ?{[key: string]: any},\n   *   operationName?: ?string\n   * ): Promise<GraphQLResult>\n   *\n   * The default export as of graphql-anywhere is sync as of 4.0,\n   * but below is an exported alternative that is async.\n   * In the 5.0 version, this will be the only export again\n   * and it will be async\n   *\n   */\n  private executeStoreQuery({\n    query,\n    rootValue,\n    contextValue,\n    variableValues,\n    // Default matcher always matches all fragments\n    fragmentMatcher = defaultFragmentMatcher,\n  }: ExecStoreQueryOptions): ExecResult {\n    const mainDefinition = getMainDefinition(query);\n    const fragments = getFragmentDefinitions(query);\n    const fragmentMap = createFragmentMap(fragments);\n    const execContext: ExecContext = {\n      query,\n      fragmentMap,\n      contextValue,\n      variableValues,\n      fragmentMatcher,\n    };\n\n    return this.executeSelectionSet({\n      selectionSet: mainDefinition.selectionSet,\n      rootValue,\n      execContext,\n    });\n  }\n\n  private executeSelectionSet({\n    selectionSet,\n    rootValue,\n    execContext,\n  }: ExecSelectionSetOptions): ExecResult {\n    const { fragmentMap, contextValue, variableValues: variables } = execContext;\n    const finalResult: ExecResult = { result: null };\n\n    const objectsToMerge: { [key: string]: any }[] = [];\n\n    const object: StoreObject = contextValue.store.get(rootValue.id);\n\n    const typename =\n      (object && object.__typename) ||\n      (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n      void 0;\n\n    function handleMissing<T>(result: ExecResult<T>): T {\n      if (result.missing) {\n        finalResult.missing = finalResult.missing || [];\n        finalResult.missing.push(...result.missing);\n      }\n      return result.result;\n    }\n\n    selectionSet.selections.forEach(selection => {\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely\n        return;\n      }\n\n      if (isField(selection)) {\n        const fieldResult = handleMissing(\n          this.executeField(object, typename, selection, execContext),\n        );\n\n        if (typeof fieldResult !== 'undefined') {\n          objectsToMerge.push({\n            [resultKeyNameFromField(selection)]: fieldResult,\n          });\n        }\n\n      } else {\n        let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n        if (isInlineFragment(selection)) {\n          fragment = selection;\n        } else {\n          // This is a named fragment\n          fragment = fragmentMap[selection.name.value];\n\n          if (!fragment) {\n            throw new InvariantError(`No fragment named ${selection.name.value}`);\n          }\n        }\n\n        const typeCondition =\n          fragment.typeCondition && fragment.typeCondition.name.value;\n\n        const match =\n          !typeCondition ||\n          execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n\n        if (match) {\n          let fragmentExecResult = this.executeSelectionSet({\n            selectionSet: fragment.selectionSet,\n            rootValue,\n            execContext,\n          });\n\n          if (match === 'heuristic' && fragmentExecResult.missing) {\n            fragmentExecResult = {\n              ...fragmentExecResult,\n              missing: fragmentExecResult.missing.map(info => {\n                return { ...info, tolerable: true };\n              }),\n            };\n          }\n\n          objectsToMerge.push(handleMissing(fragmentExecResult));\n        }\n      }\n    });\n\n    // Perform a single merge at the end so that we can avoid making more\n    // defensive shallow copies than necessary.\n    finalResult.result = mergeDeepArray(objectsToMerge);\n\n    if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n      Object.freeze(finalResult.result);\n    }\n\n    return finalResult;\n  }\n\n  private executeField(\n    object: StoreObject,\n    typename: string | void,\n    field: FieldNode,\n    execContext: ExecContext,\n  ): ExecResult {\n    const { variableValues: variables, contextValue } = execContext;\n    const fieldName = field.name.value;\n    const args = argumentsObjectFromField(field, variables);\n\n    const info: ExecInfo = {\n      resultKey: resultKeyNameFromField(field),\n      directives: getDirectiveInfoFromField(field, variables),\n    };\n\n    const readStoreResult = readStoreResolver(\n      object,\n      typename,\n      fieldName,\n      args,\n      contextValue,\n      info,\n    );\n\n    if (Array.isArray(readStoreResult.result)) {\n      return this.combineExecResults(\n        readStoreResult,\n        this.executeSubSelectedArray({\n          field,\n          array: readStoreResult.result,\n          execContext,\n        }),\n      );\n    }\n\n    // Handle all scalar types here\n    if (!field.selectionSet) {\n      assertSelectionSetForIdValue(field, readStoreResult.result);\n      if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n        maybeDeepFreeze(readStoreResult);\n      }\n      return readStoreResult;\n    }\n\n    // From here down, the field has a selection set, which means it's trying to\n    // query a GraphQLObjectType\n    if (readStoreResult.result == null) {\n      // Basically any field in a GraphQL response can be null, or missing\n      return readStoreResult;\n    }\n\n    // Returned value is an object, and the query has a sub-selection. Recurse.\n    return this.combineExecResults(\n      readStoreResult,\n      this.executeSelectionSet({\n        selectionSet: field.selectionSet,\n        rootValue: readStoreResult.result,\n        execContext,\n      }),\n    );\n  }\n\n  private combineExecResults<T>(\n    ...execResults: ExecResult<T>[]\n  ): ExecResult<T> {\n    let missing: ExecResultMissingField[] | undefined;\n    execResults.forEach(execResult => {\n      if (execResult.missing) {\n        missing = missing || [];\n        missing.push(...execResult.missing);\n      }\n    });\n    return {\n      result: execResults.pop()!.result,\n      missing,\n    };\n  }\n\n  private executeSubSelectedArray({\n    field,\n    array,\n    execContext,\n  }: ExecSubSelectedArrayOptions): ExecResult {\n    let missing: ExecResultMissingField[] | undefined;\n\n    function handleMissing<T>(childResult: ExecResult<T>): T {\n      if (childResult.missing) {\n        missing = missing || [];\n        missing.push(...childResult.missing);\n      }\n\n      return childResult.result;\n    }\n\n    array = array.map(item => {\n      // null value in array\n      if (item === null) {\n        return null;\n      }\n\n      // This is a nested array, recurse\n      if (Array.isArray(item)) {\n        return handleMissing(this.executeSubSelectedArray({\n          field,\n          array: item,\n          execContext,\n        }));\n      }\n\n      // This is an object, run the selection set on it\n      if (field.selectionSet) {\n        return handleMissing(this.executeSelectionSet({\n          selectionSet: field.selectionSet,\n          rootValue: item,\n          execContext,\n        }));\n      }\n\n      assertSelectionSetForIdValue(field, item);\n\n      return item;\n    });\n\n    if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n      Object.freeze(array);\n    }\n\n    return { result: array, missing };\n  }\n}\n\nfunction assertSelectionSetForIdValue(\n  field: FieldNode,\n  value: any,\n) {\n  if (!field.selectionSet && isIdValue(value)) {\n    throw new InvariantError(\n      `Missing selection set for object of type ${\n        value.typename\n      } returned for query field ${field.name.value}`\n    );\n  }\n}\n\nfunction defaultFragmentMatcher() {\n  return true;\n}\n\nexport function assertIdValue(idValue: IdValue) {\n  invariant(isIdValue(idValue), `\\\nEncountered a sub-selection on the query, but the store doesn't have \\\nan object reference. This should never happen during normal use unless you have custom code \\\nthat is directly manipulating the store; please file an issue.`);\n}\n\nfunction readStoreResolver(\n  object: StoreObject,\n  typename: string | void,\n  fieldName: string,\n  args: any,\n  context: ReadStoreContext,\n  { resultKey, directives }: ExecInfo,\n): ExecResult<StoreValue> {\n  let storeKeyName = fieldName;\n  if (args || directives) {\n    // We happen to know here that getStoreKeyName returns its first\n    // argument unmodified if there are no args or directives, so we can\n    // avoid calling the function at all in that case, as a small but\n    // important optimization to this frequently executed code.\n    storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n  }\n\n  let fieldValue: StoreValue | void = void 0;\n\n  if (object) {\n    fieldValue = object[storeKeyName];\n\n    if (\n      typeof fieldValue === 'undefined' &&\n      context.cacheRedirects &&\n      typeof typename === 'string'\n    ) {\n      // Look for the type in the custom resolver map\n      const type = context.cacheRedirects[typename];\n      if (type) {\n        // Look for the field in the custom resolver map\n        const resolver = type[fieldName];\n        if (resolver) {\n          fieldValue = resolver(object, args, {\n            getCacheKey(storeObj: StoreObject) {\n              const id = context.dataIdFromObject!(storeObj);\n              return id && toIdValue({\n                id,\n                typename: storeObj.__typename,\n              });\n            },\n          });\n        }\n      }\n    }\n  }\n\n  if (typeof fieldValue === 'undefined') {\n    return {\n      result: fieldValue,\n      missing: [{\n        object,\n        fieldName: storeKeyName,\n        tolerable: false,\n      }],\n    };\n  }\n\n  if (isJsonValue(fieldValue)) {\n    fieldValue = fieldValue.json;\n  }\n\n  return {\n    result: fieldValue,\n  };\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\n\nexport class ObjectCache implements NormalizedCache {\n  constructor(protected data: NormalizedCacheObject = Object.create(null)) {}\n\n  public toObject() {\n    return this.data;\n  }\n\n  public get(dataId: string) {\n    return this.data[dataId]!;\n  }\n\n  public set(dataId: string, value: StoreObject) {\n    this.data[dataId] = value;\n  }\n\n  public delete(dataId: string) {\n    this.data[dataId] = void 0;\n  }\n\n  public clear() {\n    this.data = Object.create(null);\n  }\n\n  public replace(newData: NormalizedCacheObject) {\n    this.data = newData || Object.create(null);\n  }\n}\n\nexport function defaultNormalizedCacheFactory(\n  seed?: NormalizedCacheObject,\n): NormalizedCache {\n  return new ObjectCache(seed);\n}\n","import {\n  SelectionSetNode,\n  FieldNode,\n  DocumentNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n} from 'graphql';\nimport { FragmentMatcher } from './readFromStore';\n\nimport {\n  assign,\n  createFragmentMap,\n  FragmentMap,\n  getDefaultValues,\n  getFragmentDefinitions,\n  getOperationDefinition,\n  IdValue,\n  isField,\n  isIdValue,\n  isInlineFragment,\n  isProduction,\n  resultKeyNameFromField,\n  shouldInclude,\n  storeKeyNameFromField,\n  StoreValue,\n  toIdValue,\n  isEqual,\n} from 'apollo-utilities';\n\nimport { invariant } from 'ts-invariant';\n\nimport { ObjectCache } from './objectCache';\nimport { defaultNormalizedCacheFactory } from './depTrackingCache';\n\nimport {\n  IdGetter,\n  NormalizedCache,\n  ReadStoreContext,\n  StoreObject,\n} from './types';\n\nexport class WriteError extends Error {\n  public type = 'WriteError';\n}\n\nexport function enhanceErrorWithDocument(error: Error, document: DocumentNode) {\n  // XXX A bit hacky maybe ...\n  const enhancedError = new WriteError(\n    `Error writing result to store for query:\\n ${JSON.stringify(document)}`,\n  );\n  enhancedError.message += '\\n' + error.message;\n  enhancedError.stack = error.stack;\n  return enhancedError;\n}\n\nexport type WriteContext = {\n  readonly store: NormalizedCache;\n  readonly processedData?: { [x: string]: FieldNode[] };\n  readonly variables?: any;\n  readonly dataIdFromObject?: IdGetter;\n  readonly fragmentMap?: FragmentMap;\n  readonly fragmentMatcherFunction?: FragmentMatcher;\n};\n\nexport class StoreWriter {\n  /**\n   * Writes the result of a query to the store.\n   *\n   * @param result The result object returned for the query document.\n   *\n   * @param query The query document whose result we are writing to the store.\n   *\n   * @param store The {@link NormalizedCache} used by Apollo for the `data` portion of the store.\n   *\n   * @param variables A map from the name of a variable to its value. These variables can be\n   * referenced by the query document.\n   *\n   * @param dataIdFromObject A function that returns an object identifier given a particular result\n   * object. See the store documentation for details and an example of this function.\n   *\n   * @param fragmentMatcherFunction A function to use for matching fragment conditions in GraphQL documents\n   */\n  public writeQueryToStore({\n    query,\n    result,\n    store = defaultNormalizedCacheFactory(),\n    variables,\n    dataIdFromObject,\n    fragmentMatcherFunction,\n  }: {\n    query: DocumentNode;\n    result: Object;\n    store?: NormalizedCache;\n    variables?: Object;\n    dataIdFromObject?: IdGetter;\n    fragmentMatcherFunction?: FragmentMatcher;\n  }): NormalizedCache {\n    return this.writeResultToStore({\n      dataId: 'ROOT_QUERY',\n      result,\n      document: query,\n      store,\n      variables,\n      dataIdFromObject,\n      fragmentMatcherFunction,\n    });\n  }\n\n  public writeResultToStore({\n    dataId,\n    result,\n    document,\n    store = defaultNormalizedCacheFactory(),\n    variables,\n    dataIdFromObject,\n    fragmentMatcherFunction,\n  }: {\n    dataId: string;\n    result: any;\n    document: DocumentNode;\n    store?: NormalizedCache;\n    variables?: Object;\n    dataIdFromObject?: IdGetter;\n    fragmentMatcherFunction?: FragmentMatcher;\n  }): NormalizedCache {\n    // XXX TODO REFACTOR: this is a temporary workaround until query normalization is made to work with documents.\n    const operationDefinition = getOperationDefinition(document)!;\n\n    try {\n      return this.writeSelectionSetToStore({\n        result,\n        dataId,\n        selectionSet: operationDefinition.selectionSet,\n        context: {\n          store,\n          processedData: {},\n          variables: assign(\n            {},\n            getDefaultValues(operationDefinition),\n            variables,\n          ),\n          dataIdFromObject,\n          fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n          fragmentMatcherFunction,\n        },\n      });\n    } catch (e) {\n      throw enhanceErrorWithDocument(e, document);\n    }\n  }\n\n  public writeSelectionSetToStore({\n    result,\n    dataId,\n    selectionSet,\n    context,\n  }: {\n    dataId: string;\n    result: any;\n    selectionSet: SelectionSetNode;\n    context: WriteContext;\n  }): NormalizedCache {\n    const { variables, store, fragmentMap } = context;\n\n    selectionSet.selections.forEach(selection => {\n      if (!shouldInclude(selection, variables)) {\n        return;\n      }\n\n      if (isField(selection)) {\n        const resultFieldKey: string = resultKeyNameFromField(selection);\n        const value: any = result[resultFieldKey];\n\n        if (typeof value !== 'undefined') {\n          this.writeFieldToStore({\n            dataId,\n            value,\n            field: selection,\n            context,\n          });\n        } else {\n          let isDefered = false;\n          let isClient = false;\n          if (selection.directives && selection.directives.length) {\n            // If this is a defered field we don't need to throw / warn.\n            isDefered = selection.directives.some(\n              directive => directive.name && directive.name.value === 'defer',\n            );\n\n            // When using the @client directive, it might be desirable in\n            // some cases to want to write a selection set to the store,\n            // without having all of the selection set values available.\n            // This is because the @client field values might have already\n            // been written to the cache separately (e.g. via Apollo\n            // Cache's `writeData` capabilities). Because of this, we'll\n            // skip the missing field warning for fields with @client\n            // directives.\n            isClient = selection.directives.some(\n              directive => directive.name && directive.name.value === 'client',\n            );\n          }\n\n          if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n            // XXX We'd like to throw an error, but for backwards compatibility's sake\n            // we just print a warning for the time being.\n            //throw new WriteError(`Missing field ${resultFieldKey} in ${JSON.stringify(result, null, 2).substring(0, 100)}`);\n            invariant.warn(\n              `Missing field ${resultFieldKey} in ${JSON.stringify(\n                result,\n                null,\n                2,\n              ).substring(0, 100)}`,\n            );\n          }\n        }\n      } else {\n        // This is not a field, so it must be a fragment, either inline or named\n        let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n        if (isInlineFragment(selection)) {\n          fragment = selection;\n        } else {\n          // Named fragment\n          fragment = (fragmentMap || {})[selection.name.value];\n          invariant(fragment, `No fragment named ${selection.name.value}.`);\n        }\n\n        let matches = true;\n        if (context.fragmentMatcherFunction && fragment.typeCondition) {\n          // TODO we need to rewrite the fragment matchers for this to work properly and efficiently\n          // Right now we have to pretend that we're passing in an idValue and that there's a store\n          // on the context.\n          const id = dataId || 'self';\n          const idValue = toIdValue({ id, typename: undefined });\n          const fakeContext: ReadStoreContext = {\n            // NOTE: fakeContext always uses ObjectCache\n            // since this is only to ensure the return value of 'matches'\n            store: new ObjectCache({ [id]: result }),\n            cacheRedirects: {},\n          };\n          const match = context.fragmentMatcherFunction(\n            idValue,\n            fragment.typeCondition.name.value,\n            fakeContext,\n          );\n          if (!isProduction() && match === 'heuristic') {\n            invariant.error('WARNING: heuristic fragment matching going on!');\n          }\n          matches = !!match;\n        }\n\n        if (matches) {\n          this.writeSelectionSetToStore({\n            result,\n            selectionSet: fragment.selectionSet,\n            dataId,\n            context,\n          });\n        }\n      }\n    });\n\n    return store;\n  }\n\n  private writeFieldToStore({\n    field,\n    value,\n    dataId,\n    context,\n  }: {\n    field: FieldNode;\n    value: any;\n    dataId: string;\n    context: WriteContext;\n  }) {\n    const { variables, dataIdFromObject, store } = context;\n\n    let storeValue: StoreValue;\n    let storeObject: StoreObject;\n\n    const storeFieldName: string = storeKeyNameFromField(field, variables);\n\n    // If this is a scalar value...\n    if (!field.selectionSet || value === null) {\n      storeValue =\n        value != null && typeof value === 'object'\n          ? // If the scalar value is a JSON blob, we have to \"escape\" it so it can’t pretend to be\n            // an id.\n            { type: 'json', json: value }\n          : // Otherwise, just store the scalar directly in the store.\n            value;\n    } else if (Array.isArray(value)) {\n      const generatedId = `${dataId}.${storeFieldName}`;\n\n      storeValue = this.processArrayValue(\n        value,\n        generatedId,\n        field.selectionSet,\n        context,\n      );\n    } else {\n      // It's an object\n      let valueDataId = `${dataId}.${storeFieldName}`;\n      let generated = true;\n\n      // We only prepend the '$' if the valueDataId isn't already a generated\n      // id.\n      if (!isGeneratedId(valueDataId)) {\n        valueDataId = '$' + valueDataId;\n      }\n\n      if (dataIdFromObject) {\n        const semanticId = dataIdFromObject(value);\n\n        // We throw an error if the first character of the id is '$. This is\n        // because we use that character to designate an Apollo-generated id\n        // and we use the distinction between user-desiginated and application-provided\n        // ids when managing overwrites.\n        invariant(\n          !semanticId || !isGeneratedId(semanticId),\n          'IDs returned by dataIdFromObject cannot begin with the \"$\" character.',\n        );\n\n        if (\n          semanticId ||\n          (typeof semanticId === 'number' && semanticId === 0)\n        ) {\n          valueDataId = semanticId;\n          generated = false;\n        }\n      }\n\n      if (!isDataProcessed(valueDataId, field, context.processedData)) {\n        this.writeSelectionSetToStore({\n          dataId: valueDataId,\n          result: value,\n          selectionSet: field.selectionSet,\n          context,\n        });\n      }\n\n      // We take the id and escape it (i.e. wrap it with an enclosing object).\n      // This allows us to distinguish IDs from normal scalars.\n      const typename = value.__typename;\n      storeValue = toIdValue({ id: valueDataId, typename }, generated);\n\n      // check if there was a generated id at the location where we're\n      // about to place this new id. If there was, we have to merge the\n      // data from that id with the data we're about to write in the store.\n      storeObject = store.get(dataId);\n      const escapedId =\n        storeObject && (storeObject[storeFieldName] as IdValue | undefined);\n      if (escapedId !== storeValue && isIdValue(escapedId)) {\n        const hadTypename = escapedId.typename !== undefined;\n        const hasTypename = typename !== undefined;\n        const typenameChanged =\n          hadTypename && hasTypename && escapedId.typename !== typename;\n\n        // If there is already a real id in the store and the current id we\n        // are dealing with is generated, we throw an error.\n        // One exception we allow is when the typename has changed, which occurs\n        // when schema defines a union, both with and without an ID in the same place.\n        // checks if we \"lost\" the read id\n        invariant(\n          !generated || escapedId.generated || typenameChanged,\n          `Store error: the application attempted to write an object with no provided id but the store already contains an id of ${\n            escapedId.id\n          } for this object. The selectionSet that was trying to be written is:\\n${\n            JSON.stringify(field)\n          }`,\n        );\n\n        // checks if we \"lost\" the typename\n        invariant(\n          !hadTypename || hasTypename,\n          `Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of ${\n            escapedId.typename\n          } for the object of id ${escapedId.id}. The selectionSet that was trying to be written is:\\n${\n            JSON.stringify(field)\n          }`,\n        );\n\n        if (escapedId.generated) {\n          // We should only merge if it's an object of the same type,\n          // otherwise we should delete the generated object\n          if (typenameChanged) {\n            // Only delete the generated object when the old object was\n            // inlined, and the new object is not. This is indicated by\n            // the old id being generated, and the new id being real.\n            if (!generated) {\n              store.delete(escapedId.id);\n            }\n          } else {\n            mergeWithGenerated(escapedId.id, (storeValue as IdValue).id, store);\n          }\n        }\n      }\n    }\n\n    storeObject = store.get(dataId);\n    if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n      store.set(dataId, {\n        ...storeObject,\n        [storeFieldName]: storeValue,\n      });\n    }\n  }\n\n  private processArrayValue(\n    value: any[],\n    generatedId: string,\n    selectionSet: SelectionSetNode,\n    context: WriteContext,\n  ): any[] {\n    return value.map((item: any, index: any) => {\n      if (item === null) {\n        return null;\n      }\n\n      let itemDataId = `${generatedId}.${index}`;\n\n      if (Array.isArray(item)) {\n        return this.processArrayValue(item, itemDataId, selectionSet, context);\n      }\n\n      let generated = true;\n\n      if (context.dataIdFromObject) {\n        const semanticId = context.dataIdFromObject(item);\n\n        if (semanticId) {\n          itemDataId = semanticId;\n          generated = false;\n        }\n      }\n\n      if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n        this.writeSelectionSetToStore({\n          dataId: itemDataId,\n          result: item,\n          selectionSet,\n          context,\n        });\n      }\n\n      return toIdValue(\n        { id: itemDataId, typename: item.__typename },\n        generated,\n      );\n    });\n  }\n}\n\n// Checks if the id given is an id that was generated by Apollo\n// rather than by dataIdFromObject.\nfunction isGeneratedId(id: string): boolean {\n  return id[0] === '$';\n}\n\nfunction mergeWithGenerated(\n  generatedKey: string,\n  realKey: string,\n  cache: NormalizedCache,\n): boolean {\n  if (generatedKey === realKey) {\n    return false;\n  }\n\n  const generated = cache.get(generatedKey);\n  const real = cache.get(realKey);\n  let madeChanges = false;\n\n  Object.keys(generated).forEach(key => {\n    const value = generated[key];\n    const realValue = real[key];\n\n    if (\n      isIdValue(value) &&\n      isGeneratedId(value.id) &&\n      isIdValue(realValue) &&\n      !isEqual(value, realValue) &&\n      mergeWithGenerated(value.id, realValue.id, cache)\n    ) {\n      madeChanges = true;\n    }\n  });\n\n  cache.delete(generatedKey);\n  const newRealValue = { ...generated, ...real };\n\n  if (isEqual(newRealValue, real)) {\n    return madeChanges;\n  }\n\n  cache.set(realKey, newRealValue);\n  return true;\n}\n\nfunction isDataProcessed(\n  dataId: string,\n  field: FieldNode | SelectionSetNode,\n  processedData?: { [x: string]: (FieldNode | SelectionSetNode)[] },\n): boolean {\n  if (!processedData) {\n    return false;\n  }\n\n  if (processedData[dataId]) {\n    if (processedData[dataId].indexOf(field) >= 0) {\n      return true;\n    } else {\n      processedData[dataId].push(field);\n    }\n  } else {\n    processedData[dataId] = [field];\n  }\n\n  return false;\n}\n","// Make builtins like Map and Set safe to use with non-extensible objects.\nimport './fixPolyfills';\n\nimport { DocumentNode } from 'graphql';\n\nimport { Cache, ApolloCache, Transaction } from 'apollo-cache';\n\nimport { addTypenameToDocument, canUseWeakMap } from 'apollo-utilities';\n\nimport { wrap } from 'optimism';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { HeuristicFragmentMatcher } from './fragmentMatcher';\nimport {\n  ApolloReducerConfig,\n  NormalizedCache,\n  NormalizedCacheObject,\n} from './types';\n\nimport { StoreReader } from './readFromStore';\nimport { StoreWriter } from './writeToStore';\nimport { DepTrackingCache } from './depTrackingCache';\nimport { KeyTrie } from 'optimism';\nimport { ObjectCache } from './objectCache';\n\nexport interface InMemoryCacheConfig extends ApolloReducerConfig {\n  resultCaching?: boolean;\n  freezeResults?: boolean;\n}\n\nconst defaultConfig: InMemoryCacheConfig = {\n  fragmentMatcher: new HeuristicFragmentMatcher(),\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  freezeResults: false,\n};\n\nexport function defaultDataIdFromObject(result: any): string | null {\n  if (result.__typename) {\n    if (result.id !== undefined) {\n      return `${result.__typename}:${result.id}`;\n    }\n    if (result._id !== undefined) {\n      return `${result.__typename}:${result._id}`;\n    }\n  }\n  return null;\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport class OptimisticCacheLayer extends ObjectCache {\n  constructor(\n    public readonly optimisticId: string,\n    // OptimisticCacheLayer objects always wrap some other parent cache, so\n    // this.parent should never be null.\n    public readonly parent: NormalizedCache,\n    public readonly transaction: Transaction<NormalizedCacheObject>,\n  ) {\n    super(Object.create(null));\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return {\n      ...this.parent.toObject(),\n      ...this.data,\n    };\n  }\n\n  // All the other accessor methods of ObjectCache work without knowing about\n  // this.parent, but the get method needs to be overridden to implement the\n  // fallback this.parent.get(dataId) behavior.\n  public get(dataId: string) {\n    return hasOwn.call(this.data, dataId)\n      ? this.data[dataId]\n      : this.parent.get(dataId);\n  }\n}\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  private data: NormalizedCache;\n  private optimisticData: NormalizedCache;\n\n  protected config: InMemoryCacheConfig;\n  private watches = new Set<Cache.WatchOptions>();\n  private addTypename: boolean;\n  private typenameDocumentCache = new Map<DocumentNode, DocumentNode>();\n  private storeReader: StoreReader;\n  private storeWriter: StoreWriter;\n  private cacheKeyRoot = new KeyTrie<object>(canUseWeakMap);\n\n  // Set this while in a transaction to prevent broadcasts...\n  // don't forget to turn it back on!\n  private silenceBroadcast: boolean = false;\n\n  constructor(config: InMemoryCacheConfig = {}) {\n    super();\n    this.config = { ...defaultConfig, ...config };\n\n    // backwards compat\n    if ((this.config as any).customResolvers) {\n      invariant.warn(\n        'customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).customResolvers;\n    }\n\n    if ((this.config as any).cacheResolvers) {\n      invariant.warn(\n        'cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).cacheResolvers;\n    }\n\n    this.addTypename = !!this.config.addTypename;\n\n    // Passing { resultCaching: false } in the InMemoryCache constructor options\n    // will completely disable dependency tracking, which will improve memory\n    // usage but worsen the performance of repeated reads.\n    this.data = this.config.resultCaching\n      ? new DepTrackingCache()\n      : new ObjectCache();\n\n    // When no optimistic writes are currently active, cache.optimisticData ===\n    // cache.data, so there are no additional layers on top of the actual data.\n    // When an optimistic update happens, this.optimisticData will become a\n    // linked list of OptimisticCacheLayer objects that terminates with the\n    // original this.data cache object.\n    this.optimisticData = this.data;\n\n    this.storeWriter = new StoreWriter();\n    this.storeReader = new StoreReader({\n      cacheKeyRoot: this.cacheKeyRoot,\n      freezeResults: config.freezeResults,\n    });\n\n    const cache = this;\n    const { maybeBroadcastWatch } = cache;\n    this.maybeBroadcastWatch = wrap((c: Cache.WatchOptions) => {\n      return maybeBroadcastWatch.call(this, c);\n    }, {\n      makeCacheKey(c: Cache.WatchOptions) {\n        if (c.optimistic) {\n          // If we're reading optimistic data, it doesn't matter if this.data\n          // is a DepTrackingCache, since it will be ignored.\n          return;\n        }\n\n        if (c.previousResult) {\n          // If a previousResult was provided, assume the caller would prefer\n          // to compare the previous data to the new data to determine whether\n          // to broadcast, so we should disable caching by returning here, to\n          // give maybeBroadcastWatch a chance to do that comparison.\n          return;\n        }\n\n        if (cache.data instanceof DepTrackingCache) {\n          // Return a cache key (thus enabling caching) only if we're currently\n          // using a data store that can track cache dependencies.\n          return cache.cacheKeyRoot.lookup(\n            c.query,\n            JSON.stringify(c.variables),\n          );\n        }\n      }\n    });\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    return (optimistic ? this.optimisticData : this.data).toObject();\n  }\n\n  public read<T>(options: Cache.ReadOptions): T | null {\n    if (typeof options.rootId === 'string' &&\n        typeof this.data.get(options.rootId) === 'undefined') {\n      return null;\n    }\n\n    const { fragmentMatcher } = this.config;\n    const fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n\n    return this.storeReader.readQueryFromStore({\n      store: options.optimistic ? this.optimisticData : this.data,\n      query: this.transformDocument(options.query),\n      variables: options.variables,\n      rootId: options.rootId,\n      fragmentMatcherFunction,\n      previousResult: options.previousResult,\n      config: this.config,\n    }) || null;\n  }\n\n  public write(write: Cache.WriteOptions): void {\n    const { fragmentMatcher } = this.config;\n    const fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n\n    this.storeWriter.writeResultToStore({\n      dataId: write.dataId,\n      result: write.result,\n      variables: write.variables,\n      document: this.transformDocument(write.query),\n      store: this.data,\n      dataIdFromObject: this.config.dataIdFromObject,\n      fragmentMatcherFunction,\n    });\n\n    this.broadcastWatches();\n  }\n\n  public diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T> {\n    const { fragmentMatcher } = this.config;\n    const fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n\n    return this.storeReader.diffQueryAgainstStore({\n      store: query.optimistic ? this.optimisticData : this.data,\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      returnPartialData: query.returnPartialData,\n      previousResult: query.previousResult,\n      fragmentMatcherFunction,\n      config: this.config,\n    });\n  }\n\n  public watch(watch: Cache.WatchOptions): () => void {\n    this.watches.add(watch);\n\n    return () => {\n      this.watches.delete(watch);\n    };\n  }\n\n  public evict(query: Cache.EvictOptions): Cache.EvictionResult {\n    throw new InvariantError(`eviction is not implemented on InMemory Cache`);\n  }\n\n  public reset(): Promise<void> {\n    this.data.clear();\n    this.broadcastWatches();\n\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(idToRemove: string) {\n    const toReapply: OptimisticCacheLayer[] = [];\n    let removedCount = 0;\n    let layer = this.optimisticData;\n\n    while (layer instanceof OptimisticCacheLayer) {\n      if (layer.optimisticId === idToRemove) {\n        ++removedCount;\n      } else {\n        toReapply.push(layer);\n      }\n      layer = layer.parent;\n    }\n\n    if (removedCount > 0) {\n      // Reset this.optimisticData to the first non-OptimisticCacheLayer object,\n      // which is almost certainly this.data.\n      this.optimisticData = layer;\n\n      // Reapply the layers whose optimistic IDs do not match the removed ID.\n      while (toReapply.length > 0) {\n        const layer = toReapply.pop()!;\n        this.performTransaction(layer.transaction, layer.optimisticId);\n      }\n\n      this.broadcastWatches();\n    }\n  }\n\n  public performTransaction(\n    transaction: Transaction<NormalizedCacheObject>,\n    // This parameter is not part of the performTransaction signature inherited\n    // from the ApolloCache abstract class, but it's useful because it saves us\n    // from duplicating this implementation in recordOptimisticTransaction.\n    optimisticId?: string,\n  ) {\n    const { data, silenceBroadcast } = this;\n    this.silenceBroadcast = true;\n\n    if (typeof optimisticId === 'string') {\n      // Add a new optimistic layer and temporarily make this.data refer to\n      // that layer for the duration of the transaction.\n      this.data = this.optimisticData = new OptimisticCacheLayer(\n        // Note that there can be multiple layers with the same optimisticId.\n        // When removeOptimistic(id) is called for that id, all matching layers\n        // will be removed, and the remaining layers will be reapplied.\n        optimisticId,\n        this.optimisticData,\n        transaction,\n      );\n    }\n\n    try {\n      transaction(this);\n    } finally {\n      this.silenceBroadcast = silenceBroadcast;\n      this.data = data;\n    }\n\n    // This broadcast does nothing if this.silenceBroadcast is true.\n    this.broadcastWatches();\n  }\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<NormalizedCacheObject>,\n    id: string,\n  ) {\n    return this.performTransaction(transaction, id);\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    if (this.addTypename) {\n      let result = this.typenameDocumentCache.get(document);\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        // If someone calls transformDocument and then mistakenly passes the\n        // result back into an API that also calls transformDocument, make sure\n        // we don't keep creating new query documents.\n        this.typenameDocumentCache.set(result, result);\n      }\n      return result;\n    }\n    return document;\n  }\n\n  protected broadcastWatches() {\n    if (!this.silenceBroadcast) {\n      this.watches.forEach(c => this.maybeBroadcastWatch(c));\n    }\n  }\n\n  // This method is wrapped in the constructor so that it will be called only\n  // if the data that would be broadcast has changed.\n  private maybeBroadcastWatch(c: Cache.WatchOptions) {\n    c.callback(\n      this.diff({\n        query: c.query,\n        variables: c.variables,\n        previousResult: c.previousResult && c.previousResult(),\n        optimistic: c.optimistic,\n      }),\n    );\n  }\n}\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n} // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString ? start + maybeString + end : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\nfunction isMultiline(string) {\n  return string.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray && maybeArray.some(isMultiline);\n}\n","/* tslint:disable */\n\nimport { ApolloLink, Observable, RequestHandler, fromError } from 'apollo-link';\nimport {\n  serializeFetchParameter,\n  selectURI,\n  parseAndCheckHttpResponse,\n  checkFetcher,\n  selectHttpOptionsAndBody,\n  createSignalIfSupported,\n  fallbackHttpConfig,\n  Body,\n  HttpOptions,\n  UriFunction as _UriFunction,\n} from 'apollo-link-http-common';\nimport { DefinitionNode } from 'graphql';\n\nexport namespace HttpLink {\n  //TODO Would much rather be able to export directly\n  export interface UriFunction extends _UriFunction {}\n  export interface Options extends HttpOptions {\n    /**\n     * If set to true, use the HTTP GET method for query operations. Mutations\n     * will still use the method specified in fetchOptions.method (which defaults\n     * to POST).\n     */\n    useGETForQueries?: boolean;\n  }\n}\n\n// For backwards compatibility.\nexport import FetchOptions = HttpLink.Options;\nexport import UriFunction = HttpLink.UriFunction;\n\nexport const createHttpLink = (linkOptions: HttpLink.Options = {}) => {\n  let {\n    uri = '/graphql',\n    // use default global fetch if nothing passed in\n    fetch: fetcher,\n    includeExtensions,\n    useGETForQueries,\n    ...requestOptions\n  } = linkOptions;\n\n  // dev warnings to ensure fetch is present\n  checkFetcher(fetcher);\n\n  //fetcher is set here rather than the destructuring to ensure fetch is\n  //declared before referencing it. Reference in the destructuring would cause\n  //a ReferenceError\n  if (!fetcher) {\n    fetcher = fetch;\n  }\n\n  const linkConfig = {\n    http: { includeExtensions },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink(operation => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    // `apollographql-client-*` headers are automatically set if a\n    // `clientAwareness` object is found in the context. These headers are\n    // set first, followed by the rest of the headers pulled from\n    // `context.headers`. If desired, `apollographql-client-*` headers set by\n    // the `clientAwareness` object can be overridden by\n    // `apollographql-client-*` headers set in `context.headers`.\n    const clientAwarenessHeaders = {};\n    if (context.clientAwareness) {\n      const { name, version } = context.clientAwareness;\n      if (name) {\n        clientAwarenessHeaders['apollographql-client-name'] = name;\n      }\n      if (version) {\n        clientAwarenessHeaders['apollographql-client-version'] = version;\n      }\n    }\n\n    const contextHeaders = { ...clientAwarenessHeaders, ...context.headers };\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders,\n    };\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBody(\n      operation,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig,\n    );\n\n    let controller;\n    if (!(options as any).signal) {\n      const { controller: _controller, signal } = createSignalIfSupported();\n      controller = _controller;\n      if (controller) (options as any).signal = signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = 'GET';\n    }\n\n    if (options.method === 'GET') {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(observer => {\n      fetcher(chosenURI, options)\n        .then(response => {\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(result => {\n          // we have data and can send it to back up the link chain\n          observer.next(result);\n          observer.complete();\n          return result;\n        })\n        .catch(err => {\n          // fetch was cancelled so it's already been cleaned up in the unsubscribe\n          if (err.name === 'AbortError') return;\n          // if it is a network error, BUT there is graphql result info\n          // fire the next observer before calling error\n          // this gives apollo-client (and react-apollo) the `graphqlErrors` and `networErrors`\n          // to pass to UI\n          // this should only happen if we *also* have data as part of the response key per\n          // the spec\n          if (err.result && err.result.errors && err.result.data) {\n            // if we don't call next, the UI can only show networkError because AC didn't\n            // get any graphqlErrors\n            // this is graphql execution result info (i.e errors and possibly data)\n            // this is because there is no formal spec how errors should translate to\n            // http status codes. So an auth error (401) could have both data\n            // from a public field, errors from a private field, and a status of 401\n            // {\n            //  user { // this will have errors\n            //    firstName\n            //  }\n            //  products { // this is public so will have data\n            //    cost\n            //  }\n            // }\n            //\n            // the result of above *could* look like this:\n            // {\n            //   data: { products: [{ cost: \"$10\" }] },\n            //   errors: [{\n            //      message: 'your session has timed out',\n            //      path: []\n            //   }]\n            // }\n            // status code of above would be a 401\n            // in the UI you want to show data where you can, errors as data where you can\n            // and use correct http status codes\n            observer.next(err.result);\n          }\n          observer.error(err);\n        });\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nfunction rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if ('query' in body) {\n    addQueryParam('query', body.query);\n  }\n  if (body.operationName) {\n    addQueryParam('operationName', body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        'Variables map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('variables', serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        'Extensions map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('extensions', serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = '',\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf('#');\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n  return { newURI };\n}\n\nexport class HttpLink extends ApolloLink {\n  public requester: RequestHandler;\n  constructor(opts?: HttpLink.Options) {\n    super(createHttpLink(opts).request);\n  }\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport { ARRAY_INSERT, ARRAY_MOVE, ARRAY_POP, ARRAY_PUSH, ARRAY_REMOVE, ARRAY_REMOVE_ALL, ARRAY_SHIFT, ARRAY_SPLICE, ARRAY_SWAP, ARRAY_UNSHIFT, AUTOFILL, BLUR, CHANGE, CLEAR_SUBMIT, CLEAR_SUBMIT_ERRORS, CLEAR_ASYNC_ERROR, DESTROY, FOCUS, INITIALIZE, REGISTER_FIELD, RESET, RESET_SECTION, CLEAR_FIELDS, SET_SUBMIT_FAILED, SET_SUBMIT_SUCCEEDED, START_ASYNC_VALIDATION, START_SUBMIT, STOP_ASYNC_VALIDATION, STOP_SUBMIT, SUBMIT, TOUCH, UNREGISTER_FIELD, UNTOUCH, UPDATE_SYNC_ERRORS, UPDATE_SYNC_WARNINGS } from './actionTypes';\n\nvar arrayInsert = function arrayInsert(form, field, index, value) {\n  return {\n    type: ARRAY_INSERT,\n    meta: {\n      form: form,\n      field: field,\n      index: index\n    },\n    payload: value\n  };\n};\n\nvar arrayMove = function arrayMove(form, field, from, to) {\n  return {\n    type: ARRAY_MOVE,\n    meta: {\n      form: form,\n      field: field,\n      from: from,\n      to: to\n    }\n  };\n};\n\nvar arrayPop = function arrayPop(form, field) {\n  return {\n    type: ARRAY_POP,\n    meta: {\n      form: form,\n      field: field\n    }\n  };\n};\n\nvar arrayPush = function arrayPush(form, field, value) {\n  return {\n    type: ARRAY_PUSH,\n    meta: {\n      form: form,\n      field: field\n    },\n    payload: value\n  };\n};\n\nvar arrayRemove = function arrayRemove(form, field, index) {\n  return {\n    type: ARRAY_REMOVE,\n    meta: {\n      form: form,\n      field: field,\n      index: index\n    }\n  };\n};\n\nvar arrayRemoveAll = function arrayRemoveAll(form, field) {\n  return {\n    type: ARRAY_REMOVE_ALL,\n    meta: {\n      form: form,\n      field: field\n    }\n  };\n};\n\nvar arrayShift = function arrayShift(form, field) {\n  return {\n    type: ARRAY_SHIFT,\n    meta: {\n      form: form,\n      field: field\n    }\n  };\n};\n\nvar arraySplice = function arraySplice(form, field, index, removeNum, value) {\n  var action = {\n    type: ARRAY_SPLICE,\n    meta: {\n      form: form,\n      field: field,\n      index: index,\n      removeNum: removeNum\n    }\n  };\n\n  if (value !== undefined) {\n    action.payload = value;\n  }\n\n  return action;\n};\n\nvar arraySwap = function arraySwap(form, field, indexA, indexB) {\n  if (indexA === indexB) {\n    throw new Error('Swap indices cannot be equal');\n  }\n\n  if (indexA < 0 || indexB < 0) {\n    throw new Error('Swap indices cannot be negative');\n  }\n\n  return {\n    type: ARRAY_SWAP,\n    meta: {\n      form: form,\n      field: field,\n      indexA: indexA,\n      indexB: indexB\n    }\n  };\n};\n\nvar arrayUnshift = function arrayUnshift(form, field, value) {\n  return {\n    type: ARRAY_UNSHIFT,\n    meta: {\n      form: form,\n      field: field\n    },\n    payload: value\n  };\n};\n\nvar autofill = function autofill(form, field, value) {\n  return {\n    type: AUTOFILL,\n    meta: {\n      form: form,\n      field: field\n    },\n    payload: value\n  };\n};\n\nvar blur = function blur(form, field, value, touch) {\n  return {\n    type: BLUR,\n    meta: {\n      form: form,\n      field: field,\n      touch: touch\n    },\n    payload: value\n  };\n};\n\nvar change = function change(form, field, value, touch, persistentSubmitErrors) {\n  return {\n    type: CHANGE,\n    meta: {\n      form: form,\n      field: field,\n      touch: touch,\n      persistentSubmitErrors: persistentSubmitErrors\n    },\n    payload: value\n  };\n};\n\nvar clearSubmit = function clearSubmit(form) {\n  return {\n    type: CLEAR_SUBMIT,\n    meta: {\n      form: form\n    }\n  };\n};\n\nvar clearSubmitErrors = function clearSubmitErrors(form) {\n  return {\n    type: CLEAR_SUBMIT_ERRORS,\n    meta: {\n      form: form\n    }\n  };\n};\n\nvar clearAsyncError = function clearAsyncError(form, field) {\n  return {\n    type: CLEAR_ASYNC_ERROR,\n    meta: {\n      form: form,\n      field: field\n    }\n  };\n};\n\nvar clearFields = function clearFields(form, keepTouched, persistentSubmitErrors) {\n  for (var _len = arguments.length, fields = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    fields[_key - 3] = arguments[_key];\n  }\n\n  return {\n    type: CLEAR_FIELDS,\n    meta: {\n      form: form,\n      keepTouched: keepTouched,\n      persistentSubmitErrors: persistentSubmitErrors,\n      fields: fields\n    }\n  };\n};\n\nvar destroy = function destroy() {\n  for (var _len2 = arguments.length, form = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    form[_key2] = arguments[_key2];\n  }\n\n  return {\n    type: DESTROY,\n    meta: {\n      form: form\n    }\n  };\n};\n\nvar focus = function focus(form, field) {\n  return {\n    type: FOCUS,\n    meta: {\n      form: form,\n      field: field\n    }\n  };\n};\n\nvar initialize = function initialize(form, values, keepDirty, otherMeta) {\n  if (otherMeta === void 0) {\n    otherMeta = {};\n  }\n\n  if (keepDirty instanceof Object) {\n    otherMeta = keepDirty;\n    keepDirty = false;\n  }\n\n  return {\n    type: INITIALIZE,\n    meta: _extends({\n      form: form,\n      keepDirty: keepDirty\n    }, otherMeta),\n    payload: values\n  };\n};\n\nvar registerField = function registerField(form, name, type) {\n  return {\n    type: REGISTER_FIELD,\n    meta: {\n      form: form\n    },\n    payload: {\n      name: name,\n      type: type\n    }\n  };\n};\n\nvar reset = function reset(form) {\n  return {\n    type: RESET,\n    meta: {\n      form: form\n    }\n  };\n};\n\nvar resetSection = function resetSection(form) {\n  for (var _len3 = arguments.length, sections = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    sections[_key3 - 1] = arguments[_key3];\n  }\n\n  return {\n    type: RESET_SECTION,\n    meta: {\n      form: form,\n      sections: sections\n    }\n  };\n};\n\nvar startAsyncValidation = function startAsyncValidation(form, field) {\n  return {\n    type: START_ASYNC_VALIDATION,\n    meta: {\n      form: form,\n      field: field\n    }\n  };\n};\n\nvar startSubmit = function startSubmit(form) {\n  return {\n    type: START_SUBMIT,\n    meta: {\n      form: form\n    }\n  };\n};\n\nvar stopAsyncValidation = function stopAsyncValidation(form, errors) {\n  return {\n    type: STOP_ASYNC_VALIDATION,\n    meta: {\n      form: form\n    },\n    payload: errors,\n    error: !!(errors && Object.keys(errors).length)\n  };\n};\n\nvar stopSubmit = function stopSubmit(form, errors) {\n  return {\n    type: STOP_SUBMIT,\n    meta: {\n      form: form\n    },\n    payload: errors,\n    error: !!(errors && Object.keys(errors).length)\n  };\n};\n\nvar submit = function submit(form) {\n  return {\n    type: SUBMIT,\n    meta: {\n      form: form\n    }\n  };\n};\n\nvar setSubmitFailed = function setSubmitFailed(form) {\n  for (var _len4 = arguments.length, fields = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    fields[_key4 - 1] = arguments[_key4];\n  }\n\n  return {\n    type: SET_SUBMIT_FAILED,\n    meta: {\n      form: form,\n      fields: fields\n    },\n    error: true\n  };\n};\n\nvar setSubmitSucceeded = function setSubmitSucceeded(form) {\n  for (var _len5 = arguments.length, fields = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    fields[_key5 - 1] = arguments[_key5];\n  }\n\n  return {\n    type: SET_SUBMIT_SUCCEEDED,\n    meta: {\n      form: form,\n      fields: fields\n    },\n    error: false\n  };\n};\n\nvar touch = function touch(form) {\n  for (var _len6 = arguments.length, fields = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n    fields[_key6 - 1] = arguments[_key6];\n  }\n\n  return {\n    type: TOUCH,\n    meta: {\n      form: form,\n      fields: fields\n    }\n  };\n};\n\nvar unregisterField = function unregisterField(form, name, destroyOnUnmount) {\n  if (destroyOnUnmount === void 0) {\n    destroyOnUnmount = true;\n  }\n\n  return {\n    type: UNREGISTER_FIELD,\n    meta: {\n      form: form\n    },\n    payload: {\n      name: name,\n      destroyOnUnmount: destroyOnUnmount\n    }\n  };\n};\n\nvar untouch = function untouch(form) {\n  for (var _len7 = arguments.length, fields = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n    fields[_key7 - 1] = arguments[_key7];\n  }\n\n  return {\n    type: UNTOUCH,\n    meta: {\n      form: form,\n      fields: fields\n    }\n  };\n};\n\nvar updateSyncErrors = function updateSyncErrors(form, syncErrors, error) {\n  if (syncErrors === void 0) {\n    syncErrors = {};\n  }\n\n  return {\n    type: UPDATE_SYNC_ERRORS,\n    meta: {\n      form: form\n    },\n    payload: {\n      syncErrors: syncErrors,\n      error: error\n    }\n  };\n};\n\nvar updateSyncWarnings = function updateSyncWarnings(form, syncWarnings, warning) {\n  if (syncWarnings === void 0) {\n    syncWarnings = {};\n  }\n\n  return {\n    type: UPDATE_SYNC_WARNINGS,\n    meta: {\n      form: form\n    },\n    payload: {\n      syncWarnings: syncWarnings,\n      warning: warning\n    }\n  };\n};\n\nvar actions = {\n  arrayInsert: arrayInsert,\n  arrayMove: arrayMove,\n  arrayPop: arrayPop,\n  arrayPush: arrayPush,\n  arrayRemove: arrayRemove,\n  arrayRemoveAll: arrayRemoveAll,\n  arrayShift: arrayShift,\n  arraySplice: arraySplice,\n  arraySwap: arraySwap,\n  arrayUnshift: arrayUnshift,\n  autofill: autofill,\n  blur: blur,\n  change: change,\n  clearFields: clearFields,\n  clearSubmit: clearSubmit,\n  clearSubmitErrors: clearSubmitErrors,\n  clearAsyncError: clearAsyncError,\n  destroy: destroy,\n  focus: focus,\n  initialize: initialize,\n  registerField: registerField,\n  reset: reset,\n  resetSection: resetSection,\n  startAsyncValidation: startAsyncValidation,\n  startSubmit: startSubmit,\n  stopAsyncValidation: stopAsyncValidation,\n  stopSubmit: stopSubmit,\n  submit: submit,\n  setSubmitFailed: setSubmitFailed,\n  setSubmitSucceeded: setSubmitSucceeded,\n  touch: touch,\n  unregisterField: unregisterField,\n  untouch: untouch,\n  updateSyncErrors: updateSyncErrors,\n  updateSyncWarnings: updateSyncWarnings\n};\nexport default actions;","import isPromise from 'is-promise';\n\nvar asyncValidation = function asyncValidation(fn, start, stop, field) {\n  start(field);\n  var promise = fn();\n\n  if (!isPromise(promise)) {\n    throw new Error('asyncValidate function passed to reduxForm must return a promise');\n  }\n\n  var handleErrors = function handleErrors(rejected) {\n    return function (errors) {\n      if (rejected) {\n        if (errors && Object.keys(errors).length) {\n          stop(errors);\n          return errors;\n        } else {\n          stop();\n          throw new Error('Asynchronous validation promise was rejected without errors.');\n        }\n      }\n\n      stop();\n      return Promise.resolve();\n    };\n  };\n\n  return promise.then(handleErrors(false), handleErrors(true));\n};\n\nexport default asyncValidation;","var defaultShouldAsyncValidate = function defaultShouldAsyncValidate(_ref) {\n  var initialized = _ref.initialized,\n      trigger = _ref.trigger,\n      pristine = _ref.pristine,\n      syncValidationPasses = _ref.syncValidationPasses;\n\n  if (!syncValidationPasses) {\n    return false;\n  }\n\n  switch (trigger) {\n    case 'blur':\n    case 'change':\n      // blurring\n      return true;\n\n    case 'submit':\n      // submitting, so only async validate if form is dirty or was never initialized\n      // conversely, DON'T async validate if the form is pristine just as it was initialized\n      return !pristine || !initialized;\n\n    default:\n      return false;\n  }\n};\n\nexport default defaultShouldAsyncValidate;","var defaultShouldValidate = function defaultShouldValidate(_ref) {\n  var values = _ref.values,\n      nextProps = _ref.nextProps,\n      initialRender = _ref.initialRender,\n      lastFieldValidatorKeys = _ref.lastFieldValidatorKeys,\n      fieldValidatorKeys = _ref.fieldValidatorKeys,\n      structure = _ref.structure;\n\n  if (initialRender) {\n    return true;\n  }\n\n  return !structure.deepEqual(values, nextProps && nextProps.values) || !structure.deepEqual(lastFieldValidatorKeys, fieldValidatorKeys);\n};\n\nexport default defaultShouldValidate;","var defaultShouldError = function defaultShouldError(_ref) {\n  var values = _ref.values,\n      nextProps = _ref.nextProps,\n      initialRender = _ref.initialRender,\n      lastFieldValidatorKeys = _ref.lastFieldValidatorKeys,\n      fieldValidatorKeys = _ref.fieldValidatorKeys,\n      structure = _ref.structure;\n\n  if (initialRender) {\n    return true;\n  }\n\n  return !structure.deepEqual(values, nextProps && nextProps.values) || !structure.deepEqual(lastFieldValidatorKeys, fieldValidatorKeys);\n};\n\nexport default defaultShouldError;","var defaultShouldWarn = function defaultShouldWarn(_ref) {\n  var values = _ref.values,\n      nextProps = _ref.nextProps,\n      initialRender = _ref.initialRender,\n      lastFieldValidatorKeys = _ref.lastFieldValidatorKeys,\n      fieldValidatorKeys = _ref.fieldValidatorKeys,\n      structure = _ref.structure;\n\n  if (initialRender) {\n    return true;\n  }\n\n  return !structure.deepEqual(values, nextProps && nextProps.values) || !structure.deepEqual(lastFieldValidatorKeys, fieldValidatorKeys);\n};\n\nexport default defaultShouldWarn;","import isEvent from './isEvent';\n\nvar silenceEvent = function silenceEvent(event) {\n  var is = isEvent(event);\n\n  if (is) {\n    event.preventDefault();\n  }\n\n  return is;\n};\n\nexport default silenceEvent;","import silenceEvent from './silenceEvent';\n\nvar silenceEvents = function silenceEvents(fn) {\n  return function (event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return silenceEvent(event) ? fn.apply(void 0, args) : fn.apply(void 0, [event].concat(args));\n  };\n};\n\nexport default silenceEvents;","import plain from './structure/plain';\n\nvar toArray = function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n};\n\nvar getError = function getError(value, values, props, validators, name) {\n  var array = toArray(validators);\n\n  for (var i = 0; i < array.length; i++) {\n    var error = array[i](value, values, props, name);\n\n    if (error) {\n      return error;\n    }\n  }\n};\n\nexport default function generateValidator(validators, _ref) {\n  var getIn = _ref.getIn;\n  return function (values, props) {\n    var errors = {};\n    Object.keys(validators).forEach(function (name) {\n      var value = getIn(values, name);\n      var error = getError(value, values, props, validators[name], name);\n\n      if (error) {\n        errors = plain.setIn(errors, name, error);\n      }\n    });\n    return errors;\n  };\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    cls.apply(this, arguments);\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nvar ExtendableError = function (_extendableBuiltin2) {\n  _inherits(ExtendableError, _extendableBuiltin2);\n\n  function ExtendableError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, ExtendableError);\n\n    // extending Error is weird and does not propagate `message`\n    var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));\n\n    Object.defineProperty(_this, 'message', {\n      configurable: true,\n      enumerable: false,\n      value: message,\n      writable: true\n    });\n\n    Object.defineProperty(_this, 'name', {\n      configurable: true,\n      enumerable: false,\n      value: _this.constructor.name,\n      writable: true\n    });\n\n    if (Error.hasOwnProperty('captureStackTrace')) {\n      Error.captureStackTrace(_this, _this.constructor);\n      return _possibleConstructorReturn(_this);\n    }\n\n    Object.defineProperty(_this, 'stack', {\n      configurable: true,\n      enumerable: false,\n      value: new Error(message).stack,\n      writable: true\n    });\n    return _this;\n  }\n\n  return ExtendableError;\n}(_extendableBuiltin(Error));\n\nexport default ExtendableError;\n","import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport ExtendableError from 'es6-error';\nvar __FLAG__ = '@@redux-form/submission-error-flag';\nexport var SubmissionError =\n/*#__PURE__*/\nfunction (_ExtendableError) {\n  _inheritsLoose(SubmissionError, _ExtendableError);\n\n  /** @private */\n  function SubmissionError(errors) {\n    var _this;\n\n    _this = _ExtendableError.call(this, 'Submit Validation Failed') || this;\n    _this.errors = errors;\n    return _this;\n  }\n\n  return SubmissionError;\n}(ExtendableError);\nSubmissionError.__FLAG__ = __FLAG__;\nexport function isSubmissionError(error) {\n  return (error && error.constructor && error.constructor.__FLAG__ === __FLAG__) === true;\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport isPromise from 'is-promise';\nimport { isSubmissionError } from './SubmissionError';\n\nvar mergeErrors = function mergeErrors(_ref) {\n  var asyncErrors = _ref.asyncErrors,\n      syncErrors = _ref.syncErrors;\n  return asyncErrors && typeof asyncErrors.merge === 'function' ? asyncErrors.merge(syncErrors).toJS() : _extends({}, asyncErrors, {}, syncErrors);\n};\n\nvar executeSubmit = function executeSubmit(submit, fields, props) {\n  var dispatch = props.dispatch,\n      submitAsSideEffect = props.submitAsSideEffect,\n      onSubmitFail = props.onSubmitFail,\n      onSubmitSuccess = props.onSubmitSuccess,\n      startSubmit = props.startSubmit,\n      stopSubmit = props.stopSubmit,\n      setSubmitFailed = props.setSubmitFailed,\n      setSubmitSucceeded = props.setSubmitSucceeded,\n      values = props.values;\n  var result;\n\n  try {\n    result = submit(values, dispatch, props);\n  } catch (submitError) {\n    var error = isSubmissionError(submitError) ? submitError.errors : undefined;\n    stopSubmit(error);\n    setSubmitFailed.apply(void 0, fields);\n\n    if (onSubmitFail) {\n      onSubmitFail(error, dispatch, submitError, props);\n    }\n\n    if (error || onSubmitFail) {\n      // if you've provided an onSubmitFail callback, don't re-throw the error\n      return error;\n    } else {\n      throw submitError;\n    }\n  }\n\n  if (submitAsSideEffect) {\n    if (result) {\n      dispatch(result);\n    }\n  } else {\n    if (isPromise(result)) {\n      startSubmit();\n      return result.then(function (submitResult) {\n        stopSubmit();\n        setSubmitSucceeded();\n\n        if (onSubmitSuccess) {\n          onSubmitSuccess(submitResult, dispatch, props);\n        }\n\n        return submitResult;\n      }, function (submitError) {\n        var error = isSubmissionError(submitError) ? submitError.errors : undefined;\n        stopSubmit(error);\n        setSubmitFailed.apply(void 0, fields);\n\n        if (onSubmitFail) {\n          onSubmitFail(error, dispatch, submitError, props);\n        }\n\n        if (error || onSubmitFail) {\n          // if you've provided an onSubmitFail callback, don't re-throw the error\n          return error;\n        } else {\n          throw submitError;\n        }\n      });\n    } else {\n      setSubmitSucceeded();\n\n      if (onSubmitSuccess) {\n        onSubmitSuccess(result, dispatch, props);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar handleSubmit = function handleSubmit(submit, props, valid, asyncValidate, fields) {\n  var dispatch = props.dispatch,\n      onSubmitFail = props.onSubmitFail,\n      setSubmitFailed = props.setSubmitFailed,\n      syncErrors = props.syncErrors,\n      asyncErrors = props.asyncErrors,\n      touch = props.touch,\n      persistentSubmitErrors = props.persistentSubmitErrors;\n  touch.apply(void 0, fields);\n\n  if (valid || persistentSubmitErrors) {\n    var asyncValidateResult = asyncValidate && asyncValidate();\n\n    if (asyncValidateResult) {\n      return asyncValidateResult.then(function (asyncErrors) {\n        if (asyncErrors) {\n          throw asyncErrors;\n        }\n\n        return executeSubmit(submit, fields, props);\n      })[\"catch\"](function (asyncErrors) {\n        setSubmitFailed.apply(void 0, fields);\n\n        if (onSubmitFail) {\n          onSubmitFail(asyncErrors, dispatch, null, props);\n        }\n\n        return Promise.reject(asyncErrors);\n      });\n    } else {\n      return executeSubmit(submit, fields, props);\n    }\n  } else {\n    setSubmitFailed.apply(void 0, fields);\n    var errors = mergeErrors({\n      asyncErrors: asyncErrors,\n      syncErrors: syncErrors\n    });\n\n    if (onSubmitFail) {\n      onSubmitFail(errors, dispatch, null, props);\n    }\n\n    return errors;\n  }\n};\n\nexport default handleSubmit;","var getErrorKeys = function getErrorKeys(name, type) {\n  switch (type) {\n    case 'Field':\n      return [name, name + \"._error\"];\n\n    case 'FieldArray':\n      return [name + \"._error\"];\n\n    default:\n      throw new Error('Unknown field type');\n  }\n};\n\nexport default function createHasError(_ref) {\n  var getIn = _ref.getIn;\n  return function (field, syncErrors, asyncErrors, submitErrors) {\n    if (!syncErrors && !asyncErrors && !submitErrors) {\n      return false;\n    }\n\n    var name = getIn(field, 'name');\n    var type = getIn(field, 'type');\n    return getErrorKeys(name, type).some(function (key) {\n      return getIn(syncErrors, key) || getIn(asyncErrors, key) || getIn(submitErrors, key);\n    });\n  };\n}","var getDisplayName = function getDisplayName(Comp) {\n  return Comp.displayName || Comp.name || 'Component';\n};\n\nexport default getDisplayName;","import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _merge from \"lodash/merge\";\nimport _mapValues from \"lodash/mapValues\";\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from 'invariant';\nimport isPromise from 'is-promise';\nimport PropTypes from 'prop-types';\nimport React, { createElement } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport importedActions from './actions';\nimport asyncValidation from './asyncValidation';\nimport defaultShouldAsyncValidate from './defaultShouldAsyncValidate';\nimport defaultShouldValidate from './defaultShouldValidate';\nimport defaultShouldError from './defaultShouldError';\nimport defaultShouldWarn from './defaultShouldWarn';\nimport silenceEvent from './events/silenceEvent';\nimport silenceEvents from './events/silenceEvents';\nimport generateValidator from './generateValidator';\nimport handleSubmit from './handleSubmit';\nimport createIsValid from './selectors/isValid';\nimport plain from './structure/plain';\nimport getDisplayName from './util/getDisplayName';\nimport isHotReloading from './util/isHotReloading';\nimport { withReduxForm, ReduxFormContext } from './ReduxFormContext';\n\nvar isClassComponent = function isClassComponent(Component) {\n  return Boolean(Component && Component.prototype && typeof Component.prototype.isReactComponent === 'object');\n}; // extract field-specific actions\n\n\nvar arrayInsert = importedActions.arrayInsert,\n    arrayMove = importedActions.arrayMove,\n    arrayPop = importedActions.arrayPop,\n    arrayPush = importedActions.arrayPush,\n    arrayRemove = importedActions.arrayRemove,\n    arrayRemoveAll = importedActions.arrayRemoveAll,\n    arrayShift = importedActions.arrayShift,\n    arraySplice = importedActions.arraySplice,\n    arraySwap = importedActions.arraySwap,\n    arrayUnshift = importedActions.arrayUnshift,\n    blur = importedActions.blur,\n    change = importedActions.change,\n    focus = importedActions.focus,\n    formActions = _objectWithoutPropertiesLoose(importedActions, [\"arrayInsert\", \"arrayMove\", \"arrayPop\", \"arrayPush\", \"arrayRemove\", \"arrayRemoveAll\", \"arrayShift\", \"arraySplice\", \"arraySwap\", \"arrayUnshift\", \"blur\", \"change\", \"focus\"]);\n\nvar arrayActions = {\n  arrayInsert: arrayInsert,\n  arrayMove: arrayMove,\n  arrayPop: arrayPop,\n  arrayPush: arrayPush,\n  arrayRemove: arrayRemove,\n  arrayRemoveAll: arrayRemoveAll,\n  arrayShift: arrayShift,\n  arraySplice: arraySplice,\n  arraySwap: arraySwap,\n  arrayUnshift: arrayUnshift\n};\nvar propsToNotUpdateFor = [].concat(Object.keys(importedActions), ['array', 'asyncErrors', 'initialValues', 'syncErrors', 'syncWarnings', 'values', 'registeredFields']);\n\nvar checkSubmit = function checkSubmit(submit) {\n  if (!submit || typeof submit !== 'function') {\n    throw new Error('You must either pass handleSubmit() an onSubmit function or pass onSubmit as a prop');\n  }\n\n  return submit;\n};\n\n/**\n * The decorator that is the main API to redux-form\n */\nexport default function createReduxForm(structure) {\n  var deepEqual = structure.deepEqual,\n      empty = structure.empty,\n      getIn = structure.getIn,\n      setIn = structure.setIn,\n      keys = structure.keys,\n      fromJS = structure.fromJS,\n      toJS = structure.toJS;\n  var isValid = createIsValid(structure);\n  return function (initialConfig) {\n    var config = _extends({\n      touchOnBlur: true,\n      touchOnChange: false,\n      persistentSubmitErrors: false,\n      destroyOnUnmount: true,\n      shouldAsyncValidate: defaultShouldAsyncValidate,\n      shouldValidate: defaultShouldValidate,\n      shouldError: defaultShouldError,\n      shouldWarn: defaultShouldWarn,\n      enableReinitialize: false,\n      keepDirtyOnReinitialize: false,\n      updateUnregisteredFields: false,\n      getFormState: function getFormState(state) {\n        return getIn(state, 'form');\n      },\n      pure: true,\n      forceUnregisterOnUnmount: false,\n      submitAsSideEffect: false\n    }, initialConfig);\n\n    return function (WrappedComponent) {\n      var Form =\n      /*#__PURE__*/\n      function (_React$Component) {\n        _inheritsLoose(Form, _React$Component);\n\n        function Form() {\n          var _this;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n          _this.wrapped = React.createRef();\n          _this.destroyed = false;\n          _this.fieldCounts = {};\n          _this.fieldValidators = {};\n          _this.lastFieldValidatorKeys = [];\n          _this.fieldWarners = {};\n          _this.lastFieldWarnerKeys = [];\n          _this.innerOnSubmit = undefined;\n          _this.submitPromise = undefined;\n\n          _this.getValues = function () {\n            return _this.props.values;\n          };\n\n          _this.isValid = function () {\n            return _this.props.valid;\n          };\n\n          _this.isPristine = function () {\n            return _this.props.pristine;\n          };\n\n          _this.register = function (name, type, getValidator, getWarner) {\n            var lastCount = _this.fieldCounts[name];\n            var nextCount = (lastCount || 0) + 1;\n            _this.fieldCounts[name] = nextCount;\n\n            _this.props.registerField(name, type);\n\n            if (getValidator) {\n              _this.fieldValidators[name] = getValidator;\n            }\n\n            if (getWarner) {\n              _this.fieldWarners[name] = getWarner;\n            }\n          };\n\n          _this.unregister = function (name) {\n            var lastCount = _this.fieldCounts[name];\n            if (lastCount === 1) delete _this.fieldCounts[name];else if (lastCount != null) _this.fieldCounts[name] = lastCount - 1;\n\n            if (!_this.destroyed) {\n              var _this$props = _this.props,\n                  _destroyOnUnmount = _this$props.destroyOnUnmount,\n                  forceUnregisterOnUnmount = _this$props.forceUnregisterOnUnmount,\n                  unregisterField = _this$props.unregisterField;\n\n              if (_destroyOnUnmount || forceUnregisterOnUnmount) {\n                unregisterField(name, _destroyOnUnmount);\n\n                if (!_this.fieldCounts[name]) {\n                  delete _this.fieldValidators[name];\n                  delete _this.fieldWarners[name];\n                  _this.lastFieldValidatorKeys = _this.lastFieldValidatorKeys.filter(function (key) {\n                    return key !== name;\n                  });\n                }\n              } else {\n                unregisterField(name, false);\n              }\n            }\n          };\n\n          _this.getFieldList = function (options) {\n            var registeredFields = _this.props.registeredFields;\n\n            if (!registeredFields) {\n              return [];\n            }\n\n            var keySeq = keys(registeredFields);\n\n            if (options) {\n              if (options.excludeFieldArray) {\n                keySeq = keySeq.filter(function (name) {\n                  return getIn(registeredFields, \"['\" + name + \"'].type\") !== 'FieldArray';\n                });\n              }\n\n              if (options.excludeUnregistered) {\n                keySeq = keySeq.filter(function (name) {\n                  return getIn(registeredFields, \"['\" + name + \"'].count\") !== 0;\n                });\n              }\n            }\n\n            return toJS(keySeq);\n          };\n\n          _this.getValidators = function () {\n            var validators = {};\n            Object.keys(_this.fieldValidators).forEach(function (name) {\n              var validator = _this.fieldValidators[name]();\n\n              if (validator) {\n                validators[name] = validator;\n              }\n            });\n            return validators;\n          };\n\n          _this.generateValidator = function () {\n            var validators = _this.getValidators();\n\n            return Object.keys(validators).length ? generateValidator(validators, structure) : undefined;\n          };\n\n          _this.getWarners = function () {\n            var warners = {};\n            Object.keys(_this.fieldWarners).forEach(function (name) {\n              var warner = _this.fieldWarners[name]();\n\n              if (warner) {\n                warners[name] = warner;\n              }\n            });\n            return warners;\n          };\n\n          _this.generateWarner = function () {\n            var warners = _this.getWarners();\n\n            return Object.keys(warners).length ? generateValidator(warners, structure) : undefined;\n          };\n\n          _this.asyncValidate = function (name, value, trigger) {\n            var _this$props2 = _this.props,\n                asyncBlurFields = _this$props2.asyncBlurFields,\n                asyncChangeFields = _this$props2.asyncChangeFields,\n                asyncErrors = _this$props2.asyncErrors,\n                asyncValidate = _this$props2.asyncValidate,\n                dispatch = _this$props2.dispatch,\n                initialized = _this$props2.initialized,\n                pristine = _this$props2.pristine,\n                shouldAsyncValidate = _this$props2.shouldAsyncValidate,\n                startAsyncValidation = _this$props2.startAsyncValidation,\n                stopAsyncValidation = _this$props2.stopAsyncValidation,\n                syncErrors = _this$props2.syncErrors,\n                values = _this$props2.values;\n            var submitting = !name;\n\n            var fieldNeedsValidation = function fieldNeedsValidation() {\n              var fieldNeedsValidationForBlur = asyncBlurFields && name && ~asyncBlurFields.indexOf(name.replace(/\\[[0-9]+\\]/g, '[]'));\n              var fieldNeedsValidationForChange = asyncChangeFields && name && ~asyncChangeFields.indexOf(name.replace(/\\[[0-9]+\\]/g, '[]'));\n              var asyncValidateByDefault = !(asyncBlurFields || asyncChangeFields);\n              return submitting || asyncValidateByDefault || (trigger === 'blur' ? fieldNeedsValidationForBlur : fieldNeedsValidationForChange);\n            };\n\n            if (asyncValidate) {\n              var valuesToValidate = submitting ? values : setIn(values, name, value);\n              var syncValidationPasses = submitting || !getIn(syncErrors, name);\n\n              if (fieldNeedsValidation() && shouldAsyncValidate({\n                asyncErrors: asyncErrors,\n                initialized: initialized,\n                trigger: submitting ? 'submit' : trigger,\n                blurredField: name,\n                pristine: pristine,\n                syncValidationPasses: syncValidationPasses\n              })) {\n                return asyncValidation(function () {\n                  return asyncValidate(valuesToValidate, dispatch, _this.props, name);\n                }, startAsyncValidation, stopAsyncValidation, name);\n              }\n            }\n          };\n\n          _this.submitCompleted = function (result) {\n            delete _this.submitPromise;\n            return result;\n          };\n\n          _this.submitFailed = function (error) {\n            delete _this.submitPromise;\n            throw error;\n          };\n\n          _this.listenToSubmit = function (promise) {\n            if (!isPromise(promise)) {\n              return promise;\n            }\n\n            _this.submitPromise = promise;\n            return promise.then(_this.submitCompleted, _this.submitFailed);\n          };\n\n          _this.submit = function (submitOrEvent) {\n            var _this$props3 = _this.props,\n                onSubmit = _this$props3.onSubmit,\n                blur = _this$props3.blur,\n                change = _this$props3.change,\n                dispatch = _this$props3.dispatch;\n\n            if (!submitOrEvent || silenceEvent(submitOrEvent)) {\n              // submitOrEvent is an event: fire submit if not already submitting\n              if (!_this.submitPromise) {\n                // avoid recursive stack trace if use Form with onSubmit as handleSubmit\n                if (_this.innerOnSubmit && _this.innerOnSubmit !== _this.submit) {\n                  // will call \"submitOrEvent is the submit function\" block below\n                  return _this.innerOnSubmit();\n                } else {\n                  return _this.listenToSubmit(handleSubmit(checkSubmit(onSubmit), _extends({}, _this.props, {}, bindActionCreators({\n                    blur: blur,\n                    change: change\n                  }, dispatch)), _this.props.validExceptSubmit, _this.asyncValidate, _this.getFieldList({\n                    excludeFieldArray: true,\n                    excludeUnregistered: true\n                  })));\n                }\n              }\n            } else {\n              // submitOrEvent is the submit function: return deferred submit thunk\n              return silenceEvents(function () {\n                return !_this.submitPromise && _this.listenToSubmit(handleSubmit(checkSubmit(submitOrEvent), _extends({}, _this.props, {}, bindActionCreators({\n                  blur: blur,\n                  change: change\n                }, dispatch)), _this.props.validExceptSubmit, _this.asyncValidate, _this.getFieldList({\n                  excludeFieldArray: true,\n                  excludeUnregistered: true\n                })));\n              });\n            }\n          };\n\n          _this.reset = function () {\n            return _this.props.reset();\n          };\n\n          return _this;\n        }\n\n        var _proto = Form.prototype;\n\n        _proto.initIfNeeded = function initIfNeeded(nextProps) {\n          var enableReinitialize = this.props.enableReinitialize;\n\n          if (nextProps) {\n            if ((enableReinitialize || !nextProps.initialized) && !deepEqual(this.props.initialValues, nextProps.initialValues)) {\n              var _keepDirty = nextProps.initialized && this.props.keepDirtyOnReinitialize;\n\n              this.props.initialize(nextProps.initialValues, _keepDirty, {\n                keepValues: nextProps.keepValues,\n                lastInitialValues: this.props.initialValues,\n                updateUnregisteredFields: nextProps.updateUnregisteredFields\n              });\n            }\n          } else if (this.props.initialValues && (!this.props.initialized || enableReinitialize)) {\n            this.props.initialize(this.props.initialValues, this.props.keepDirtyOnReinitialize, {\n              keepValues: this.props.keepValues,\n              updateUnregisteredFields: this.props.updateUnregisteredFields\n            });\n          }\n        };\n\n        _proto.updateSyncErrorsIfNeeded = function updateSyncErrorsIfNeeded(nextSyncErrors, nextError, lastSyncErrors) {\n          var _this$props4 = this.props,\n              error = _this$props4.error,\n              updateSyncErrors = _this$props4.updateSyncErrors;\n          var noErrors = (!lastSyncErrors || !Object.keys(lastSyncErrors).length) && !error;\n          var nextNoErrors = (!nextSyncErrors || !Object.keys(nextSyncErrors).length) && !nextError;\n\n          if (!(noErrors && nextNoErrors) && (!plain.deepEqual(lastSyncErrors, nextSyncErrors) || !plain.deepEqual(error, nextError))) {\n            updateSyncErrors(nextSyncErrors, nextError);\n          }\n        };\n\n        _proto.clearSubmitPromiseIfNeeded = function clearSubmitPromiseIfNeeded(nextProps) {\n          var submitting = this.props.submitting;\n\n          if (this.submitPromise && submitting && !nextProps.submitting) {\n            delete this.submitPromise;\n          }\n        };\n\n        _proto.submitIfNeeded = function submitIfNeeded(nextProps) {\n          var _this$props5 = this.props,\n              clearSubmit = _this$props5.clearSubmit,\n              triggerSubmit = _this$props5.triggerSubmit;\n\n          if (!triggerSubmit && nextProps.triggerSubmit) {\n            clearSubmit();\n            this.submit();\n          }\n        };\n\n        _proto.shouldErrorFunction = function shouldErrorFunction() {\n          var _this$props6 = this.props,\n              shouldValidate = _this$props6.shouldValidate,\n              shouldError = _this$props6.shouldError;\n          var shouldValidateOverridden = shouldValidate !== defaultShouldValidate;\n          var shouldErrorOverridden = shouldError !== defaultShouldError;\n          return shouldValidateOverridden && !shouldErrorOverridden ? shouldValidate : shouldError;\n        };\n\n        _proto.validateIfNeeded = function validateIfNeeded(nextProps) {\n          var _this$props7 = this.props,\n              validate = _this$props7.validate,\n              values = _this$props7.values;\n          var shouldError = this.shouldErrorFunction();\n          var fieldLevelValidate = this.generateValidator();\n\n          if (validate || fieldLevelValidate) {\n            var initialRender = nextProps === undefined;\n            var fieldValidatorKeys = Object.keys(this.getValidators());\n            var validateParams = {\n              values: values,\n              nextProps: nextProps,\n              props: this.props,\n              initialRender: initialRender,\n              lastFieldValidatorKeys: this.lastFieldValidatorKeys,\n              fieldValidatorKeys: fieldValidatorKeys,\n              structure: structure\n            };\n\n            if (shouldError(validateParams)) {\n              var propsToValidate = initialRender || !nextProps ? this.props : nextProps;\n\n              var _merge2 = _merge(validate ? validate(propsToValidate.values, propsToValidate) || {} : {}, fieldLevelValidate ? fieldLevelValidate(propsToValidate.values, propsToValidate) || {} : {}),\n                  _error = _merge2._error,\n                  nextSyncErrors = _objectWithoutPropertiesLoose(_merge2, [\"_error\"]);\n\n              this.lastFieldValidatorKeys = fieldValidatorKeys;\n              this.updateSyncErrorsIfNeeded(nextSyncErrors, _error, propsToValidate.syncErrors);\n            }\n          } else {\n            this.lastFieldValidatorKeys = [];\n          }\n        };\n\n        _proto.updateSyncWarningsIfNeeded = function updateSyncWarningsIfNeeded(nextSyncWarnings, nextWarning, lastSyncWarnings) {\n          var _this$props8 = this.props,\n              warning = _this$props8.warning,\n              updateSyncWarnings = _this$props8.updateSyncWarnings;\n          var noWarnings = (!lastSyncWarnings || !Object.keys(lastSyncWarnings).length) && !warning;\n          var nextNoWarnings = (!nextSyncWarnings || !Object.keys(nextSyncWarnings).length) && !nextWarning;\n\n          if (!(noWarnings && nextNoWarnings) && (!plain.deepEqual(lastSyncWarnings, nextSyncWarnings) || !plain.deepEqual(warning, nextWarning))) {\n            updateSyncWarnings(nextSyncWarnings, nextWarning);\n          }\n        };\n\n        _proto.shouldWarnFunction = function shouldWarnFunction() {\n          var _this$props9 = this.props,\n              shouldValidate = _this$props9.shouldValidate,\n              shouldWarn = _this$props9.shouldWarn;\n          var shouldValidateOverridden = shouldValidate !== defaultShouldValidate;\n          var shouldWarnOverridden = shouldWarn !== defaultShouldWarn;\n          return shouldValidateOverridden && !shouldWarnOverridden ? shouldValidate : shouldWarn;\n        };\n\n        _proto.warnIfNeeded = function warnIfNeeded(nextProps) {\n          var _this$props10 = this.props,\n              warn = _this$props10.warn,\n              values = _this$props10.values;\n          var shouldWarn = this.shouldWarnFunction();\n          var fieldLevelWarn = this.generateWarner();\n\n          if (warn || fieldLevelWarn) {\n            var initialRender = nextProps === undefined;\n            var fieldWarnerKeys = Object.keys(this.getWarners());\n            var validateParams = {\n              values: values,\n              nextProps: nextProps,\n              props: this.props,\n              initialRender: initialRender,\n              lastFieldValidatorKeys: this.lastFieldWarnerKeys,\n              fieldValidatorKeys: fieldWarnerKeys,\n              structure: structure\n            };\n\n            if (shouldWarn(validateParams)) {\n              var propsToWarn = initialRender || !nextProps ? this.props : nextProps;\n\n              var _merge3 = _merge(warn ? warn(propsToWarn.values, propsToWarn) : {}, fieldLevelWarn ? fieldLevelWarn(propsToWarn.values, propsToWarn) : {}),\n                  _warning = _merge3._warning,\n                  nextSyncWarnings = _objectWithoutPropertiesLoose(_merge3, [\"_warning\"]);\n\n              this.lastFieldWarnerKeys = fieldWarnerKeys;\n              this.updateSyncWarningsIfNeeded(nextSyncWarnings, _warning, propsToWarn.syncWarnings);\n            }\n          }\n        };\n\n        _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n          if (!isHotReloading()) {\n            this.initIfNeeded();\n            this.validateIfNeeded();\n            this.warnIfNeeded();\n          }\n\n          invariant(this.props.shouldValidate, 'shouldValidate() is deprecated and will be removed in v9.0.0. Use shouldWarn() or shouldError() instead.');\n        };\n\n        _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n          this.initIfNeeded(nextProps);\n          this.validateIfNeeded(nextProps);\n          this.warnIfNeeded(nextProps);\n          this.clearSubmitPromiseIfNeeded(nextProps);\n          this.submitIfNeeded(nextProps);\n          var onChange = nextProps.onChange,\n              values = nextProps.values,\n              dispatch = nextProps.dispatch;\n\n          if (onChange && !deepEqual(values, this.props.values)) {\n            onChange(values, dispatch, nextProps, this.props.values);\n          }\n        };\n\n        _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n          var _this2 = this;\n\n          if (!this.props.pure) return true;\n          var _config$immutableProp = config.immutableProps,\n              immutableProps = _config$immutableProp === void 0 ? [] : _config$immutableProp; // if we have children, we MUST update in React 16\n          // https://twitter.com/erikras/status/915866544558788608\n\n          return !!(this.props.children || nextProps.children || Object.keys(nextProps).some(function (prop) {\n            // useful to debug rerenders\n            // if (!plain.deepEqual(this.props[ prop ], nextProps[ prop ])) {\n            //   console.info(prop, 'changed', this.props[ prop ], '==>', nextProps[ prop ])\n            // }\n            if (~immutableProps.indexOf(prop)) {\n              return _this2.props[prop] !== nextProps[prop];\n            }\n\n            return !~propsToNotUpdateFor.indexOf(prop) && !deepEqual(_this2.props[prop], nextProps[prop]);\n          }));\n        };\n\n        _proto.componentDidMount = function componentDidMount() {\n          if (!isHotReloading()) {\n            this.initIfNeeded(this.props);\n            this.validateIfNeeded();\n            this.warnIfNeeded();\n          }\n\n          invariant(this.props.shouldValidate, 'shouldValidate() is deprecated and will be removed in v9.0.0. Use shouldWarn() or shouldError() instead.');\n        };\n\n        _proto.componentWillUnmount = function componentWillUnmount() {\n          var _this$props11 = this.props,\n              destroyOnUnmount = _this$props11.destroyOnUnmount,\n              destroy = _this$props11.destroy;\n\n          if (destroyOnUnmount && !isHotReloading()) {\n            this.destroyed = true;\n            destroy();\n          }\n        };\n\n        _proto.render = function render() {\n          var _ref,\n              _this3 = this;\n\n          // remove some redux-form config-only props\n\n          /* eslint-disable no-unused-vars */\n          var _this$props12 = this.props,\n              anyTouched = _this$props12.anyTouched,\n              array = _this$props12.array,\n              arrayInsert = _this$props12.arrayInsert,\n              arrayMove = _this$props12.arrayMove,\n              arrayPop = _this$props12.arrayPop,\n              arrayPush = _this$props12.arrayPush,\n              arrayRemove = _this$props12.arrayRemove,\n              arrayRemoveAll = _this$props12.arrayRemoveAll,\n              arrayShift = _this$props12.arrayShift,\n              arraySplice = _this$props12.arraySplice,\n              arraySwap = _this$props12.arraySwap,\n              arrayUnshift = _this$props12.arrayUnshift,\n              asyncErrors = _this$props12.asyncErrors,\n              asyncValidate = _this$props12.asyncValidate,\n              asyncValidating = _this$props12.asyncValidating,\n              blur = _this$props12.blur,\n              change = _this$props12.change,\n              clearSubmit = _this$props12.clearSubmit,\n              destroy = _this$props12.destroy,\n              destroyOnUnmount = _this$props12.destroyOnUnmount,\n              forceUnregisterOnUnmount = _this$props12.forceUnregisterOnUnmount,\n              dirty = _this$props12.dirty,\n              dispatch = _this$props12.dispatch,\n              enableReinitialize = _this$props12.enableReinitialize,\n              error = _this$props12.error,\n              focus = _this$props12.focus,\n              form = _this$props12.form,\n              getFormState = _this$props12.getFormState,\n              immutableProps = _this$props12.immutableProps,\n              initialize = _this$props12.initialize,\n              initialized = _this$props12.initialized,\n              initialValues = _this$props12.initialValues,\n              invalid = _this$props12.invalid,\n              keepDirtyOnReinitialize = _this$props12.keepDirtyOnReinitialize,\n              keepValues = _this$props12.keepValues,\n              updateUnregisteredFields = _this$props12.updateUnregisteredFields,\n              pristine = _this$props12.pristine,\n              propNamespace = _this$props12.propNamespace,\n              registeredFields = _this$props12.registeredFields,\n              registerField = _this$props12.registerField,\n              reset = _this$props12.reset,\n              resetSection = _this$props12.resetSection,\n              setSubmitFailed = _this$props12.setSubmitFailed,\n              setSubmitSucceeded = _this$props12.setSubmitSucceeded,\n              shouldAsyncValidate = _this$props12.shouldAsyncValidate,\n              shouldValidate = _this$props12.shouldValidate,\n              shouldError = _this$props12.shouldError,\n              shouldWarn = _this$props12.shouldWarn,\n              startAsyncValidation = _this$props12.startAsyncValidation,\n              startSubmit = _this$props12.startSubmit,\n              stopAsyncValidation = _this$props12.stopAsyncValidation,\n              stopSubmit = _this$props12.stopSubmit,\n              submitAsSideEffect = _this$props12.submitAsSideEffect,\n              submitting = _this$props12.submitting,\n              submitFailed = _this$props12.submitFailed,\n              submitSucceeded = _this$props12.submitSucceeded,\n              touch = _this$props12.touch,\n              touchOnBlur = _this$props12.touchOnBlur,\n              touchOnChange = _this$props12.touchOnChange,\n              persistentSubmitErrors = _this$props12.persistentSubmitErrors,\n              syncErrors = _this$props12.syncErrors,\n              syncWarnings = _this$props12.syncWarnings,\n              unregisterField = _this$props12.unregisterField,\n              untouch = _this$props12.untouch,\n              updateSyncErrors = _this$props12.updateSyncErrors,\n              updateSyncWarnings = _this$props12.updateSyncWarnings,\n              valid = _this$props12.valid,\n              validExceptSubmit = _this$props12.validExceptSubmit,\n              values = _this$props12.values,\n              warning = _this$props12.warning,\n              rest = _objectWithoutPropertiesLoose(_this$props12, [\"anyTouched\", \"array\", \"arrayInsert\", \"arrayMove\", \"arrayPop\", \"arrayPush\", \"arrayRemove\", \"arrayRemoveAll\", \"arrayShift\", \"arraySplice\", \"arraySwap\", \"arrayUnshift\", \"asyncErrors\", \"asyncValidate\", \"asyncValidating\", \"blur\", \"change\", \"clearSubmit\", \"destroy\", \"destroyOnUnmount\", \"forceUnregisterOnUnmount\", \"dirty\", \"dispatch\", \"enableReinitialize\", \"error\", \"focus\", \"form\", \"getFormState\", \"immutableProps\", \"initialize\", \"initialized\", \"initialValues\", \"invalid\", \"keepDirtyOnReinitialize\", \"keepValues\", \"updateUnregisteredFields\", \"pristine\", \"propNamespace\", \"registeredFields\", \"registerField\", \"reset\", \"resetSection\", \"setSubmitFailed\", \"setSubmitSucceeded\", \"shouldAsyncValidate\", \"shouldValidate\", \"shouldError\", \"shouldWarn\", \"startAsyncValidation\", \"startSubmit\", \"stopAsyncValidation\", \"stopSubmit\", \"submitAsSideEffect\", \"submitting\", \"submitFailed\", \"submitSucceeded\", \"touch\", \"touchOnBlur\", \"touchOnChange\", \"persistentSubmitErrors\", \"syncErrors\", \"syncWarnings\", \"unregisterField\", \"untouch\", \"updateSyncErrors\", \"updateSyncWarnings\", \"valid\", \"validExceptSubmit\", \"values\", \"warning\"]);\n          /* eslint-enable no-unused-vars */\n\n\n          var reduxFormProps = _extends({\n            array: array,\n            anyTouched: anyTouched,\n            asyncValidate: this.asyncValidate,\n            asyncValidating: asyncValidating\n          }, bindActionCreators({\n            blur: blur,\n            change: change\n          }, dispatch), {\n            clearSubmit: clearSubmit,\n            destroy: destroy,\n            dirty: dirty,\n            dispatch: dispatch,\n            error: error,\n            form: form,\n            handleSubmit: this.submit,\n            initialize: initialize,\n            initialized: initialized,\n            initialValues: initialValues,\n            invalid: invalid,\n            pristine: pristine,\n            reset: reset,\n            resetSection: resetSection,\n            submitting: submitting,\n            submitAsSideEffect: submitAsSideEffect,\n            submitFailed: submitFailed,\n            submitSucceeded: submitSucceeded,\n            touch: touch,\n            untouch: untouch,\n            valid: valid,\n            warning: warning\n          });\n\n          var propsToPass = _extends({}, propNamespace ? (_ref = {}, _ref[propNamespace] = reduxFormProps, _ref) : reduxFormProps, {}, rest);\n\n          if (isClassComponent(WrappedComponent)) {\n            ;\n            propsToPass.ref = this.wrapped;\n          }\n\n          var _reduxForm = _extends({}, this.props, {\n            getFormState: function getFormState(state) {\n              return getIn(_this3.props.getFormState(state), _this3.props.form);\n            },\n            asyncValidate: this.asyncValidate,\n            getValues: this.getValues,\n            sectionPrefix: undefined,\n            register: this.register,\n            unregister: this.unregister,\n            registerInnerOnSubmit: function registerInnerOnSubmit(innerOnSubmit) {\n              return _this3.innerOnSubmit = innerOnSubmit;\n            }\n          });\n\n          return createElement(ReduxFormContext.Provider, {\n            value: _reduxForm,\n            children: createElement(WrappedComponent, propsToPass)\n          });\n        };\n\n        return Form;\n      }(React.Component);\n\n      Form.displayName = \"Form(\" + getDisplayName(WrappedComponent) + \")\";\n      Form.WrappedComponent = WrappedComponent;\n      Form.propTypes = {\n        destroyOnUnmount: PropTypes.bool,\n        forceUnregisterOnUnmount: PropTypes.bool,\n        form: PropTypes.string.isRequired,\n        immutableProps: PropTypes.arrayOf(PropTypes.string),\n        initialValues: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n        getFormState: PropTypes.func,\n        onSubmitFail: PropTypes.func,\n        onSubmitSuccess: PropTypes.func,\n        propNamespace: PropTypes.string,\n        validate: PropTypes.func,\n        warn: PropTypes.func,\n        touchOnBlur: PropTypes.bool,\n        touchOnChange: PropTypes.bool,\n        triggerSubmit: PropTypes.bool,\n        persistentSubmitErrors: PropTypes.bool,\n        registeredFields: PropTypes.any\n      };\n      var connector = connect(function (state, props) {\n        var form = props.form,\n            getFormState = props.getFormState,\n            initialValues = props.initialValues,\n            enableReinitialize = props.enableReinitialize,\n            keepDirtyOnReinitialize = props.keepDirtyOnReinitialize;\n        var formState = getIn(getFormState(state) || empty, form) || empty;\n        var stateInitial = getIn(formState, 'initial');\n        var initialized = !!stateInitial;\n        var shouldUpdateInitialValues = enableReinitialize && initialized && !deepEqual(initialValues, stateInitial);\n        var shouldResetValues = shouldUpdateInitialValues && !keepDirtyOnReinitialize;\n        var initial = initialValues || stateInitial || empty;\n\n        if (!shouldUpdateInitialValues) {\n          initial = stateInitial || empty;\n        }\n\n        var values = getIn(formState, 'values') || initial;\n\n        if (shouldResetValues) {\n          values = initial;\n        }\n\n        var pristine = shouldResetValues || deepEqual(initial, values);\n        var asyncErrors = getIn(formState, 'asyncErrors');\n        var syncErrors = getIn(formState, 'syncErrors') || plain.empty;\n        var syncWarnings = getIn(formState, 'syncWarnings') || plain.empty;\n        var registeredFields = getIn(formState, 'registeredFields');\n        var valid = isValid(form, getFormState, false)(state);\n        var validExceptSubmit = isValid(form, getFormState, true)(state);\n        var anyTouched = !!getIn(formState, 'anyTouched');\n        var submitting = !!getIn(formState, 'submitting');\n        var submitFailed = !!getIn(formState, 'submitFailed');\n        var submitSucceeded = !!getIn(formState, 'submitSucceeded');\n        var error = getIn(formState, 'error');\n        var warning = getIn(formState, 'warning');\n        var triggerSubmit = getIn(formState, 'triggerSubmit');\n        return {\n          anyTouched: anyTouched,\n          asyncErrors: asyncErrors,\n          asyncValidating: getIn(formState, 'asyncValidating') || false,\n          dirty: !pristine,\n          error: error,\n          initialized: initialized,\n          invalid: !valid,\n          pristine: pristine,\n          registeredFields: registeredFields,\n          submitting: submitting,\n          submitFailed: submitFailed,\n          submitSucceeded: submitSucceeded,\n          syncErrors: syncErrors,\n          syncWarnings: syncWarnings,\n          triggerSubmit: triggerSubmit,\n          values: values,\n          valid: valid,\n          validExceptSubmit: validExceptSubmit,\n          warning: warning\n        };\n      }, function (dispatch, initialProps) {\n        var bindForm = function bindForm(actionCreator) {\n          return actionCreator.bind(null, initialProps.form);\n        }; // Bind the first parameter on `props.form`\n\n\n        var boundFormACs = _mapValues(formActions, bindForm);\n\n        var boundArrayACs = _mapValues(arrayActions, bindForm);\n\n        var boundBlur = function boundBlur(field, value) {\n          return blur(initialProps.form, field, value, !!initialProps.touchOnBlur);\n        };\n\n        var boundChange = function boundChange(field, value) {\n          return change(initialProps.form, field, value, !!initialProps.touchOnChange, !!initialProps.persistentSubmitErrors);\n        };\n\n        var boundFocus = bindForm(focus); // Wrap action creators with `dispatch`\n\n        var connectedFormACs = bindActionCreators(boundFormACs, dispatch);\n        var connectedArrayACs = {\n          insert: bindActionCreators(boundArrayACs.arrayInsert, dispatch),\n          move: bindActionCreators(boundArrayACs.arrayMove, dispatch),\n          pop: bindActionCreators(boundArrayACs.arrayPop, dispatch),\n          push: bindActionCreators(boundArrayACs.arrayPush, dispatch),\n          remove: bindActionCreators(boundArrayACs.arrayRemove, dispatch),\n          removeAll: bindActionCreators(boundArrayACs.arrayRemoveAll, dispatch),\n          shift: bindActionCreators(boundArrayACs.arrayShift, dispatch),\n          splice: bindActionCreators(boundArrayACs.arraySplice, dispatch),\n          swap: bindActionCreators(boundArrayACs.arraySwap, dispatch),\n          unshift: bindActionCreators(boundArrayACs.arrayUnshift, dispatch)\n        };\n        return _extends({}, connectedFormACs, {}, boundArrayACs, {\n          blur: boundBlur,\n          change: boundChange,\n          array: connectedArrayACs,\n          focus: boundFocus,\n          dispatch: dispatch\n        });\n      }, undefined, {\n        forwardRef: true\n      });\n      var ConnectedForm = hoistStatics(connector(Form), WrappedComponent);\n      ConnectedForm.defaultProps = config; // build outer component to expose instance api\n\n      var ReduxForm =\n      /*#__PURE__*/\n      function (_React$Component2) {\n        _inheritsLoose(ReduxForm, _React$Component2);\n\n        function ReduxForm() {\n          var _this4;\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          _this4 = _React$Component2.call.apply(_React$Component2, [this].concat(args)) || this;\n          _this4.ref = React.createRef();\n          return _this4;\n        }\n\n        var _proto2 = ReduxForm.prototype;\n\n        _proto2.submit = function submit() {\n          return this.ref.current && this.ref.current.submit();\n        };\n\n        _proto2.reset = function reset() {\n          if (this.ref) {\n            this.ref.current.reset();\n          }\n        };\n\n        _proto2.render = function render() {\n          var _this$props13 = this.props,\n              initialValues = _this$props13.initialValues,\n              rest = _objectWithoutPropertiesLoose(_this$props13, [\"initialValues\"]);\n\n          return createElement(ConnectedForm, _extends({}, rest, {\n            ref: this.ref,\n            // convert initialValues if need to\n            initialValues: fromJS(initialValues)\n          }));\n        };\n\n        _createClass(ReduxForm, [{\n          key: \"valid\",\n          get: function get() {\n            return !!(this.ref.current && this.ref.current.isValid());\n          }\n        }, {\n          key: \"invalid\",\n          get: function get() {\n            return !this.valid;\n          }\n        }, {\n          key: \"pristine\",\n          get: function get() {\n            return !!(this.ref.current && this.ref.current.isPristine());\n          }\n        }, {\n          key: \"dirty\",\n          get: function get() {\n            return !this.pristine;\n          }\n        }, {\n          key: \"values\",\n          get: function get() {\n            return this.ref.current ? this.ref.current.getValues() : empty;\n          }\n        }, {\n          key: \"fieldList\",\n          get: function get() {\n            // mainly provided for testing\n            return this.ref.current ? this.ref.current.getFieldList() : [];\n          }\n        }, {\n          key: \"wrappedInstance\",\n          get: function get() {\n            // for testing\n            return this.ref.current && this.ref.current.wrapped.current;\n          }\n        }]);\n\n        return ReduxForm;\n      }(React.Component);\n\n      var WithContext = hoistStatics(withReduxForm(ReduxForm), WrappedComponent);\n      WithContext.defaultProps = config;\n      return WithContext;\n    };\n  };\n}","import createReduxForm from './createReduxForm';\nimport plain from './structure/plain';\nexport default createReduxForm(plain);","import createHasError from '../hasError';\nexport default function createIsValid(structure) {\n  var getIn = structure.getIn,\n      keys = structure.keys;\n  var hasError = createHasError(structure);\n  return function (form, getFormState, ignoreSubmitErrors) {\n    if (ignoreSubmitErrors === void 0) {\n      ignoreSubmitErrors = false;\n    }\n\n    return function (state) {\n      var nonNullGetFormState = getFormState || function (state) {\n        return getIn(state, 'form');\n      };\n\n      var formState = nonNullGetFormState(state);\n      var syncError = getIn(formState, form + \".syncError\");\n\n      if (syncError) {\n        return false;\n      }\n\n      if (!ignoreSubmitErrors) {\n        var error = getIn(formState, form + \".error\");\n\n        if (error) {\n          return false;\n        }\n      }\n\n      var syncErrors = getIn(formState, form + \".syncErrors\");\n      var asyncErrors = getIn(formState, form + \".asyncErrors\");\n      var submitErrors = ignoreSubmitErrors ? undefined : getIn(formState, form + \".submitErrors\");\n\n      if (!syncErrors && !asyncErrors && !submitErrors) {\n        return true;\n      }\n\n      var registeredFields = getIn(formState, form + \".registeredFields\");\n\n      if (!registeredFields) {\n        return true;\n      }\n\n      return !keys(registeredFields).filter(function (name) {\n        return getIn(registeredFields, \"['\" + name + \"'].count\") > 0;\n      }).some(function (name) {\n        return hasError(getIn(registeredFields, \"['\" + name + \"']\"), syncErrors, asyncErrors, submitErrors);\n      });\n    };\n  };\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar processProps = function processProps(type, props, _value, deepEqual) {\n  var value = props.value;\n\n  if (type === 'checkbox') {\n    return _extends({}, props, {\n      checked: !!value\n    });\n  }\n\n  if (type === 'radio') {\n    return _extends({}, props, {\n      checked: deepEqual(value, _value),\n      value: _value\n    });\n  }\n\n  if (type === 'select-multiple') {\n    return _extends({}, props, {\n      value: value || []\n    });\n  }\n\n  if (type === 'file') {\n    return _extends({}, props, {\n      value: value || undefined\n    });\n  }\n\n  return props;\n};\n\nexport default function createFieldProps(_ref2, name, _ref) {\n  var getIn = _ref2.getIn,\n      toJS = _ref2.toJS,\n      deepEqual = _ref2.deepEqual;\n\n  var asyncError = _ref.asyncError,\n      asyncValidating = _ref.asyncValidating,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      onDrop = _ref.onDrop,\n      onDragStart = _ref.onDragStart,\n      dirty = _ref.dirty,\n      dispatch = _ref.dispatch,\n      onFocus = _ref.onFocus,\n      form = _ref.form,\n      format = _ref.format,\n      initial = _ref.initial,\n      parse = _ref.parse,\n      pristine = _ref.pristine,\n      props = _ref.props,\n      state = _ref.state,\n      submitError = _ref.submitError,\n      submitFailed = _ref.submitFailed,\n      submitting = _ref.submitting,\n      syncError = _ref.syncError,\n      syncWarning = _ref.syncWarning,\n      validate = _ref.validate,\n      value = _ref.value,\n      _value = _ref._value,\n      warn = _ref.warn,\n      custom = _objectWithoutPropertiesLoose(_ref, [\"asyncError\", \"asyncValidating\", \"onBlur\", \"onChange\", \"onDrop\", \"onDragStart\", \"dirty\", \"dispatch\", \"onFocus\", \"form\", \"format\", \"initial\", \"parse\", \"pristine\", \"props\", \"state\", \"submitError\", \"submitFailed\", \"submitting\", \"syncError\", \"syncWarning\", \"validate\", \"value\", \"_value\", \"warn\"]);\n\n  var error = syncError || asyncError || submitError;\n  var warning = syncWarning;\n\n  var formatFieldValue = function formatFieldValue(value, format) {\n    if (format === null) {\n      return value;\n    }\n\n    var defaultFormattedValue = value == null ? '' : value;\n    return format ? format(value, name) : defaultFormattedValue;\n  };\n\n  var formattedFieldValue = formatFieldValue(value, format);\n  return {\n    input: processProps(custom.type, {\n      name: name,\n      onBlur: onBlur,\n      onChange: onChange,\n      onDragStart: onDragStart,\n      onDrop: onDrop,\n      onFocus: onFocus,\n      value: formattedFieldValue\n    }, _value, deepEqual),\n    meta: _extends({}, toJS(state), {\n      active: !!(state && getIn(state, 'active')),\n      asyncValidating: asyncValidating,\n      autofilled: !!(state && getIn(state, 'autofilled')),\n      dirty: dirty,\n      dispatch: dispatch,\n      error: error,\n      form: form,\n      initial: initial,\n      warning: warning,\n      invalid: !!error,\n      pristine: pristine,\n      submitting: !!submitting,\n      submitFailed: !!submitFailed,\n      touched: !!(state && getIn(state, 'touched')),\n      valid: !error,\n      visited: !!(state && getIn(state, 'visited'))\n    }),\n    custom: _extends({}, custom, {}, props)\n  };\n}","import isEvent from './isEvent';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, isReactNative) {\n  if (isEvent(event)) {\n    if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n      return event.nativeEvent.text;\n    }\n\n    if (isReactNative && event.nativeEvent !== undefined) {\n      return event.nativeEvent.text;\n    }\n\n    var detypedEvent = event;\n    var _detypedEvent$target = detypedEvent.target,\n        type = _detypedEvent$target.type,\n        value = _detypedEvent$target.value,\n        checked = _detypedEvent$target.checked,\n        files = _detypedEvent$target.files,\n        dataTransfer = detypedEvent.dataTransfer;\n\n    if (type === 'checkbox') {\n      return !!checked;\n    }\n\n    if (type === 'file') {\n      return files || dataTransfer && dataTransfer.files;\n    }\n\n    if (type === 'select-multiple') {\n      return getSelectedValues(event.target.options);\n    }\n\n    return value;\n  }\n\n  return event;\n};\n\nexport default getValue;","var isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\nexport default isReactNative;","import getValue from './getValue';\nimport isReactNative from '../isReactNative';\n\nvar onChangeValue = function onChangeValue(event, _ref) {\n  var name = _ref.name,\n      parse = _ref.parse,\n      normalize = _ref.normalize;\n  // read value from input\n  var value = getValue(event, isReactNative); // parse value if we have a parser\n\n  if (parse) {\n    value = parse(value, name);\n  } // normalize value\n\n\n  if (normalize) {\n    value = normalize(name, value);\n  }\n\n  return value;\n};\n\nexport default onChangeValue;","import { isValidElementType } from 'react-is';\n\nvar validateComponentProp = function validateComponentProp(props, propName, componentName) {\n  if (!isValidElementType(props[propName])) {\n    return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`.');\n  }\n\n  return null;\n};\n\nexport default validateComponentProp;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport createFieldProps from './createFieldProps';\nimport onChangeValue from './events/onChangeValue';\nimport { dataKey } from './util/eventConsts';\nimport plain from './structure/plain';\nimport isReactNative from './isReactNative';\nimport validateComponentProp from './util/validateComponentProp';\nimport isEvent from './events/isEvent';\nvar propsToNotUpdateFor = ['_reduxForm'];\n\nvar isObject = function isObject(entity) {\n  return entity && typeof entity === 'object';\n};\n\nvar isFunction = function isFunction(entity) {\n  return entity && typeof entity === 'function';\n};\n\nvar eventPreventDefault = function eventPreventDefault(event) {\n  if (isObject(event) && isFunction(event.preventDefault)) {\n    event.preventDefault();\n  }\n};\n\nvar eventDataTransferGetData = function eventDataTransferGetData(event, key) {\n  if (isObject(event) && isObject(event.dataTransfer) && isFunction(event.dataTransfer.getData)) {\n    return event.dataTransfer.getData(key);\n  }\n};\n\nvar eventDataTransferSetData = function eventDataTransferSetData(event, key, value) {\n  if (isObject(event) && isObject(event.dataTransfer) && isFunction(event.dataTransfer.setData)) {\n    event.dataTransfer.setData(key, value);\n  }\n};\n\nfunction createConnectedField(structure) {\n  var deepEqual = structure.deepEqual,\n      getIn = structure.getIn;\n\n  var getSyncError = function getSyncError(syncErrors, name) {\n    var error = plain.getIn(syncErrors, name); // Because the error for this field might not be at a level in the error structure where\n    // it can be set directly, it might need to be unwrapped from the _error property\n\n    return error && error._error ? error._error : error;\n  };\n\n  var getSyncWarning = function getSyncWarning(syncWarnings, name) {\n    var warning = getIn(syncWarnings, name); // Because the warning for this field might not be at a level in the warning structure where\n    // it can be set directly, it might need to be unwrapped from the _warning property\n\n    return warning && warning._warning ? warning._warning : warning;\n  };\n\n  var ConnectedField =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(ConnectedField, _Component);\n\n    function ConnectedField() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n      _this.ref = React.createRef();\n\n      _this.isPristine = function () {\n        return _this.props.pristine;\n      };\n\n      _this.getValue = function () {\n        return _this.props.value;\n      };\n\n      _this.handleChange = function (event) {\n        var _this$props = _this.props,\n            name = _this$props.name,\n            dispatch = _this$props.dispatch,\n            parse = _this$props.parse,\n            normalize = _this$props.normalize,\n            onChange = _this$props.onChange,\n            _reduxForm = _this$props._reduxForm,\n            previousValue = _this$props.value;\n        var newValue = onChangeValue(event, {\n          name: name,\n          parse: parse,\n          normalize: normalize\n        });\n        var defaultPrevented = false;\n\n        if (onChange) {\n          // Can't seem to find a way to extend Event in React Native,\n          // thus I simply avoid adding preventDefault() in a RN environment\n          // to prevent the following error:\n          // `One of the sources for assign has an enumerable key on the prototype chain`\n          // Reference: https://github.com/facebook/react-native/issues/5507\n          if (!isReactNative && isEvent(event)) {\n            onChange(_extends({}, event, {\n              preventDefault: function preventDefault() {\n                defaultPrevented = true;\n                return eventPreventDefault(event);\n              }\n            }), newValue, previousValue, name);\n          } else {\n            var onChangeResult = onChange(event, newValue, previousValue, name); // Return value of change handler affecting preventDefault is RN\n            // specific behavior.\n\n            if (isReactNative) {\n              defaultPrevented = onChangeResult;\n            }\n          }\n        }\n\n        if (!defaultPrevented) {\n          // dispatch change action\n          dispatch(_reduxForm.change(name, newValue)); // call post-change callback\n\n          if (_reduxForm.asyncValidate) {\n            _reduxForm.asyncValidate(name, newValue, 'change');\n          }\n        }\n      };\n\n      _this.handleFocus = function (event) {\n        var _this$props2 = _this.props,\n            name = _this$props2.name,\n            dispatch = _this$props2.dispatch,\n            onFocus = _this$props2.onFocus,\n            _reduxForm = _this$props2._reduxForm;\n        var defaultPrevented = false;\n\n        if (onFocus) {\n          if (!isReactNative) {\n            onFocus(_extends({}, event, {\n              preventDefault: function preventDefault() {\n                defaultPrevented = true;\n                return eventPreventDefault(event);\n              }\n            }), name);\n          } else {\n            defaultPrevented = onFocus(event, name);\n          }\n        }\n\n        if (!defaultPrevented) {\n          dispatch(_reduxForm.focus(name));\n        }\n      };\n\n      _this.handleBlur = function (event) {\n        var _this$props3 = _this.props,\n            name = _this$props3.name,\n            dispatch = _this$props3.dispatch,\n            parse = _this$props3.parse,\n            normalize = _this$props3.normalize,\n            onBlur = _this$props3.onBlur,\n            _reduxForm = _this$props3._reduxForm,\n            _value = _this$props3._value,\n            previousValue = _this$props3.value;\n        var newValue = onChangeValue(event, {\n          name: name,\n          parse: parse,\n          normalize: normalize\n        }); // for checkbox and radio, if the value property of checkbox or radio equals\n        // the value passed by blur event, then fire blur action with previousValue.\n\n        if (newValue === _value && _value !== undefined) {\n          newValue = previousValue;\n        }\n\n        var defaultPrevented = false;\n\n        if (onBlur) {\n          if (!isReactNative) {\n            onBlur(_extends({}, event, {\n              preventDefault: function preventDefault() {\n                defaultPrevented = true;\n                return eventPreventDefault(event);\n              }\n            }), newValue, previousValue, name);\n          } else {\n            defaultPrevented = onBlur(event, newValue, previousValue, name);\n          }\n        }\n\n        if (!defaultPrevented) {\n          // dispatch blur action\n          dispatch(_reduxForm.blur(name, newValue)); // call post-blur callback\n\n          if (_reduxForm.asyncValidate) {\n            _reduxForm.asyncValidate(name, newValue, 'blur');\n          }\n        }\n      };\n\n      _this.handleDragStart = function (event) {\n        var _this$props4 = _this.props,\n            name = _this$props4.name,\n            onDragStart = _this$props4.onDragStart,\n            value = _this$props4.value;\n        eventDataTransferSetData(event, dataKey, value == null ? '' : value);\n\n        if (onDragStart) {\n          onDragStart(event, name);\n        }\n      };\n\n      _this.handleDrop = function (event) {\n        var _this$props5 = _this.props,\n            name = _this$props5.name,\n            dispatch = _this$props5.dispatch,\n            onDrop = _this$props5.onDrop,\n            _reduxForm = _this$props5._reduxForm,\n            previousValue = _this$props5.value;\n        var newValue = eventDataTransferGetData(event, dataKey);\n        var defaultPrevented = false;\n\n        if (onDrop) {\n          onDrop(_extends({}, event, {\n            preventDefault: function preventDefault() {\n              defaultPrevented = true;\n              return eventPreventDefault(event);\n            }\n          }), newValue, previousValue, name);\n        }\n\n        if (!defaultPrevented) {\n          // dispatch change action\n          dispatch(_reduxForm.change(name, newValue));\n          eventPreventDefault(event);\n        }\n      };\n\n      return _this;\n    }\n\n    var _proto = ConnectedField.prototype;\n\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n      var _this2 = this;\n\n      var nextPropsKeys = Object.keys(nextProps);\n      var thisPropsKeys = Object.keys(this.props); // if we have children, we MUST update in React 16\n      // https://twitter.com/erikras/status/915866544558788608\n\n      return !!(this.props.children || nextProps.children || nextPropsKeys.length !== thisPropsKeys.length || nextPropsKeys.some(function (prop) {\n        if (~(nextProps.immutableProps || []).indexOf(prop)) {\n          return _this2.props[prop] !== nextProps[prop];\n        }\n\n        return !~propsToNotUpdateFor.indexOf(prop) && !deepEqual(_this2.props[prop], nextProps[prop]);\n      }));\n    };\n\n    _proto.getRenderedComponent = function getRenderedComponent() {\n      return this.ref.current;\n    };\n\n    _proto.render = function render() {\n      var _this$props6 = this.props,\n          component = _this$props6.component,\n          forwardRef = _this$props6.forwardRef,\n          name = _this$props6.name,\n          _reduxForm = _this$props6._reduxForm,\n          normalize = _this$props6.normalize,\n          onBlur = _this$props6.onBlur,\n          onChange = _this$props6.onChange,\n          onFocus = _this$props6.onFocus,\n          onDragStart = _this$props6.onDragStart,\n          onDrop = _this$props6.onDrop,\n          immutableProps = _this$props6.immutableProps,\n          rest = _objectWithoutPropertiesLoose(_this$props6, [\"component\", \"forwardRef\", \"name\", \"_reduxForm\", \"normalize\", \"onBlur\", \"onChange\", \"onFocus\", \"onDragStart\", \"onDrop\", \"immutableProps\"]);\n\n      var _createFieldProps = createFieldProps(structure, name, _extends({}, rest, {\n        form: _reduxForm.form,\n        onBlur: this.handleBlur,\n        onChange: this.handleChange,\n        onDrop: this.handleDrop,\n        onDragStart: this.handleDragStart,\n        onFocus: this.handleFocus\n      })),\n          custom = _createFieldProps.custom,\n          props = _objectWithoutPropertiesLoose(_createFieldProps, [\"custom\"]);\n\n      if (forwardRef) {\n        custom.ref = this.ref;\n      }\n\n      if (typeof component === 'string') {\n        var input = props.input,\n            meta = props.meta; // eslint-disable-line no-unused-vars\n        // flatten input into other props\n\n        return createElement(component, _extends({}, input, {}, custom));\n      } else {\n        return createElement(component, _extends({}, props, {}, custom));\n      }\n    };\n\n    return ConnectedField;\n  }(Component);\n\n  ConnectedField.propTypes = {\n    component: validateComponentProp,\n    props: PropTypes.object\n  };\n  var connector = connect(function (state, ownProps) {\n    var name = ownProps.name,\n        _ownProps$_reduxForm = ownProps._reduxForm,\n        initialValues = _ownProps$_reduxForm.initialValues,\n        getFormState = _ownProps$_reduxForm.getFormState;\n    var formState = getFormState(state);\n    var initialState = getIn(formState, \"initial.\" + name);\n    var initial = initialState !== undefined ? initialState : initialValues && getIn(initialValues, name);\n    var value = getIn(formState, \"values.\" + name);\n    var submitting = getIn(formState, 'submitting');\n    var syncError = getSyncError(getIn(formState, 'syncErrors'), name);\n    var syncWarning = getSyncWarning(getIn(formState, 'syncWarnings'), name);\n    var pristine = deepEqual(value, initial);\n    return {\n      asyncError: getIn(formState, \"asyncErrors.\" + name),\n      asyncValidating: getIn(formState, 'asyncValidating') === name,\n      dirty: !pristine,\n      pristine: pristine,\n      state: getIn(formState, \"fields.\" + name),\n      submitError: getIn(formState, \"submitErrors.\" + name),\n      submitFailed: getIn(formState, 'submitFailed'),\n      submitting: submitting,\n      syncError: syncError,\n      syncWarning: syncWarning,\n      initial: initial,\n      value: value,\n      _value: ownProps.value // save value passed in (for radios)\n\n    };\n  }, undefined, undefined, {\n    forwardRef: true\n  });\n  return connector(ConnectedField);\n}\n\nexport default createConnectedField;","export var dataKey = 'text';","import _isEqualWith from \"lodash/isEqualWith\";\n\nvar customizer = function customizer(objectValue, otherValue, indexOrkey, object, other, stack) {\n  // https://lodash.com/docs/4.17.4#isEqualWith\n  if (stack) {\n    // Shallow compares\n    // For 1st level, stack === undefined.\n    //   -> Do nothing (and implicitly return undefined so that it goes to compare 2nd level)\n    // For 2nd level and up, stack !== undefined.\n    //   -> Compare by === operator\n    return objectValue === otherValue;\n  }\n};\n\nvar shallowCompare = function shallowCompare(instance, nextProps, nextState) {\n  var propsEqual = _isEqualWith(instance.props, nextProps, customizer);\n\n  var stateEqual = _isEqualWith(instance.state, nextState, customizer);\n\n  return !propsEqual || !stateEqual;\n};\n\nexport default shallowCompare;","var formatName = function formatName(_ref, name) {\n  var sectionPrefix = _ref._reduxForm.sectionPrefix;\n  return sectionPrefix ? sectionPrefix + \".\" + name : name;\n};\n\nexport default formatName;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport createConnectedField from './ConnectedField';\nimport shallowCompare from './util/shallowCompare';\nimport prefixName from './util/prefixName';\nimport plain from './structure/plain';\nimport { withReduxForm } from './ReduxFormContext';\nimport validateComponentProp from './util/validateComponentProp';\n\nfunction createField(structure) {\n  var ConnectedField = createConnectedField(structure);\n  var setIn = structure.setIn;\n\n  var Field =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Field, _Component);\n\n    function Field(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n      _this.ref = React.createRef();\n\n      _this.normalize = function (name, value) {\n        var normalize = _this.props.normalize;\n\n        if (!normalize) {\n          return value;\n        }\n\n        var previousValues = _this.props._reduxForm.getValues();\n\n        var previousValue = _this.value;\n        var nextValues = setIn(previousValues, name, value);\n        return normalize(value, previousValue, nextValues, previousValues, name);\n      };\n\n      if (!props._reduxForm) {\n        throw new Error('Field must be inside a component decorated with reduxForm()');\n      }\n\n      return _this;\n    }\n\n    var _proto = Field.prototype;\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this2 = this;\n\n      this.props._reduxForm.register(this.name, 'Field', function () {\n        return _this2.props.validate;\n      }, function () {\n        return _this2.props.warn;\n      });\n    };\n\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      return shallowCompare(this, nextProps, nextState);\n    };\n\n    _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n      var oldName = prefixName(this.props, this.props.name);\n      var newName = prefixName(nextProps, nextProps.name);\n\n      if (oldName !== newName || // use deepEqual here because they could be a function or an array of functions\n      !plain.deepEqual(this.props.validate, nextProps.validate) || !plain.deepEqual(this.props.warn, nextProps.warn)) {\n        // unregister old name\n        this.props._reduxForm.unregister(oldName); // register new name\n\n\n        this.props._reduxForm.register(newName, 'Field', function () {\n          return nextProps.validate;\n        }, function () {\n          return nextProps.warn;\n        });\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.props._reduxForm.unregister(this.name);\n    };\n\n    _proto.getRenderedComponent = function getRenderedComponent() {\n      invariant(this.props.forwardRef, 'If you want to access getRenderedComponent(), ' + 'you must specify a forwardRef prop to Field');\n      return this.ref.current ? this.ref.current.getRenderedComponent() : undefined;\n    };\n\n    _proto.render = function render() {\n      return createElement(ConnectedField, _extends({}, this.props, {\n        name: this.name,\n        normalize: this.normalize,\n        ref: this.ref\n      }));\n    };\n\n    _createClass(Field, [{\n      key: \"name\",\n      get: function get() {\n        return prefixName(this.props, this.props.name);\n      }\n    }, {\n      key: \"dirty\",\n      get: function get() {\n        return !this.pristine;\n      }\n    }, {\n      key: \"pristine\",\n      get: function get() {\n        return !!(this.ref.current && this.ref.current.isPristine());\n      }\n    }, {\n      key: \"value\",\n      get: function get() {\n        return this.ref.current && this.ref.current.getValue();\n      }\n    }]);\n\n    return Field;\n  }(Component);\n\n  Field.propTypes = {\n    name: PropTypes.string.isRequired,\n    component: validateComponentProp,\n    format: PropTypes.func,\n    normalize: PropTypes.func,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onDragStart: PropTypes.func,\n    onDrop: PropTypes.func,\n    parse: PropTypes.func,\n    props: PropTypes.object,\n    validate: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.func)]),\n    warn: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.func)]),\n    forwardRef: PropTypes.bool,\n    immutableProps: PropTypes.arrayOf(PropTypes.string),\n    _reduxForm: PropTypes.object\n  };\n  return withReduxForm(Field);\n}\n\nexport default createField;","import createField from './createField';\nimport plain from './structure/plain';\nexport default createField(plain);","import { __assign } from 'tslib';\nexport const assign = __assign;\n","import * as React from 'react';\nimport { IStyle, mergeStyles } from '@uifabric/styling';\nimport { memoizeFunction } from '@uifabric/utilities';\nimport { assign } from './utilities';\nimport { IFactoryOptions } from './IComponent';\nimport {\n  ISlottableReactType,\n  ISlot,\n  ISlots,\n  ISlotDefinition,\n  ISlotFactory,\n  ISlotProp,\n  ISlottableProps,\n  ISlotOptions,\n  IDefaultSlotProps,\n  IProcessedSlotProps,\n  ValidProps,\n  ValidShorthand,\n} from './ISlots';\n\n/**\n * This function is required for any module that uses slots.\n *\n * This function is a slot resolver that automatically evaluates slot functions to generate React elements.\n * A byproduct of this resolver is that it removes slots from the React hierarchy by bypassing React.createElement.\n *\n * To use this function on a per-file basis, use the jsx directive targeting withSlots.\n * This directive must be the FIRST LINE in the file to work correctly.\n * Usage of this pragma also requires withSlots import statement.\n *\n * See React.createElement\n */\n// Can't use typeof on React.createElement since it's overloaded. Approximate createElement's signature for now\n// and widen as needed.\nexport function withSlots<P>(\n  type: ISlot<P> | React.FunctionComponent<P> | string,\n  props?: (React.Attributes & P) | null,\n  // tslint:disable-next-line:missing-optional-annotation\n  ...children: React.ReactNode[]\n): ReturnType<React.FunctionComponent<P>> {\n  const slotType = type as ISlot<P>;\n  if (slotType.isSlot) {\n    // TODO: There is something weird going on here with children embedded in props vs. rest args.\n    // Comment out these lines to see. Make sure this function is doing the right things.\n    const numChildren = React.Children.count(children);\n    if (numChildren === 0) {\n      return slotType(props);\n    }\n\n    // Since we are bypassing createElement, use React.Children.toArray to make sure children are\n    // properly assigned keys.\n    // TODO: should this be mutating? does React mutate children subprop with createElement?\n    // TODO: will toArray clobber existing keys?\n    // TODO: React generates warnings because it doesn't detect hidden member _store that is set in createElement.\n    //        Even children passed to createElement without keys don't generate this warning.\n    //        Is there a better way to prevent slots from appearing in hierarchy? toArray doesn't address root issue.\n    children = React.Children.toArray(children);\n\n    return slotType({ ...(props as any), children });\n  } else {\n    // TODO: Are there some cases where children should NOT be spread? Also, spreading reraises perf question.\n    //        Children had to be spread to avoid breaking KeytipData in Toggle.view:\n    //        react-dom.development.js:18931 Uncaught TypeError: children is not a function\n    //        Without spread, function child is a child array of one element\n    // TODO: is there a reason this can't be:\n    // return React.createElement.apply(this, arguments);\n    return React.createElement(type, props, ...children);\n  }\n}\n\n/**\n * This function creates factories that render ouput depending on the user ISlotProp props passed in.\n * @param DefaultComponent - Base component to render when not overridden by user props.\n * @param options - Factory options, including defaultProp value for shorthand prop mapping.\n * @returns ISlotFactory function used for rendering slots.\n */\nexport function createFactory<TProps extends ValidProps, TShorthandProp extends ValidShorthand = never>(\n  DefaultComponent: React.ComponentType<TProps>,\n  options: IFactoryOptions<TProps> = {},\n): ISlotFactory<TProps, TShorthandProp> {\n  const { defaultProp = 'children' } = options;\n\n  const result: ISlotFactory<TProps, TShorthandProp> = (componentProps, userProps, userSlotOptions, defaultStyles) => {\n    // If they passed in raw JSX, just return that.\n    if (React.isValidElement(userProps)) {\n      return userProps;\n    }\n\n    const flattenedUserProps: TProps | undefined = _translateShorthand(defaultProp as string, userProps);\n    const finalProps = _constructFinalProps(defaultStyles, componentProps, flattenedUserProps);\n\n    if (userSlotOptions) {\n      if (userSlotOptions.component) {\n        // TODO: Remove cast if possible. This cast is needed because TS errors on the intrinsic portion of ReactType.\n        // return <userSlotOptions.component {...finalProps} />;\n        const UserComponent = userSlotOptions.component as React.ComponentType<TProps>;\n        return <UserComponent {...finalProps} />;\n      }\n\n      if (userSlotOptions.render) {\n        return userSlotOptions.render(finalProps, DefaultComponent);\n      }\n    }\n\n    return <DefaultComponent {...finalProps} />;\n  };\n\n  return result;\n}\n\n/**\n * Default factory for components without explicit factories.\n */\nconst defaultFactory = memoizeFunction(type => createFactory(type));\n\n/**\n * This function generates slots that can be used in JSX given a definition of slots and their corresponding types.\n * @param userProps - Props as pass to component.\n * @param slots - Slot definition object defining the default slot component for each slot.\n * @returns A set of created slots that components can render in JSX.\n */\nexport function getSlots<TComponentProps extends ISlottableProps<TComponentSlots>, TComponentSlots>(\n  userProps: TComponentProps,\n  slots: ISlotDefinition<Required<TComponentSlots>>,\n): ISlots<Required<TComponentSlots>> {\n  const result: ISlots<Required<TComponentSlots>> = {} as ISlots<Required<TComponentSlots>>;\n\n  // userProps already has default props mixed in by createComponent. Recast here to gain typing for this function.\n  const mixedProps = userProps as TComponentProps & IDefaultSlotProps<TComponentSlots>;\n\n  for (const name in slots) {\n    if (slots.hasOwnProperty(name)) {\n      // This closure method requires the use of withSlots to prevent unnecessary rerenders. This is because React\n      // detects each closure as a different component (since it is a new instance) from the previous one and then\n      // forces a rerender of the entire slot subtree. For now, the only way to avoid this is to use withSlots, which\n      // bypasses the call to React.createElement.\n      const slot: ISlots<Required<TComponentSlots>>[keyof TComponentSlots] = (componentProps, ...args: any[]) => {\n        if (args.length > 0) {\n          // If React.createElement is being incorrectly used with slots, there will be additional arguments.\n          // We can detect these additional arguments and error on their presence.\n          throw new Error('Any module using getSlots must use withSlots. Please see withSlots javadoc for more info.');\n        }\n        // TODO: having TS infer types here seems to cause infinite loop.\n        //   use explicit types or casting to preserve typing if possible.\n        // TODO: this should be a lookup on TProps property instead of being TProps directly, which is probably\n        //   causing the infinite loop\n        return _renderSlot<any, any, any>(\n          slots[name],\n          // TODO: this cast to any is hiding a relationship issue between the first two args\n          componentProps as any,\n          mixedProps[name],\n          mixedProps.slots && mixedProps.slots[name],\n          // _defaultStyles should always be present, but a check for existence is added to make view tests\n          // easier to use.\n          mixedProps._defaultStyles && mixedProps._defaultStyles[name],\n        );\n      };\n      slot.isSlot = true;\n      result[name] = slot;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Helper function that translates shorthand as needed.\n * @param defaultProp\n * @param slotProps\n */\nfunction _translateShorthand<TProps extends ValidProps, TShorthandProp extends ValidShorthand>(\n  defaultProp: string,\n  slotProps: ISlotProp<TProps, TShorthandProp>,\n): TProps | undefined {\n  let transformedProps: TProps | undefined;\n\n  if (typeof slotProps === 'string' || typeof slotProps === 'number' || typeof slotProps === 'boolean') {\n    transformedProps = {\n      [defaultProp]: slotProps as any,\n    } as TProps;\n  } else {\n    transformedProps = slotProps as TProps;\n  }\n\n  return transformedProps;\n}\n\n/**\n * Helper function that constructs final styles and props given a series of props ordered by increasing priority.\n */\nfunction _constructFinalProps<TProps extends IProcessedSlotProps>(\n  defaultStyles: IStyle,\n  ...allProps: (TProps | undefined)[]\n): TProps {\n  const finalProps: TProps = {} as any;\n  const classNames: (string | undefined)[] = [];\n\n  for (const props of allProps) {\n    classNames.push(props && props.className);\n    assign(finalProps, props);\n  }\n\n  finalProps.className = mergeStyles(defaultStyles, classNames);\n\n  return finalProps;\n}\n\n/**\n * Render a slot given component and user props. Uses component factory if available, otherwise falls back\n * to default factory.\n * @param ComponentType Factory component type.\n * @param componentProps The properties passed into slot from within the component.\n * @param userProps The user properties passed in from outside of the component.\n */\nfunction _renderSlot<\n  TSlotComponent extends ISlottableReactType<TSlotProps, TSlotShorthand>,\n  TSlotProps extends ValidProps,\n  TSlotShorthand extends ValidShorthand\n>(\n  ComponentType: TSlotComponent,\n  componentProps: TSlotProps,\n  userProps: ISlotProp<TSlotProps, TSlotShorthand>,\n  slotOptions: ISlotOptions<TSlotProps> | undefined,\n  defaultStyles: IStyle,\n): ReturnType<React.FunctionComponent> {\n  if (ComponentType.create !== undefined) {\n    return ComponentType.create(componentProps, userProps, slotOptions, defaultStyles);\n  } else {\n    // TODO: need to resolve typing / generic issues passing through memoizeFunction. for now, cast to 'unknown'\n    return ((defaultFactory(ComponentType) as unknown) as ISlotFactory<TSlotProps, TSlotShorthand>)(\n      componentProps,\n      userProps,\n      slotOptions,\n      defaultStyles,\n    );\n  }\n}\n","import * as React from 'react';\nimport { concatStyleSets, IStyleSet, ITheme } from '@uifabric/styling';\nimport { Customizations, CustomizerContext, ICustomizerContext } from '@uifabric/utilities';\nimport { createFactory } from './slots';\nimport { assign } from './utilities';\n\nimport {\n  IComponentOptions,\n  ICustomizationProps,\n  IStyleableComponentProps,\n  IStylesFunctionOrObject,\n  IToken,\n  ITokenFunction,\n  IViewComponent,\n} from './IComponent';\nimport { IDefaultSlotProps, ISlotCreator, ValidProps } from './ISlots';\n\n/**\n * Assembles a higher order component based on the following: styles, theme, view, and state.\n * Imposes a separation of concern and centralizes styling processing to increase ease of use and robustness\n * in how components use and apply styling and theming.\n *\n * Automatically merges and applies themes and styles with theme / styleprops having the highest priority.\n * State component, if provided, is passed in props for processing. Props from state / user are automatically processed\n * and styled before finally being passed to view.\n *\n * State components should contain all stateful behavior and should not generate any JSX, but rather simply call\n * the view prop.\n *\n * Views should simply be stateless pure functions that receive all props needed for rendering their output.\n *\n * State component is optional. If state is not provided, created component is essentially a functional\n * stateless component.\n *\n * @param options - component Component options. See IComponentOptions for more detail.\n */\nexport function createComponent<\n  TComponentProps extends ValidProps,\n  TTokens,\n  TStyleSet extends IStyleSet<TStyleSet>,\n  TViewProps extends TComponentProps = TComponentProps,\n  TStatics = {}\n>(\n  view: IViewComponent<TViewProps>,\n  options: IComponentOptions<TComponentProps, TTokens, TStyleSet, TViewProps, TStatics> = {},\n): React.FunctionComponent<TComponentProps> & TStatics {\n  const { factoryOptions = {} } = options;\n  const { defaultProp } = factoryOptions;\n\n  const result: React.FunctionComponent<TComponentProps> = (\n    componentProps: TComponentProps & IStyleableComponentProps<TViewProps, TTokens, TStyleSet>,\n  ) => {\n    const settings: ICustomizationProps<TViewProps, TTokens, TStyleSet> = _getCustomizations(\n      options.displayName,\n      React.useContext(CustomizerContext),\n      options.fields,\n    );\n\n    const useState = options.state;\n\n    if (useState) {\n      // Don't assume state will return all props, so spread useState result over component props.\n      componentProps = {\n        ...componentProps,\n        ...useState(componentProps),\n      };\n    }\n\n    const theme = componentProps.theme || settings.theme;\n\n    const tokens = _resolveTokens(componentProps, theme, options.tokens, settings.tokens, componentProps.tokens);\n    const styles = _resolveStyles(\n      componentProps,\n      theme,\n      tokens,\n      options.styles,\n      settings.styles,\n      componentProps.styles,\n    );\n\n    const viewProps = {\n      ...componentProps,\n      styles,\n      tokens,\n      _defaultStyles: styles,\n    } as TViewProps & IDefaultSlotProps<any>;\n\n    return view(viewProps);\n  };\n\n  result.displayName = options.displayName || view.name;\n\n  // If a shorthand prop is defined, create a factory for the component.\n  // TODO: This shouldn't be a concern of createComponent.. factoryOptions should just be forwarded.\n  //       Need to weigh creating default factories on component creation vs. memoizing them on use in slots.tsx.\n  if (defaultProp) {\n    (result as ISlotCreator<TComponentProps, any>).create = createFactory(result, { defaultProp });\n  }\n\n  assign(result, options.statics);\n\n  // Later versions of TypeSript should allow us to merge objects in a type safe way and avoid this cast.\n  return result as React.FunctionComponent<TComponentProps> & TStatics;\n}\n\n/**\n * Resolve all styles functions with both props and tokens and flatten results along with all styles objects.\n */\nfunction _resolveStyles<TProps, TTokens, TStyleSet extends IStyleSet<TStyleSet>>(\n  props: TProps,\n  theme: ITheme,\n  tokens: TTokens,\n  ...allStyles: (IStylesFunctionOrObject<TProps, TTokens, TStyleSet> | undefined)[]\n): ReturnType<typeof concatStyleSets> {\n  return concatStyleSets(\n    ...allStyles.map((styles: IStylesFunctionOrObject<TProps, TTokens, TStyleSet> | undefined) =>\n      typeof styles === 'function' ? styles(props, theme, tokens) : styles,\n    ),\n  );\n}\n\n/**\n * Resolve all tokens functions with props flatten results along with all tokens objects.\n */\nfunction _resolveTokens<TViewProps, TTokens>(\n  props: TViewProps,\n  theme: ITheme,\n  ...allTokens: (IToken<TViewProps, TTokens> | false | null | undefined)[]\n): TTokens {\n  const tokens = {};\n\n  for (let currentTokens of allTokens) {\n    if (currentTokens) {\n      // TODO: why is this cast needed? TS seems to think there is a (TToken | Function) union from somewhere.\n      currentTokens =\n        typeof currentTokens === 'function'\n          ? (currentTokens as ITokenFunction<TViewProps, TTokens>)(props, theme)\n          : currentTokens;\n\n      if (Array.isArray(currentTokens)) {\n        currentTokens = _resolveTokens(props, theme, ...currentTokens);\n      }\n\n      assign(tokens, currentTokens);\n    }\n  }\n\n  return tokens as TTokens;\n}\n\n/**\n * Helper function for calling Customizations.getSettings falling back to default fields.\n *\n * @param displayName Displayable name for component.\n * @param context React context passed to component containing contextual settings.\n * @param fields Optional list of properties to grab from global store and context.\n */\nfunction _getCustomizations<TViewProps, TTokens, TStyleSet extends IStyleSet<TStyleSet>>(\n  displayName: string | undefined,\n  context: ICustomizerContext,\n  fields?: string[],\n): ICustomizationProps<TViewProps, TTokens, TStyleSet> {\n  // TODO: do we want field props? should fields be part of IComponent and used here?\n  // TODO: should we centrally define DefaultFields? (not exported from styling)\n  // TODO: tie this array to ICustomizationProps, such that each array element is keyof ICustomizationProps\n  const DefaultFields = ['theme', 'styles', 'tokens'];\n  return Customizations.getSettings(fields || DefaultFields, displayName, context.customizations);\n}\n","/**\n * Functions used by Stack components to simplify style-related computations\n */\n\nimport { ITheme } from '../../Styling';\nimport { IStackProps } from './Stack.types';\n\n// Helper function that converts a themed spacing key (if given) to the corresponding themed spacing value.\nconst _getThemedSpacing = (space: string, theme: ITheme): string => {\n  if (theme.spacing.hasOwnProperty(space)) {\n    return theme.spacing[space as keyof typeof theme.spacing];\n  }\n  return space;\n};\n\n// Helper function that takes a gap as a string and converts it into a { value, unit } representation.\nconst _getValueUnitGap = (gap: string): { value: number; unit: string } => {\n  const numericalPart = parseFloat(gap);\n  const numericalValue = isNaN(numericalPart) ? 0 : numericalPart;\n  const numericalString = isNaN(numericalPart) ? '' : numericalPart.toString();\n\n  const unitPart = gap.substring(numericalString.toString().length);\n\n  return {\n    value: numericalValue,\n    unit: unitPart || 'px'\n  };\n};\n\n/**\n * Takes in a gap size in either a CSS-style format (e.g. 10 or \"10px\")\n *  or a key of a themed spacing value (e.g. \"s1\").\n * Returns the separate numerical value of the padding (e.g. 10)\n *  and the CSS unit (e.g. \"px\").\n */\nexport const parseGap = (\n  gap: IStackProps['gap'],\n  theme: ITheme\n): { rowGap: { value: number; unit: string }; columnGap: { value: number; unit: string } } => {\n  if (gap === undefined || gap === '') {\n    return {\n      rowGap: {\n        value: 0,\n        unit: 'px'\n      },\n      columnGap: {\n        value: 0,\n        unit: 'px'\n      }\n    };\n  }\n\n  if (typeof gap === 'number') {\n    return {\n      rowGap: {\n        value: gap,\n        unit: 'px'\n      },\n      columnGap: {\n        value: gap,\n        unit: 'px'\n      }\n    };\n  }\n\n  const splitGap = gap.split(' ');\n\n  // If the array has more than two values, then return 0px.\n  if (splitGap.length > 2) {\n    return {\n      rowGap: {\n        value: 0,\n        unit: 'px'\n      },\n      columnGap: {\n        value: 0,\n        unit: 'px'\n      }\n    };\n  }\n\n  // If the array has two values, then parse each one.\n  if (splitGap.length === 2) {\n    return {\n      rowGap: _getValueUnitGap(_getThemedSpacing(splitGap[0], theme)),\n      columnGap: _getValueUnitGap(_getThemedSpacing(splitGap[1], theme))\n    };\n  }\n\n  // Else, parse the numerical value and pass it as both the vertical and horizontal gap.\n  const calculatedGap = _getValueUnitGap(_getThemedSpacing(gap, theme));\n\n  return {\n    rowGap: calculatedGap,\n    columnGap: calculatedGap\n  };\n};\n\n/**\n * Takes in a padding in a CSS-style format (e.g. 10, \"10px\", \"10px 10px\", etc.)\n *  where the separate padding values can also be the key of a themed spacing value\n *  (e.g. \"s1 m\", \"10px l1 20px l2\", etc.).\n * Returns a CSS-style padding.\n */\nexport const parsePadding = (padding: number | string | undefined, theme: ITheme): number | string | undefined => {\n  if (padding === undefined || typeof padding === 'number' || padding === '') {\n    return padding;\n  }\n\n  const paddingValues = padding.split(' ');\n  if (paddingValues.length < 2) {\n    return _getThemedSpacing(padding, theme);\n  }\n\n  return paddingValues.reduce((padding1: string, padding2: string) => {\n    return _getThemedSpacing(padding1, theme) + ' ' + _getThemedSpacing(padding2, theme);\n  });\n};\n","import { IStackComponent, IStackStyles, IStackStylesReturnType } from './Stack.types';\nimport { parseGap, parsePadding } from './StackUtils';\nimport { getGlobalClassNames } from '../../Styling';\n\nconst nameMap: { [key: string]: string } = {\n  start: 'flex-start',\n  end: 'flex-end'\n};\n\nconst GlobalClassNames = {\n  root: 'ms-Stack',\n  inner: 'ms-Stack-inner'\n};\n\nexport const styles: IStackComponent['styles'] = (props, theme, tokens): IStackStylesReturnType => {\n  const { verticalFill, horizontal, reversed, gap, grow, wrap, horizontalAlign, verticalAlign, disableShrink, className } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const childrenGap = tokens && tokens.childrenGap ? tokens.childrenGap : gap;\n  const maxHeight = tokens && tokens.maxHeight ? tokens.maxHeight : props.maxHeight;\n  const maxWidth = tokens && tokens.maxWidth ? tokens.maxWidth : props.maxWidth;\n  const padding = tokens && tokens.padding ? tokens.padding : props.padding;\n\n  const { rowGap, columnGap } = parseGap(childrenGap, theme);\n\n  const horizontalMargin = `${-0.5 * columnGap.value}${columnGap.unit}`;\n  const verticalMargin = `${-0.5 * rowGap.value}${rowGap.unit}`;\n\n  // styles to be applied to all direct children regardless of wrap or direction\n  const childStyles = {\n    textOverflow: 'ellipsis'\n  };\n\n  // selectors to be applied regardless of wrap or direction\n  const commonSelectors = {\n    // flexShrink styles are applied by the StackItem\n    '> *:not(.ms-StackItem)': {\n      flexShrink: disableShrink ? 0 : 1\n    }\n  };\n\n  if (wrap) {\n    return {\n      root: [\n        classNames.root,\n        {\n          flexWrap: 'wrap',\n          maxWidth,\n          maxHeight,\n          width: 'auto',\n          overflow: 'visible',\n          height: '100%'\n        },\n        horizontalAlign && {\n          [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign\n        },\n        verticalAlign && {\n          [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign\n        },\n        className,\n        {\n          // not allowed to be overridden by className\n          // since this is necessary in order to prevent collapsing margins\n          display: 'flex'\n        },\n        horizontal && {\n          height: verticalFill ? '100%' : 'auto'\n        }\n      ],\n\n      inner: [\n        classNames.inner,\n        {\n          display: 'flex',\n          flexWrap: 'wrap',\n          marginLeft: horizontalMargin,\n          marginRight: horizontalMargin,\n          marginTop: verticalMargin,\n          marginBottom: verticalMargin,\n          overflow: 'visible',\n          boxSizing: 'border-box',\n          padding: parsePadding(padding, theme),\n          // avoid unnecessary calc() calls if horizontal gap is 0\n          width: columnGap.value === 0 ? '100%' : `calc(100% + ${columnGap.value}${columnGap.unit})`,\n          maxWidth: '100vw',\n\n          selectors: {\n            '> *': {\n              margin: `${0.5 * rowGap.value}${rowGap.unit} ${0.5 * columnGap.value}${columnGap.unit}`,\n\n              ...childStyles\n            },\n            ...commonSelectors\n          }\n        },\n        horizontalAlign && {\n          [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign\n        },\n        verticalAlign && {\n          [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign\n        },\n        horizontal && {\n          flexDirection: reversed ? 'row-reverse' : 'row',\n\n          // avoid unnecessary calc() calls if vertical gap is 0\n          height: rowGap.value === 0 ? '100%' : `calc(100% + ${rowGap.value}${rowGap.unit})`,\n\n          selectors: {\n            '> *': {\n              maxWidth: columnGap.value === 0 ? '100%' : `calc(100% - ${columnGap.value}${columnGap.unit})`\n            }\n          }\n        },\n        !horizontal && {\n          flexDirection: reversed ? 'column-reverse' : 'column',\n          height: `calc(100% + ${rowGap.value}${rowGap.unit})`,\n\n          selectors: {\n            '> *': {\n              maxHeight: rowGap.value === 0 ? '100%' : `calc(100% - ${rowGap.value}${rowGap.unit})`\n            }\n          }\n        }\n      ]\n    } as IStackStyles;\n  }\n\n  return {\n    root: [\n      classNames.root,\n      {\n        display: 'flex',\n        flexDirection: horizontal ? (reversed ? 'row-reverse' : 'row') : reversed ? 'column-reverse' : 'column',\n        flexWrap: 'nowrap',\n        width: 'auto',\n        height: verticalFill ? '100%' : 'auto',\n        maxWidth,\n        maxHeight,\n        padding: parsePadding(padding, theme),\n        boxSizing: 'border-box',\n\n        selectors: {\n          '> *': childStyles,\n\n          // apply gap margin to every direct child except the first direct child if the direction is not reversed,\n          // and the last direct one if it is\n          [reversed ? '> *:not(:last-child)' : '> *:not(:first-child)']: [\n            horizontal && {\n              marginLeft: `${columnGap.value}${columnGap.unit}`\n            },\n            !horizontal && {\n              marginTop: `${rowGap.value}${rowGap.unit}`\n            }\n          ],\n\n          ...commonSelectors\n        }\n      },\n      grow && {\n        flexGrow: grow === true ? 1 : grow\n      },\n      horizontalAlign && {\n        [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign\n      },\n      verticalAlign && {\n        [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign\n      },\n      className\n    ]\n    // TODO: this cast may be hiding some potential issues with styling and name\n    //        lookups and should be removed\n  } as IStackStyles;\n};\n","import { getGlobalClassNames } from '../../../Styling';\nimport { IStackItemComponent, IStackItemStyles, IStackItemStylesReturnType } from './StackItem.types';\n\nconst GlobalClassNames = {\n  root: 'ms-StackItem'\n};\n\nconst alignMap: { [key: string]: string } = {\n  start: 'flex-start',\n  end: 'flex-end'\n};\n\nexport const StackItemStyles: IStackItemComponent['styles'] = (props, theme, tokens): IStackItemStylesReturnType => {\n  const { grow, shrink, disableShrink, align, verticalFill, order, className } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      theme.fonts.medium,\n      classNames.root,\n      {\n        margin: tokens.margin,\n        height: verticalFill ? '100%' : 'auto',\n        width: 'auto'\n      },\n      grow && { flexGrow: grow === true ? 1 : grow },\n      (disableShrink || (!grow && !shrink)) && {\n        flexShrink: 0\n      },\n      shrink &&\n        !disableShrink && {\n          flexShrink: 1\n        },\n      align && {\n        alignSelf: alignMap[align] || align\n      },\n      order && {\n        order: order\n      },\n      className\n    ]\n    // TODO: this cast may be hiding some potential issues with styling and name\n    //        lookups and should be removed\n  } as IStackItemStyles;\n};\n","/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '../../../Foundation';\nimport { IStackItemComponent, IStackItemProps, IStackItemSlots } from './StackItem.types';\nimport { StackItemStyles as styles } from './StackItem.styles';\n\nconst StackItemView: IStackItemComponent['view'] = props => {\n  const { children } = props;\n  if (React.Children.count(children) < 1) {\n    return null;\n  }\n\n  const Slots = getSlots<IStackItemProps, IStackItemSlots>(props, {\n    root: 'div'\n  });\n\n  return <Slots.root>{children}</Slots.root>;\n};\n\nexport const StackItem: React.StatelessComponent<IStackItemProps> = createComponent(StackItemView, {\n  displayName: 'StackItem',\n  styles\n});\n\nexport default StackItem;\n","/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '../../Foundation';\nimport { getNativeProps, htmlElementProperties, warnDeprecations } from '../../Utilities';\nimport { styles } from './Stack.styles';\nimport { IStackComponent, IStackProps, IStackSlots } from './Stack.types';\nimport { StackItem } from './StackItem/StackItem';\nimport { IStackItemProps } from './StackItem/StackItem.types';\n\nconst StackView: IStackComponent['view'] = props => {\n  const { as: RootType = 'div', disableShrink, wrap, ...rest } = props;\n\n  warnDeprecations('Stack', props, {\n    gap: 'tokens.childrenGap',\n    maxHeight: 'tokens.maxHeight',\n    maxWidth: 'tokens.maxWidth',\n    padding: 'tokens.padding'\n  });\n\n  const stackChildren: (React.ReactChild | null)[] = React.Children.map(\n    props.children,\n    (child: React.ReactElement<IStackItemProps>, index: number) => {\n      if (!child) {\n        return null;\n      }\n\n      if (_isStackItem(child)) {\n        const defaultItemProps: IStackItemProps = {\n          shrink: !disableShrink\n        };\n\n        return React.cloneElement(child, {\n          ...defaultItemProps,\n          ...child.props\n        });\n      }\n\n      return child;\n    }\n  );\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(rest, htmlElementProperties);\n\n  const Slots = getSlots<IStackProps, IStackSlots>(props, {\n    root: RootType,\n    inner: 'div'\n  });\n\n  if (wrap) {\n    return (\n      <Slots.root {...nativeProps}>\n        <Slots.inner>{stackChildren}</Slots.inner>\n      </Slots.root>\n    );\n  }\n\n  return <Slots.root {...nativeProps}>{stackChildren}</Slots.root>;\n};\n\nfunction _isStackItem(item: React.ReactNode): item is typeof StackItem {\n  // In theory, we should be able to just check item.type === StackItem.\n  // However, under certain unclear circumstances (see https://github.com/OfficeDev/office-ui-fabric-react/issues/10785),\n  // the object identity is different despite the function implementation being the same.\n  return (\n    !!item &&\n    typeof item === 'object' &&\n    !!(item as React.ReactElement).type &&\n    // StackItem is generated by createComponent, so we need to check its displayName instead of name\n    ((item as React.ReactElement).type as React.ComponentType).displayName === StackItem.displayName\n  );\n}\n\nconst StackStatics = {\n  Item: StackItem\n};\n\nexport const Stack: React.StatelessComponent<IStackProps> & {\n  Item: React.StatelessComponent<IStackItemProps>;\n} = createComponent(StackView, {\n  displayName: 'Stack',\n  styles,\n  statics: StackStatics\n});\n\nexport default Stack;\n","import * as React from 'react';\nimport { BaseComponent, DelayedRender, getId, classNamesFunction, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles, MessageBarType } from './MessageBar.types';\nimport { css } from '@uifabric/utilities';\n\nconst getClassNames = classNamesFunction<IMessageBarStyleProps, IMessageBarStyles>();\n\nexport interface IMessageBarState {\n  labelId?: string;\n  showContent?: boolean;\n  expandSingleLine?: boolean;\n}\n\nexport class MessageBarBase extends BaseComponent<IMessageBarProps, IMessageBarState> {\n  public static defaultProps: IMessageBarProps = {\n    messageBarType: MessageBarType.info,\n    onDismiss: undefined,\n    isMultiline: true\n  };\n\n  private ICON_MAP = {\n    [MessageBarType.info]: 'Info',\n    [MessageBarType.warning]: 'Info',\n    [MessageBarType.error]: 'ErrorBadge',\n    [MessageBarType.blocked]: 'Blocked2',\n    [MessageBarType.remove]: 'Blocked', // TODO remove deprecated value at >= 1.0.0\n    [MessageBarType.severeWarning]: 'Warning',\n    [MessageBarType.success]: 'Completed'\n  };\n\n  private _classNames: { [key in keyof IMessageBarStyles]: string };\n\n  constructor(props: IMessageBarProps) {\n    super(props);\n\n    this.state = {\n      labelId: getId('MessageBar'),\n      showContent: false,\n      expandSingleLine: false\n    };\n  }\n\n  public render(): JSX.Element {\n    const { isMultiline } = this.props;\n\n    this._classNames = this._getClassNames();\n\n    return isMultiline ? this._renderMultiLine() : this._renderSingleLine();\n  }\n\n  private _getActionsDiv(): JSX.Element | null {\n    if (this.props.actions) {\n      return <div className={this._classNames.actions}>{this.props.actions}</div>;\n    }\n    return null;\n  }\n\n  private _getDismissDiv(): JSX.Element | null {\n    const { onDismiss, dismissIconProps } = this.props;\n    if (onDismiss) {\n      return (\n        <IconButton\n          disabled={false}\n          className={this._classNames.dismissal}\n          onClick={onDismiss}\n          iconProps={dismissIconProps ? dismissIconProps : { iconName: 'Clear' }}\n          ariaLabel={this.props.dismissButtonAriaLabel}\n        />\n      );\n    }\n    return null;\n  }\n\n  private _getDismissSingleLine(): JSX.Element | null {\n    if (this.props.onDismiss) {\n      return <div className={this._classNames.dismissSingleLine}>{this._getDismissDiv()}</div>;\n    }\n    return null;\n  }\n\n  private _getExpandSingleLine(): JSX.Element | null {\n    if (!this.props.actions && this.props.truncated) {\n      return (\n        <div className={this._classNames.expandSingleLine}>\n          <IconButton\n            disabled={false}\n            className={this._classNames.expand}\n            onClick={this._onClick}\n            iconProps={{ iconName: this.state.expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' }}\n            ariaLabel={this.props.overflowButtonAriaLabel}\n            aria-expanded={this.state.expandSingleLine}\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private _getIconSpan(): JSX.Element {\n    const { messageBarIconProps } = this.props;\n    return (\n      <div className={this._classNames.iconContainer} aria-hidden>\n        {messageBarIconProps ? (\n          <Icon {...messageBarIconProps} className={css(this._classNames.icon, messageBarIconProps.className)} />\n        ) : (\n          <Icon iconName={this.ICON_MAP[this.props.messageBarType!]} className={this._classNames.icon} />\n        )}\n      </div>\n    );\n  }\n\n  private _renderMultiLine(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    const { theme } = this.props;\n\n    return (\n      <div style={{ background: theme!.semanticColors.bodyBackground }}>\n        <div className={this._classNames.root} {...this._getRegionProps()}>\n          <div className={this._classNames.content}>\n            {this._getIconSpan()}\n            {this._renderInnerText()}\n            {this._getDismissDiv()}\n          </div>\n          {this._getActionsDiv()}\n        </div>\n      </div>\n    );\n  }\n\n  private _renderSingleLine(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    const { theme } = this.props;\n    return (\n      <div style={{ background: theme!.semanticColors.bodyBackground }}>\n        <div className={this._classNames.root} {...this._getRegionProps()}>\n          <div className={this._classNames.content}>\n            {this._getIconSpan()}\n            {this._renderInnerText()}\n            {this._getExpandSingleLine()}\n            {this._getActionsDiv()}\n            {this._getDismissSingleLine()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderInnerText(): JSX.Element {\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLSpanElement>>(this.props, htmlElementProperties, ['className']);\n\n    return (\n      <div className={this._classNames.text} id={this.state.labelId} role=\"status\" aria-live={this._getAnnouncementPriority()}>\n        <span className={this._classNames.innerText} {...nativeProps}>\n          <DelayedRender>\n            <span>{this.props.children}</span>\n          </DelayedRender>\n        </span>\n      </div>\n    );\n  }\n\n  private _getRegionProps = () => {\n    const hasActions = !!this._getActionsDiv() || !!this._getDismissDiv();\n    const regionProps = {\n      'aria-describedby': this.state.labelId,\n      role: 'region'\n    };\n\n    return hasActions ? regionProps : {};\n  };\n\n  private _getClassNames(): { [key in keyof IMessageBarStyles]: string } {\n    const { theme, className, messageBarType, onDismiss, actions, truncated, isMultiline } = this.props;\n    const { expandSingleLine } = this.state;\n\n    return getClassNames(this.props.styles!, {\n      theme: theme!,\n      messageBarType: messageBarType || MessageBarType.info,\n      onDismiss: onDismiss !== undefined,\n      actions: actions !== undefined,\n      truncated: truncated,\n      isMultiline: isMultiline,\n      expandSingleLine: expandSingleLine,\n      className\n    });\n  }\n\n  private _getAnnouncementPriority(): 'assertive' | 'polite' {\n    switch (this.props.messageBarType) {\n      case MessageBarType.blocked:\n      case MessageBarType.error:\n      case MessageBarType.severeWarning:\n        return 'assertive';\n    }\n    return 'polite';\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n    this.setState({ expandSingleLine: !this.state.expandSingleLine });\n  };\n}\n","import {\n  IStyle,\n  IPalette,\n  ISemanticColors,\n  HighContrastSelector,\n  ScreenWidthMaxSmall,\n  getScreenSelector,\n  getGlobalClassNames,\n  getFocusStyle,\n  IconFontSizes\n} from '../../Styling';\nimport { IMessageBarStyleProps, IMessageBarStyles, MessageBarType } from './MessageBar.types';\n\nconst GlobalClassNames = {\n  root: 'ms-MessageBar',\n  error: 'ms-MessageBar--error',\n  blocked: 'ms-MessageBar--blocked',\n  severeWarning: 'ms-MessageBar--severeWarning',\n  success: 'ms-MessageBar--success',\n  warning: 'ms-MessageBar--warning',\n  multiline: 'ms-MessageBar-multiline',\n  singleline: 'ms-MessageBar-singleline',\n  dismissalSingleLine: 'ms-MessageBar-dismissalSingleLine',\n  expandingSingleLine: 'ms-MessageBar-expandingSingleLine',\n  content: 'ms-MessageBar-content',\n  iconContainer: 'ms-MessageBar-icon',\n  text: 'ms-MessageBar-text',\n  innerText: 'ms-MessageBar-innerText',\n  dismissSingleLine: 'ms-MessageBar-dismissSingleLine',\n  expandSingleLine: 'ms-MessageBar-expandSingleLine',\n  dismissal: 'ms-MessageBar-dismissal',\n  expand: 'ms-MessageBar-expand',\n  actions: 'ms-MessageBar-actions',\n  actionsSingleline: 'ms-MessageBar-actionsSingleLine'\n};\n\n// Returns the background color of the MessageBar root element based on the type of MessageBar.\nconst getRootBackground = (messageBarType: MessageBarType | undefined, palette: IPalette, semanticColors: ISemanticColors): string => {\n  switch (messageBarType) {\n    case MessageBarType.error:\n    case MessageBarType.blocked:\n      return semanticColors.errorBackground;\n    case MessageBarType.severeWarning:\n      return semanticColors.blockingBackground;\n    case MessageBarType.success:\n      return semanticColors.successBackground;\n    case MessageBarType.warning:\n      return semanticColors.warningBackground;\n  }\n  return palette.neutralLighter;\n};\n\n// Returns the icon color based on the type of MessageBar.\nconst getIconColor = (messageBarType: MessageBarType | undefined, palette: IPalette, semanticColors: ISemanticColors): string => {\n  switch (messageBarType) {\n    case MessageBarType.error:\n    case MessageBarType.blocked:\n    case MessageBarType.severeWarning:\n      return semanticColors.errorText;\n    case MessageBarType.success:\n      return palette.green;\n    case MessageBarType.warning:\n      return semanticColors.warningText;\n  }\n  return palette.neutralSecondary;\n};\n\nexport const getStyles = (props: IMessageBarStyleProps): IMessageBarStyles => {\n  const { theme, className, messageBarType, onDismiss, truncated, isMultiline, expandSingleLine } = props;\n  const { semanticColors, palette, fonts } = theme;\n\n  const SmallScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const dismissalAndExpandIconStyle: IStyle = {\n    fontSize: IconFontSizes.xSmall,\n    height: 10,\n    lineHeight: '10px',\n    color: palette.neutralPrimary,\n    selectors: {\n      [HighContrastSelector]: {\n        MsHighContrastAdjust: 'none',\n        color: 'Window'\n      }\n    }\n  };\n\n  const dismissalAndExpandStyle: IStyle = [\n    getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: {\n        outlineOffset: '-4px',\n        outlineColor: 'Window'\n      },\n      borderColor: 'transparent'\n    }),\n    {\n      flexShrink: 0,\n      width: 32,\n      height: 32,\n      padding: '8px 12px',\n      selectors: {\n        '& .ms-Button-icon': dismissalAndExpandIconStyle,\n        ':hover': {\n          backgroundColor: 'transparent'\n        },\n        ':active': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      messageBarType === MessageBarType.error && classNames.error,\n      messageBarType === MessageBarType.blocked && classNames.blocked,\n      messageBarType === MessageBarType.severeWarning && classNames.severeWarning,\n      messageBarType === MessageBarType.success && classNames.success,\n      messageBarType === MessageBarType.warning && classNames.warning,\n      isMultiline ? classNames.multiline : classNames.singleline,\n      !isMultiline && onDismiss && classNames.dismissalSingleLine,\n      !isMultiline && truncated && classNames.expandingSingleLine,\n      {\n        background: getRootBackground(messageBarType, palette, semanticColors),\n        color: palette.neutralPrimary,\n        minHeight: 32,\n        width: '100%',\n        display: 'flex',\n        wordBreak: 'break-word',\n        selectors: {\n          '& .ms-Link': {\n            color: palette.themeDark,\n            ...fonts.small\n          },\n          [HighContrastSelector]: {\n            background: 'WindowText',\n            color: 'Window'\n          }\n        }\n      },\n      isMultiline && {\n        flexDirection: 'column'\n      },\n      className\n    ],\n    content: [\n      classNames.content,\n      {\n        display: 'flex',\n        width: '100%',\n        lineHeight: 'normal'\n      }\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        fontSize: IconFontSizes.medium,\n        minWidth: 16,\n        minHeight: 16,\n        display: 'flex',\n        flexShrink: 0,\n        margin: '8px 0 8px 12px'\n      }\n    ],\n    icon: {\n      color: getIconColor(messageBarType, palette, semanticColors),\n      selectors: {\n        [HighContrastSelector]: {\n          MsHighContrastAdjust: 'none',\n          color: 'Window'\n        }\n      }\n    },\n    text: [\n      classNames.text,\n      {\n        minWidth: 0,\n        display: 'flex',\n        flexGrow: 1,\n        margin: 8,\n        ...fonts.small,\n        selectors: {\n          [HighContrastSelector]: {\n            MsHighContrastAdjust: 'none'\n          }\n        }\n      },\n      !onDismiss && {\n        marginRight: 12\n      }\n    ],\n    innerText: [\n      classNames.innerText,\n      {\n        lineHeight: 16,\n        selectors: {\n          '& span a': {\n            paddingLeft: 4\n          }\n        }\n      },\n      truncated && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap'\n      },\n      !isMultiline && {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap'\n      },\n      !isMultiline &&\n        !truncated && {\n          selectors: {\n            [SmallScreenSelector]: {\n              overflow: 'visible',\n              whiteSpace: 'pre-wrap'\n            }\n          }\n        },\n      expandSingleLine && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap'\n      }\n    ],\n    dismissSingleLine: [classNames.dismissSingleLine],\n    expandSingleLine: [classNames.expandSingleLine],\n    dismissal: [classNames.dismissal, dismissalAndExpandStyle],\n    expand: [classNames.expand, dismissalAndExpandStyle],\n    actions: [\n      isMultiline ? classNames.actions : classNames.actionsSingleline,\n      {\n        display: 'flex',\n        flexGrow: 0,\n        flexShrink: 0,\n        flexBasis: 'auto',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        margin: '0 12px 0 8px',\n        selectors: {\n          '& button:nth-child(n+2)': {\n            marginLeft: 8\n          }\n        }\n      },\n      isMultiline && {\n        marginBottom: 8\n      },\n      onDismiss &&\n        !isMultiline && {\n          marginRight: 0\n        }\n    ]\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { MessageBarBase } from './MessageBar.base';\nimport { getStyles } from './MessageBar.styles';\nimport { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nexport const MessageBar: React.StatelessComponent<IMessageBarProps> = styled<IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles>(\n  MessageBarBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'MessageBar'\n  }\n);\n"],"sourceRoot":""}